{
    "version": "https://jsonfeed.org/version/1",
    "title": "潇潇先生个人博客",
    "subtitle": "",
    "icon": "http://whw-colab.github.io/images/favicon.ico",
    "description": "学习永无止尽，奋斗永不停歇",
    "home_page_url": "http://Whw-colab.github.io",
    "items": [
        {
            "id": "http://whw-colab.github.io/2025/04/17/CTF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "http://whw-colab.github.io/2025/04/17/CTF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "",
            "date_published": "2025-04-17T12:53:53.284Z",
            "content_html": "<h1 id=\"ctf学习笔记\"><a class=\"anchor\" href=\"#ctf学习笔记\">#</a> CTF 学习笔记</h1>\n<h2 id=\"ctf\"><a class=\"anchor\" href=\"#ctf\">#</a> CTF</h2>\n<h3 id=\"定义\"><a class=\"anchor\" href=\"#定义\">#</a> 定义</h3>\n<p>CTF 就像一场 “黑客版的寻宝游戏”，参赛者通过破解密码、挖漏洞、逆向程序等技术手段，在虚拟世界里找到隐藏的 “flag”（一串特定字符），谁找得快、技术强谁就赢。</p>\n<h3 id=\"竞赛模式\"><a class=\"anchor\" href=\"#竞赛模式\">#</a> 竞赛模式</h3>\n<ol>\n<li>\n<p>解题模式（Jeopardy）</p>\n<p><em><strong>* 核心机制 *</strong></em>：通过解决安全技术题目获取 flag，按题目分值和解题时间排名，常见于线上选拔赛。</p>\n<p><em><strong>* 动态积分规则 *</strong></em>：题目初始分值随解题人数增加而递减，前三名（一血、二血、三血）获得额外奖励分。</p>\n<p><em><strong>* 题型分类 *</strong></em>：Web 渗透、逆向工程、密码学、安全杂项（MISC）、二进制漏洞（PWN）等。</p>\n<p><strong>玩法</strong>：像<mark>做试卷</mark>，题目分类型（如密码破译、逆向工程、Web 漏洞等），解出题目后提交隐藏的 flag 就能得分。</p>\n<p><strong>特点</strong>：</p>\n<ul>\n<li>题目难度越高分越多，但解题人数越多分越少（动态积分）。</li>\n<li>适合线上赛，比如预选赛，团队可自由组队，拼脑力和技术积累。</li>\n</ul>\n<p><strong>举例</strong>：给你一个网站，找 SQL 注入漏洞拿 flag，类似 “黑客版奥数题”。</p>\n</li>\n<li>\n<p>攻防模式（Attack-Defense） （<mark>黑客版真人 CS**</mark>）</p>\n<p><em><strong>* 核心机制 *</strong></em>：各队伍拥有相同漏洞的服务器（GameBox），攻击对手服务得分，修补自身漏洞防御扣分，实时对抗性强。</p>\n<p><em><strong>* 计分规则 *</strong></em>：每轮得分取决于攻击成功次数和防御状态，服务宕机将扣分。</p>\n<p><em><strong>* 特点 *</strong></em>：高强度持续 24-48 小时，考验团队协作和体力。</p>\n</li>\n<li>\n<p><strong>ADP 攻防增强模式</strong></p>\n<p>一句话总结就是 ==<strong>“黑客版的一题两吃”</strong>==：每个题目只需完成一次攻击（拿 flag）和一次防御（修漏洞），做完就扔，不用反复折腾。</p>\n<h3 id=\"举个栗子\"><a class=\"anchor\" href=\"#举个栗子\">#</a> <strong>举个栗子🌰：</strong></h3>\n<p>​\t假设题目是一个<strong>带漏洞的网站</strong>，ADP 模式下你要做两件事：</p>\n<p>​\t\t1️⃣ <strong>攻击</strong>：找到漏洞（比如 SQL 注入），拿到 flag 提交得分（类似解题模式）。</p>\n<p>​\t\t2️⃣ <strong>防御</strong>：给漏洞打补丁（比如过滤 SQL 语句），上传补丁到平台验证，确认修好后得分。</p>\n<p>​\t<strong>这题就算完事了！</strong> 之后不用再管它，专心搞其他题目就行。</p>\n<h3 id=\"和传统攻防awd的区别\"><a class=\"anchor\" href=\"#和传统攻防awd的区别\">#</a> <strong>和传统攻防（AwD）的区别</strong>：</h3>\n<table>\n<thead>\n<tr>\n<th><strong>对比项</strong></th>\n<th><strong>传统攻防（AwD）</strong></th>\n<th><strong>ADP 攻防增强</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>攻击方式</strong></td>\n<td>全程用脚本批量攻击对手，抢 flag 刷分</td>\n<td>每个题只需攻击一次，提交 flag 就停手</td>\n</tr>\n<tr>\n<td><strong>防御方式</strong></td>\n<td>边修漏洞边防对手攻击，服务崩了会疯狂扣分</td>\n<td>修好漏洞并验证通过后，这题永远不扣分了</td>\n</tr>\n<tr>\n<td><strong>选手压力</strong></td>\n<td>熬夜修漏洞 + 写攻击脚本，像打仗一样累</td>\n<td>像做作业，一题两步骤，做完就躺平</td>\n</tr>\n<tr>\n<td><strong>主办方压力</strong></td>\n<td>要维护几十台服务器，防止被选手打崩</td>\n<td>题目环境用完就删，省电省服务器</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"adp的核心优势\"><a class=\"anchor\" href=\"#adp的核心优势\">#</a> <strong>ADP 的核心优势</strong>：</h3>\n<ol>\n<li><strong>选手省力</strong>：不用写自动化脚本，不用盯着服务是否崩溃，专注解题和修漏洞本身。</li>\n<li><strong>主办方省钱</strong>：题目环境用完就销毁，不用扛住几百个队伍的持续攻击。</li>\n<li><strong>题目灵活</strong>：比赛过程中可以随时换题（比如旧题下线，新题上线），增加新鲜感。</li>\n</ol>\n<h3 id=\"适合谁玩\"><a class=\"anchor\" href=\"#适合谁玩\">#</a> <strong>适合谁玩？</strong></h3>\n<ul>\n<li><strong>新手友好</strong>：适合刚接触攻防模式的小白，<mark>不用学写攻击脚本</mark>。</li>\n<li><strong>中小型比赛</strong>：比如企业内训、高校校赛，运维成本低。</li>\n<li><mark><strong>专精 Web/PWN 的选手</strong></mark>：ADP 通常只出这两种题型，其他方向（如逆向、密码学）不参与。</li>\n</ul>\n<p><strong>总结</strong>：<mark>ADP 就是 **“简化版攻防”**，把持续对抗拆成单次任务，让选手和主办方都轻松点～</mark></p>\n</li>\n<li>\n<p>混合模式（Mix） （<mark><strong>解题 + 攻防二合一</strong></mark>）</p>\n</li>\n</ol>\n<p><em><strong>* 机制 *</strong></em>：结合解题与攻防，解题获取基础分后进入攻防对抗，分数动态增减。</p>\n<p><em><strong>* 典型赛事 *</strong></em>：iCTF 国际赛、RealWorld CTF（RWCTF）。</p>\n<ol start=\"5\">\n<li>其他衍生模式</li>\n</ol>\n<p>​\t<em><strong>*KoH（抢占山头）*</strong></em>：攻击并控制中央服务器，写入队伍标识后防御加固，定期判定得分。</p>\n<p>​\t<mark><strong>RW（真实世界）</strong></mark>：模拟真实漏洞利用，比如攻击物联网设备。</p>\n<p>​\t<em><strong>* 战争分享模式 *</strong></em>：队伍互相出题 + 解题 + 分享思路，综合评分。</p>\n<p>​\t<em><strong>*AI 自动化（RHG）*</strong></em>：编写自动化程序（bot）全自动挖掘漏洞并提交 flag。</p>\n<h3 id=\"ctf主要题型及考察重点\"><a class=\"anchor\" href=\"#ctf主要题型及考察重点\">#</a> CTF 主要题型及考察重点</h3>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 题型          | 考察内容                  | 常用工具/技能                              |</span><br><span class=\"line\">|---------------|--------------------------------------------------------------------------|--------------------------------------------|</span><br><span class=\"line\">| <span class=\"strong\">**Web**</span>       | SQL注入、XSS、文件上传、代码审计等漏洞利用      | Burp Suite、sqlmap、浏览器开发者工具 |</span><br><span class=\"line\">| <span class=\"strong\">**Reverse**</span>   | 软件逆向分析、反编译、反调试                    | IDA Pro、OllyDbg、GDB         |</span><br><span class=\"line\">| <span class=\"strong\">**PWN**</span>       | 二进制漏洞利用（栈溢出、堆溢出等）              | pwntools、ROPgadget           |</span><br><span class=\"line\">| <span class=\"strong\">**Crypto**</span>    | 古典密码（如凯撒密码）、现代加密算法（AES、RSA）及自创加密技术破解   | CryptoSearcher、RSATool2       |</span><br><span class=\"line\">| <span class=\"strong\">**MISC**</span>      | 隐写术、流量分析、电子取证、数据编码/解码              | Stegsolve、Wireshark、Binwalk |</span><br><span class=\"line\">| <span class=\"strong\">**Mobile**</span>    | 安卓逆向分析、APK反编译                               | AndroidKiller、jd-gui         |</span><br><span class=\"line\">| <span class=\"strong\">**PPC**</span>       | 编程算法实现（如批量数据处理）                      | Python、C语言              </span><br></pre></td></tr></table></figure></p>\n<h3 id=\"ctf学习路线\"><a class=\"anchor\" href=\"#ctf学习路线\">#</a> CTF 学习路线</h3>\n<ol>\n<li>\n<p>初期基础</p>\n<p><em><strong>*Web 开发 *</strong></em>：HTML/CSS/JS、PHP+MySQL 开发动态网站，掌握基础漏洞原理（如 SQL 注入）。</p>\n<p><em><strong>* 工具入门 *</strong></em>：Burp Suite 抓包改包、Python 脚本编写（requests 库）。</p>\n</li>\n<li>\n<p>中期漏洞专项</p>\n<p><em><strong>* 核心漏洞 *</strong></em>：SQL 注入、文件上传、命令执行（RCE）、XSS/CSRF。</p>\n<p><em><strong>* 靶场练习 *</strong></em>：sqli-labs、upload-labs、DVWA。</p>\n</li>\n<li>\n<p>后期综合实战</p>\n<p><em><strong>* 赛事参与 *</strong></em>：BUUCTF、CTFHub 等平台刷题，参与校赛 / XCTF 联赛。</p>\n<p><em><strong>* 知识扩展 *</strong></em>：逆向工程（《加密与解密》）、二进制漏洞（《IDA Pro 权威指南》）。</p>\n</li>\n</ol>\n<h3 id=\"比赛形式\"><a class=\"anchor\" href=\"#比赛形式\">#</a> 比赛形式</h3>\n<p>CTF 比赛一般分为线上赛和线下赛。通常来说，线上赛多为 <code>初赛</code> ，线下赛多为 <code>决赛</code> ，但是也不排除直接进行</p>\n<h4 id=\"线上\"><a class=\"anchor\" href=\"#线上\">#</a> 线上</h4>\n<p>选手通过主办方搭建的比赛平台在线注册，在线做题并提交 flag，线上比赛多为解题模式，攻防模式较为少见。通常来说对于长时间未解出的题目，主办方会酌情给出 == 提示 ( <code>Hint</code> )== 来帮助选手做题。</p>\n<h4 id=\"线下\"><a class=\"anchor\" href=\"#线下\">#</a> 线下</h4>\n<p>选手前往比赛所在地，现场接入比赛网络进行比赛，<mark>线下多为 AWD 模式</mark>，近年来随着比赛赛制的不断革新，线下赛也会出现多种模式混合进行，例如<mark>结合<strong>解题 + AWD</strong> ，<strong>解题 + RW</strong></mark> 等等</p>\n<h3 id=\"题目类型\"><a class=\"anchor\" href=\"#题目类型\">#</a> 题目类型</h3>\n<p>​\t在 CTF 中主要包含以下 5 个大类的题目，有些比赛会根据自己的侧重点单独添加某个分类，例如 == <code>移动设备(Mobile)</code> ,  <code>电子取证(Forensics)</code> == 等，近年来也会出来混合类型的题目，例如在 Web 中存在一个二进制程序，需要选手先利用 Web 的漏洞获取到二进制程序，之后通过逆向或是 Pwn 等方式获得最终 flag</p>\n<h4 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h4>\n<p>​\tWeb 类题目大部分情况下和网、Web、HTTP 等相关技能有关。主要考察选手对于 Web 攻防的一些知识技巧。诸如 == <code>SQL注入</code> 、 <code>XSS</code> 、 <code>代码执行</code> 、 <code>代码审计</code>  == 等等都是很常见的考点。一般情况下 Web 题目只会给出一个能够访问的 URL。部分题目会给出附件</p>\n<h4 id=\"pwn\"><a class=\"anchor\" href=\"#pwn\">#</a> Pwn</h4>\n<p>​\tPwn 类题目重点考察选手对于 == <code>二进制漏洞的挖掘和利用</code> <mark>能力，其考点也通常在</mark> <code>堆栈溢出</code> 、 <code>格式化漏洞</code> 、 <code>UAF</code> 、 <code>Double Free</code> == 等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本 ( <code>Exploit</code> )，进而对主办方给出的远程服务器进行攻击并获取 flag 通常来说 Pwn 类题目给出的远程服务器信息为 <code>nc IP_ADDRESS PORT</code> ，例如 <code>nc 1.2.3.4 4567</code>  这种形式，表示在 <code>1.2.3.4</code>  这个 IP 的 <code>4567</code>  端口上运行了该题目</p>\n<h4 id=\"reverse\"><a class=\"anchor\" href=\"#reverse\">#</a> Reverse</h4>\n<p>Re 类题目考察选手 <code>逆向工程</code> 能力。题目会给出一个<mark>可执行二进制文件</mark>，有些时候也可能是 Android 的 APK 安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得 flag</p>\n<h4 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h4>\n<p>​\tCrypto 类题目考察选手对 <code>密码学</code> 相关知识的了解程度，诸如 <code>RSA</code> 、 <code>AES</code> 、 <code>DES</code>  等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。</p>\n<h4 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> Misc</h4>\n<p>​\tMisc 意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出 flag。</p>\n<p>​\t常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT 相关等等。五花八门，种类繁多。</p>\n<h2 id=\"刷题网站\"><a class=\"anchor\" href=\"#刷题网站\">#</a> 刷题网站</h2>\n<h3 id=\"ctfhub\"><a class=\"anchor\" href=\"#ctfhub\">#</a> CTFHub</h3>\n<h4 id=\"misc-2\"><a class=\"anchor\" href=\"#misc-2\">#</a> Misc</h4>\n<h5 id=\"流量分析\"><a class=\"anchor\" href=\"#流量分析\">#</a> 流量分析</h5>\n<h6 id=\"数据库流量\"><a class=\"anchor\" href=\"#数据库流量\">#</a> 数据库流量</h6>\n<ul>\n<li>\n<h5 id=\"mysql流量\"><a class=\"anchor\" href=\"#mysql流量\">#</a> Mysql 流量</h5>\n</li>\n</ul>\n<p>服务端回一个 Response OK , 至此，登录验证就算是完成啦～</p>\n<p>后面客户端向服务端发起查询请求：</p>\n<pre><code>==select @@version_comment limit 1==\n</code></pre>\n<p>注意得选择<mark>分组字节流</mark>才行</p>\n<ul>\n<li>\n<h5 id=\"redis流量\"><a class=\"anchor\" href=\"#redis流量\">#</a> Redis 流量</h5>\n</li>\n<li>\n<h5 id=\"mongodb流量\"><a class=\"anchor\" href=\"#mongodb流量\">#</a> MongoDB 流量</h5>\n</li>\n</ul>\n<p>注意：搜索时要这样才行 ==ctfhub {== 不然找不到。</p>\n<h6 id=\"协议流量分析\"><a class=\"anchor\" href=\"#协议流量分析\">#</a> 协议流量分析</h6>\n<ul>\n<li>ICMP-data</li>\n</ul>\n<p>注意：tshark - r &quot;xxx&quot; -Y &quot;相关筛选命令&quot; -T fields -e data &gt; xxx</p>\n<p><mark>关键参数</mark>：</p>\n<ul>\n<li>-Y &quot;icmp &amp;&amp; icmp.type==8&quot;：过滤 ICMP 类型为 8（Echo Request）的包 。\n<ul>\n<li><mark>这边等于 0 和 8 都可以，8 代表请求包，0 代表应答包</mark></li>\n</ul>\n</li>\n<li>-T fields -e data：仅输出 data 字段的十六进制内容 。</li>\n<li>flag.txt：将结果重定向到文件。</li>\n</ul>\n<p>常见 CTF 题型分析<br />\n单向传输（Type 8）：<br />\nFlag 数据通过客户端发送的多个请求包传输（如每个包携带一个字符）。</p>\n<p>​\t\t解法：过滤 Type 8 并提取 data。<br />\n​\t双向传输（Type 8 + Type 0）：<br />\n​\t\tFlag 可能分散在请求和响应包中（需同时分析两者）。</p>\n<p>​\t\t解法：过滤 icmp（不限制 Type），再根据包方向（ip.src/ip.dst）分类处理。</p>\n<p>​\t隐蔽回传（Type 0）：<br />\n​\t\t恶意程序通过响应包将敏感数据回传给攻击者（如数据外泄）。</p>\n<p>​\t\t解法：过滤 Type 0 并提取 data。</p>\n<p><mark><strong>总结</strong></mark></p>\n<ul>\n<li><strong>Type 8 vs Type 0</strong>：取决于 Flag 数据的<strong>传输方向</strong>（谁发送的包）。</li>\n<li><strong>CTF 经验法则</strong>： 如果题目提示 “客户端发送了异常 Ping 包”，优先用 <code>Type 8</code> ；若提示 “服务器返回了异常应答”，则用 <code>Type 0</code> 。</li>\n</ul>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding = utf-8</span></span><br><span class=\"line\"><span class=\"comment\"># --author：valecalida--</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> os <span class=\"keyword\">import</span> system <span class=\"keyword\">as</span> get_hex</span><br><span class=\"line\"><span class=\"comment\"># 调用tshark时需要将tshark加入环境变量，且脚本需要与流量包在一个路径下</span></span><br><span class=\"line\"> </span><br><span class=\"line\">get_hex(<span class=\"string\">&quot;C:\\\\HelloCTF\\\\Toolkit\\\\Forensic\\\\Wireshark\\\\tshark -r C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\868_11254f60d1efdd79d251ec10b3db0f455262726b\\\\icmp_data.pcap -Y \\&quot;icmp &amp;&amp; icmp.type==8\\&quot; -T fields -e data &gt; flag.txt&quot;</span>)</span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;flag.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f.readlines():</span><br><span class=\"line\">    <span class=\"comment\">#int(..., 16)将十六进制字符串转为十进制整数</span></span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(line[<span class=\"number\">16</span>:<span class=\"number\">18</span>], <span class=\"number\">16</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用pyshark解析并获取flag</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pyshark</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 显式设置tshark路径</span></span><br><span class=\"line\"><span class=\"comment\"># pyshark.tshark.tshark.TSHARK_PATH = r&#x27;C:\\\\HelloCTF\\\\Toolkit\\\\Forensic\\\\Wireshark\\\\tshark.exe&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">cap = pyshark.FileCapture(<span class=\"string\">&quot;C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\868_11254f60d1efdd79d251ec10b3db0f455262726b\\\\icmp_data.pcap&quot;</span>, display_filter=<span class=\"string\">&quot;icmp &amp;&amp; icmp.type==8&quot;</span>)</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">25</span>):</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(<span class=\"built_in\">str</span>(cap[i].icmp.data_data)[<span class=\"number\">24</span>:<span class=\"number\">26</span>], <span class=\"number\">16</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">cap.close()</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>ICMP-Length</li>\n</ul>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># coding = utf-8</span></span><br><span class=\"line\"><span class=\"comment\"># --author：valecalida--</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> os <span class=\"keyword\">import</span> system <span class=\"keyword\">as</span> get_code</span><br><span class=\"line\"><span class=\"comment\"># # 调用tshark时需要将tshark加入环境变量，且脚本需要与流量包在一个路径下</span></span><br><span class=\"line\"> </span><br><span class=\"line\">get_code(<span class=\"string\">&quot;C:\\\\HelloCTF\\\\Toolkit\\\\Forensic\\\\Wireshark\\\\tshark -r C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\869_0a362d3ce368678532f6a8e9fdf8cb531ec48572\\\\icmp_len.pcap -Y \\&quot;icmp &amp;&amp; icmp.type==0\\&quot; -T fields -e data.len &gt; flag.txt&quot;</span>)</span><br><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;flag.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>)</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> f.readlines():</span><br><span class=\"line\">    flag += <span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(line.strip()))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用pyshark来对流量进行解析</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># coding = utf-8</span></span><br><span class=\"line\"><span class=\"comment\"># --author: valecalida--</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pyshark</span><br><span class=\"line\">cap = pyshark.FileCapture(<span class=\"string\">&#x27;C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\869_0a362d3ce368678532f6a8e9fdf8cb531ec48572\\\\icmp_len.pcap&#x27;</span>, display_filter=<span class=\"string\">&quot;icmp &amp;&amp; icmp.type==8&quot;</span>)</span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"number\">18</span>):</span><br><span class=\"line\">    flag += (<span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(cap[i].icmp.data_len)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">cap.close()</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"彩蛋\"><a class=\"anchor\" href=\"#彩蛋\">#</a> 彩蛋</h4>\n<h5 id=\"首页\"><a class=\"anchor\" href=\"#首页\">#</a> 首页</h5>\n<p>在 FuzzDomain 工具中，{fuzz}.ctfhub.com 的设计核心是自动化生成测试目标。具体来说：</p>\n<ul>\n<li>动态占位符作用\n<ul>\n<li><mark>{fuzz} 是一个动态替换标记，相当于批量操作的 &quot;通配符&quot;</mark>。工具会从您指定的字典文件（图中路径 Dicwww.txt）中逐行读取内容，将每一行文字替换到 {fuzz} 的位置，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS13d3ctZW84ZXExOWFueTJhLmN0Zmh1Yi5jb20=\">生成如 www.ctfhub.com</span>、api.ctfhub.com 等完整域名进行探测。</li>\n</ul>\n</li>\n<li>安全测试实战场景\n<ul>\n<li>这种设计特别适用于 CTF 竞赛 / 渗透测试中：假设攻击者想找出目标网站（<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1jdGZodWItaGg0ay5jb20=\">如 ctfhub.com</span>）隐藏的子域名，但无法穷举所有可能性。通过加载包含常见子域名字段的字典（如 admin、test、dev 等），工具可自动化生成并验证数千种组合，快速定位有效域名。</li>\n</ul>\n</li>\n<li>扩展性设计\n<ul>\n<li>界面下方的字符规则 pqrstuvwxyz0123456789 Min 1 Max 3 表明：除了使用预设字典，工具还支持按字符规则自动生成测试内容。例如当勾选该规则时，会自动生成 1-3 位包含指定字符的随机组合（如 p1、2qr 等），与 {fuzz} 配合实现双重探测策略。</li>\n</ul>\n</li>\n</ul>\n<p>这种 {占位符}+ 字典 / 规则的组合方式，在保证测试覆盖率的同时大幅提升效率，是网络安全工具中常见的设计范式</p>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">软件名称：FuzzDomain</span><br><span class=\"line\">源码地址：https://github.com/Chora10/FuzzDomain</span><br><span class=\"line\">下载地址：https://pan.baidu.com/s/1o8bMaca  密码：is5f</span><br><span class=\"line\">官方博客：http://www.ms509.com/</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"彩蛋-2\"><a class=\"anchor\" href=\"#彩蛋-2\">#</a> 彩蛋</h5>\n<h5 id=\"题目入口该题需要之前的题目提交flag后不关闭环境但是我这边提交后自动关闭环境没有办法实现\"><a class=\"anchor\" href=\"#题目入口该题需要之前的题目提交flag后不关闭环境但是我这边提交后自动关闭环境没有办法实现\">#</a> 题目入口（该题需要之前的题目提交 flag 后不关闭环境，但是我这边提交后自动关闭环境没有办法实现）</h5>\n<h5 id=\"writeup\"><a class=\"anchor\" href=\"#writeup\">#</a> WriteUp</h5>\n<h5 id=\"工具\"><a class=\"anchor\" href=\"#工具\">#</a> 工具</h5>\n<p>在 CTFHub 工具 页面翻到最后发现 egg</p>\n<h5 id=\"赛事\"><a class=\"anchor\" href=\"#赛事\">#</a> 赛事</h5>\n<h5 id=\"真题\"><a class=\"anchor\" href=\"#真题\">#</a> 真题</h5>\n<h5 id=\"投稿提交\"><a class=\"anchor\" href=\"#投稿提交\">#</a> 投稿提交</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2d1eW91bmcvQ2FwdGZFbmNvZGVyJUU2JTg4JTk2JUU4JTgwJTg1JUU0JUJEJUJGJUU3JTk0JUE4JUU5JTlBJThGJUU2JUIzJUEyJUU5JTgwJTkwJUU2JUI1JTgxJUU1JThEJUIzJUU1JThGJUFG\">https://github.com/guyoung/CaptfEncoder 或者使用随波逐流即可</span></p>\n<p>flag[36:42]：a5f3a8</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93cml0ZXVwLmN0Zmh1Yi5jb20vT3RoZXIvJUU2JThBJTk1JUU3JUE4JUJGJUU4JUFGJUI0JUU2JTk4JThFL2VhZWQzYWJkLmh0bWw=\">https://writeup.ctfhub.com/Other/ 投稿说明 /eaed3abd.html</span></p>\n<p><mark>AES 解密</mark>：<span class=\"exturl\" data-url=\"aHR0cDovL3Rvb2wuY2hhY3VvLm5ldC9jcnlwdGFlcw==\">http://tool.chacuo.net/cryptaes</span></p>\n<h4 id=\"web-2\"><a class=\"anchor\" href=\"#web-2\">#</a> Web</h4>\n<h5 id=\"目录遍历\"><a class=\"anchor\" href=\"#目录遍历\">#</a> 目录遍历</h5>\n<p>​\t<strong>知识点</strong></p>\n<p>​\t\t目录遍历是 web 中常见的基础操作，我们通常会通过目录的遍历来发现是否存在对我们有用的信息。</p>\n<h5 id=\"phpinfo\"><a class=\"anchor\" href=\"#phpinfo\">#</a> PHPINFO</h5>\n<ul>\n<li>​\tPHPinfo：输出 PHP 当前状态的大量信息，包含了 PHP 编译选项、启用的扩展、PHP 版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP 环境变量、操作系统版本信息、path 变量、配置选项的本地值和主值、HTTP 头和 PHP 授权信息 (License)。</li>\n<li>​\tphpinfo () 同时是个很有价值的、包含所有 EGPCS (Environment, GET, POST, Cookie, Server) 数据的调试工具。</li>\n</ul>\n<h5 id=\"备份文件下载\"><a class=\"anchor\" href=\"#备份文件下载\">#</a> 备份文件下载</h5>\n<h6 id=\"网站源码\"><a class=\"anchor\" href=\"#网站源码\">#</a> 网站源码</h6>\n<ul>\n<li><strong>知识点</strong>\n<ul>\n<li>常见的网站源码的文件名有：'web', 'website', 'backup', 'back', 'www', 'wwwroot', 'temp' 等等。</li>\n<li>常见的网站源码备份文件后缀有：'tar', 'tar.gz', 'zip', 'rar' 等等。</li>\n</ul>\n</li>\n</ul>\n<p><mark>先使用 /www.zip 等给的不同来试，发现只有 /www.zip 有东西，而且直接打开还没有信息，只能网站打开才行</mark>。</p>\n<h6 id=\"bak文件\"><a class=\"anchor\" href=\"#bak文件\">#</a> bak 文件</h6>\n<p>bak 文件泄露</p>\n<p>​\t有些时候网站管理员可能为了方便，会在修改某个文件的时候先复制一份，将其命名为 xxx.bak。而<mark>大部分 Web Server 对 bak 文件并不做任何处理，导致可以直接下载，从而获取到网站某个文件的源代码</mark></p>\n<p><mark>得加入 /index.php.bak 尤其是最后面的.bak 才行</mark></p>\n<h6 id=\"vim缓存\"><a class=\"anchor\" href=\"#vim缓存\">#</a> vim 缓存</h6>\n<p>​\tvim 交换文件名</p>\n<ul>\n<li>在使用 vim 时会创建临时缓存文件，关闭 vim 时缓存文件则会被删除，当 vim 异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容</li>\n<li>以 index.php 为例：\n<ul>\n<li><mark>第一次产生的交换文件名为 .index.php.swp</mark></li>\n</ul>\n</li>\n<li>再次意外退出后，将会产生名为 <mark>.index.php.swo</mark> 的交换文件</li>\n<li>第三次产生的交换文件则为 <mark>.index.php.swn</mark></li>\n</ul>\n<p><mark>vim 一旦异常退出就会生成 swp 文件，且是隐藏文件</mark>。隐藏文件要加点，首页也说了 flag 在 index.php 源码中 所以 <mark>/.index.php.swp</mark> 直接下载。</p>\n<h6 id=\"ds_store\"><a class=\"anchor\" href=\"#ds_store\">#</a> .DS_Store</h6>\n<ul>\n<li><mark>.DS_Store 是 Mac 下 Finder 用来保存如何展示文件 / 文件夹的数据文件，每个文件夹下对应一个</mark>。</li>\n<li>如果开发 / 设计人员将.DS_Store 上传部署到线上环境，可能造成文件目录结构泄漏，特别是备份文件、源代码文件。</li>\n<li>在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。</li>\n</ul>\n<p><mark>下载后打开之后得用 linux 中的 cat 查看并且再用 URL 接着执行查看即可</mark>。</p>\n<h5 id=\"git泄露\"><a class=\"anchor\" href=\"#git泄露\">#</a> Git 泄露</h5>\n<h3 id=\"buuctf\"><a class=\"anchor\" href=\"#buuctf\">#</a> BUUCTF</h3>\n<h4 id=\"web-3\"><a class=\"anchor\" href=\"#web-3\">#</a> Web</h4>\n<h5 id=\"极客大挑战-2019easysql\"><a class=\"anchor\" href=\"#极客大挑战-2019easysql\">#</a> [极客大挑战 2019] EasySQL</h5>\n<h6 id=\"思路\"><a class=\"anchor\" href=\"#思路\">#</a> 思路</h6>\n<p><strong>找输入点、试闭合符、构造万能密码</strong></p>\n<ol>\n<li>\n<p><strong>万能密码构造公式</strong></p>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL&#x27; or 1=1 # </span><br><span class=\"line\">-- 或带闭合的版本（如本题用<span class=\"code\">`&#x27; or true #`</span>）</span><br><span class=\"line\"></span><br><span class=\"line\">万能密码构造公式</span><br><span class=\"line\"><span class=\"code\">    SQL</span></span><br><span class=\"line\"><span class=\"code\">    &#x27; or 1=1 # </span></span><br><span class=\"line\"><span class=\"code\">    -- 或带闭合的版本（如本题用`&#x27; or true #`）</span></span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p><strong>进阶操作</strong> 若过滤了空格用 <code>/**/</code>  代替，过滤 <code>or</code>  用 <code>||</code>  连接符等</p>\n</li>\n<li>\n<p><strong>工具使用</strong> HackBar 直接修改 URL 参数发送请求（GET 传参用 <code>%23</code>  代替 <code>#</code> ）</p>\n</li>\n</ol>\n<h4 id=\"crypto-2\"><a class=\"anchor\" href=\"#crypto-2\">#</a> Crypto</h4>\n<h5 id=\"一眼就解密\"><a class=\"anchor\" href=\"#一眼就解密\">#</a> 一眼就解密</h5>\n<h5 id=\"md5\"><a class=\"anchor\" href=\"#md5\">#</a> MD5</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY21kNS5jb20v\">md5 在线解密破解，md5 解密加密</span></p>\n<h5 id=\"url编码\"><a class=\"anchor\" href=\"#url编码\">#</a> Url 编码</h5>\n<h5 id=\"看我回旋踢\"><a class=\"anchor\" href=\"#看我回旋踢\">#</a> 看我回旋踢</h5>\n<p><mark>synt=flag</mark></p>\n<h5 id=\"摩丝\"><a class=\"anchor\" href=\"#摩丝\">#</a> 摩丝</h5>\n<h5 id=\"password一开始有点懵算是一种iq题\"><a class=\"anchor\" href=\"#password一开始有点懵算是一种iq题\">#</a> password（一开始有点懵，算是一种 iq 题）</h5>\n<p>判断出是 10 个数，数字占 8 个，那么就从姓名缩写来看了</p>\n<h5 id=\"变异凯撒\"><a class=\"anchor\" href=\"#变异凯撒\">#</a> 变异凯撒</h5>\n<p>​\t上面的 acsii 码值对比表可以看到 == 第一个字符向后移了 5,== 第二个向后移了 6, 第三个向后移了 7, 以此类推，很容易想到变异凯撒即每个向后移的位数是前一个加 1</p>\n<h5 id=\"quoted-printable\"><a class=\"anchor\" href=\"#quoted-printable\">#</a> Quoted-printable</h5>\n<p>​\t<mark>Quoted-printable 将任何 8-bit 字节值可编码为 3 个字符：一个等号 &quot;=&quot; 后跟随两个十六进制数字 (0–9 或 A–F) 表示该字节的数值。</mark><br />\n​\t例如，ASCII 码换页符（十进制值为 12）可以表示为 &quot;=0C&quot;， 等号 &quot;=&quot;（十进制值为 61）必须表示为 &quot;=3D&quot;，gb2312 下 “中” 表示为 = D6=D0。除了可打印 ASCII 字符与换行符以外，所有字符必须表示为这种格式。</p>\n<p>原文链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pa2VDb2tlL2FydGljbGUvZGV0YWlscy8xMDU4NzczNzM=\">https://blog.csdn.net/MikeCoke/article/details/105877373</span></p>\n<h5 id=\"篱笆墙的影子\"><a class=\"anchor\" href=\"#篱笆墙的影子\">#</a> 篱笆墙的影子</h5>\n<h5 id=\"rabbit\"><a class=\"anchor\" href=\"#rabbit\">#</a> Rabbit</h5>\n<h5 id=\"rsa\"><a class=\"anchor\" href=\"#rsa\">#</a> RSA</h5>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> gmpy2</span><br><span class=\"line\">p = <span class=\"number\">473398607161</span></span><br><span class=\"line\">q = <span class=\"number\">4511491</span></span><br><span class=\"line\">e = <span class=\"number\">17</span></span><br><span class=\"line\">d = <span class=\"built_in\">int</span>(gmpy2.invert(e,(p-<span class=\"number\">1</span>)*(q-<span class=\"number\">1</span>)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(d)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"丢失的md5\"><a class=\"anchor\" href=\"#丢失的md5\">#</a> 丢失的 MD5</h5>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">127</span>):</span><br><span class=\"line\">            m=hashlib.md5()</span><br><span class=\"line\">            m.update(<span class=\"string\">&#x27;TASC&#x27;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)+<span class=\"built_in\">chr</span>(i).encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)+<span class=\"string\">&#x27;O3RJMV&#x27;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)+<span class=\"built_in\">chr</span>(j).encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)+<span class=\"string\">&#x27;WDJKX&#x27;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)+<span class=\"built_in\">chr</span>(k).encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)+<span class=\"string\">&#x27;ZM&#x27;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">            des=m.hexdigest()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;e9032&#x27;</span> <span class=\"keyword\">in</span> des <span class=\"keyword\">and</span> <span class=\"string\">&#x27;da&#x27;</span> <span class=\"keyword\">in</span> des <span class=\"keyword\">and</span> <span class=\"string\">&#x27;911513&#x27;</span> <span class=\"keyword\">in</span> des:</span><br><span class=\"line\">                <span class=\"built_in\">print</span> (des)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"alice与bob\"><a class=\"anchor\" href=\"#alice与bob\">#</a> Alice 与 Bob</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90b29scy5qYjUxLm5ldC9qaXN1YW5xaS9mYWN0b3JfY2FsYw==\">在线分解质因数计算器工具 - 在线计算器 - 脚本之家在线工具</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oaWVuY29kZS5jb20vaGFzaC5odG1s\">CTF 在线工具 - 哈希计算 | MD5、SHA1、SHA256、SHA384、SHA512、RIPEMD、RIPEMD160</span></p>\n<h5 id=\"大帝的密码武器\"><a class=\"anchor\" href=\"#大帝的密码武器\">#</a> 大帝的密码武器</h5>\n<p>密文发现 C 为大写字母，而 C 移 13 位应该是大写 P，替换后，得到最终 flag。</p>\n<h5 id=\"rsarsa\"><a class=\"anchor\" href=\"#rsarsa\">#</a> rsarsa</h5>\n<p>使用 RSA Tool2 工具解题</p>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import gmpy2</span></span><br><span class=\"line\"><span class=\"comment\"># e = 65537</span></span><br><span class=\"line\"><span class=\"comment\"># p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class=\"line\"><span class=\"comment\"># q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class=\"line\"><span class=\"comment\"># n = p*q</span></span><br><span class=\"line\"><span class=\"comment\"># #密文</span></span><br><span class=\"line\"><span class=\"comment\"># C = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># d =gmpy2.invert(e,(p-1)*(q-1))</span></span><br><span class=\"line\"><span class=\"comment\"># print(d)</span></span><br><span class=\"line\"><span class=\"comment\"># #求明文</span></span><br><span class=\"line\"><span class=\"comment\"># M = pow(C,d,n)    #快速求幂取模运算</span></span><br><span class=\"line\"><span class=\"comment\"># print(M)</span></span><br><span class=\"line\"></span><br><span class=\"line\">e = <span class=\"number\">65537</span></span><br><span class=\"line\">p = <span class=\"number\">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class=\"line\">q = <span class=\"number\">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class=\"line\">n = p*q</span><br><span class=\"line\"><span class=\"comment\">#密文</span></span><br><span class=\"line\">C = <span class=\"number\">83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span></span><br><span class=\"line\"> </span><br><span class=\"line\">d = <span class=\"number\">56632047571190660567520341028861194862411428416862507034762587229995138605649836960220619903456392752115943299335385163216233744624623848874235303309636393446736347238627793022725260986466957974753004129210680401432377444984195145009801967391196615524488853620232925992387563270746297909112117451398527453977</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#求明文</span></span><br><span class=\"line\">M = <span class=\"built_in\">pow</span>(C,d,n)    <span class=\"comment\">#快速求幂取模运算</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(M)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"windows系统密码\"><a class=\"anchor\" href=\"#windows系统密码\">#</a> Windows 系统密码</h5>\n<p><mark>两个都用 Md5 试一下。</mark></p>\n<h5 id=\"信息化时代的步伐\"><a class=\"anchor\" href=\"#信息化时代的步伐\">#</a> 信息化时代的步伐</h5>\n<p><mark>题目说结果为中文，结合 36（4x9）位的纯数字密文，猜测为中文电码解密。</mark></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvZGlhbmJhby5waHA=\">电报码在线翻译（国际摩尔斯电码及中文电码） - 千千秀字</span></p>\n<h5 id=\"凯撒替换呵呵\"><a class=\"anchor\" href=\"#凯撒替换呵呵\">#</a> 凯撒？替换？呵呵！</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlwcWl1cC5jb20v\">Quipqiup - Cryptoquip 和 Cryptogram 求解器</span></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/fa5b30ef9a70de0a72aaf87bb44dc655.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/9a56f91a23107e16a1db6ddac5e7ea98.png\" alt=\"img\" /></p>\n<h5 id=\"萌萌哒的八戒\"><a class=\"anchor\" href=\"#萌萌哒的八戒\">#</a> 萌萌哒的八戒</h5>\n<p>binwalk 然后猪圈密码即可</p>\n<h5 id=\"权限获得第一步\"><a class=\"anchor\" href=\"#权限获得第一步\">#</a> 权限获得第一步</h5>\n<h4 id=\"misc-3\"><a class=\"anchor\" href=\"#misc-3\">#</a> Misc</h4>\n<h5 id=\"金三胖\"><a class=\"anchor\" href=\"#金三胖\">#</a> 金三胖</h5>\n<p>使用<mark>随波逐流、StegSolve-FrameBrower</mark></p>\n<h5 id=\"你竟然赶我走\"><a class=\"anchor\" href=\"#你竟然赶我走\">#</a> 你竟然赶我走</h5>\n<p>使用<mark> strings、随波逐流、010Editor</mark> 方法</p>\n<h5 id=\"二维码\"><a class=\"anchor\" href=\"#二维码\">#</a> 二维码</h5>\n<p>可以使用<mark> 010Editor 或者是 strings</mark> 进行查看，发现里面还有文件，所以采用了修改后缀名为 zip 发现有密码，或者使用 Binwalk 进行也可以，然后使用 archar 或者 ziperllo 进行爆破，出来密码即可。</p>\n<h5 id=\"大白\"><a class=\"anchor\" href=\"#大白\">#</a> 大白</h5>\n<h6 id=\"python代码\"><a class=\"anchor\" href=\"#python代码\">#</a> python 代码</h6>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> zlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> struct</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;C:\\\\Users\\HelloCTF_OS\\\\Desktop\\\\dabai.png&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    data = f.read()</span><br><span class=\"line\">    crc32_original = <span class=\"built_in\">int</span>(data[<span class=\"number\">29</span>:<span class=\"number\">33</span>].<span class=\"built_in\">hex</span>(), <span class=\"number\">16</span>)  <span class=\"comment\"># 原始 CRC</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> w <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4096</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> h <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">4096</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 重构 IHDR 数据块</span></span><br><span class=\"line\">        ihdr_data = data[<span class=\"number\">12</span>:<span class=\"number\">16</span>] + struct.pack(<span class=\"string\">&#x27;&gt;i&#x27;</span>, w) + struct.pack(<span class=\"string\">&#x27;&gt;i&#x27;</span>, h) + data[<span class=\"number\">24</span>:<span class=\"number\">29</span>]</span><br><span class=\"line\">        crc32 = zlib.crc32(ihdr_data) &amp; <span class=\"number\">0xffffffff</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> crc32 == crc32_original:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;正确宽高：<span class=\"subst\">&#123;w&#125;</span> x <span class=\"subst\">&#123;h&#125;</span> (Hex: <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(w)&#125;</span>, <span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(h)&#125;</span>)&quot;</span>)</span><br><span class=\"line\">            exit()</span><br></pre></td></tr></table></figure></p>\n<p>使用随波逐流或者<mark> 010Editor</mark> 进行修改宽高比</p>\n<h5 id=\"wireshark\"><a class=\"anchor\" href=\"#wireshark\">#</a> wireshark</h5>\n<p><mark>http &amp;&amp; http.request.method == &quot;POST&quot;</mark></p>\n<h6 id=\"分析图片信息\"><a class=\"anchor\" href=\"#分析图片信息\">#</a> 分析图片信息</h6>\n<h5 id=\"乌镇峰会种图\"><a class=\"anchor\" href=\"#乌镇峰会种图\">#</a> 乌镇峰会种图</h5>\n<h5 id=\"n种方法解决\"><a class=\"anchor\" href=\"#n种方法解决\">#</a> N 种方法解决</h5>\n<p>使用随波逐流工具</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGUteC5jbi9lbmNvZGluZ3MvQmFzZTY0LmFzcHg=\">https://the-x.cn/encodings/Base64.aspx</span></p>\n<h5 id=\"基础破解\"><a class=\"anchor\" href=\"#基础破解\">#</a> 基础破解</h5>\n<h5 id=\"文件中的秘密\"><a class=\"anchor\" href=\"#文件中的秘密\">#</a> 文件中的秘密</h5>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1FWElGLWU3NmZ5MDlmLm9yZw==\">EXIF 信息.org</span></strong>:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGlmaW5mby5vcmc=\">https://exifinfo.org</span>](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGlmaW5mby5vcmcv\">https://exifinfo.org/</span></p>\n<h5 id=\"zip伪加密\"><a class=\"anchor\" href=\"#zip伪加密\">#</a> zip 伪加密</h5>\n<p><figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">步骤1：识别ZIP文件结构</span><br><span class=\"line\">ZIP文件由三部分组成，其十六进制特征如下：</span><br><span class=\"line\"></span><br><span class=\"line\">压缩源文件数据区（Local File Header）</span><br><span class=\"line\"></span><br><span class=\"line\">起始标志：50 4B 03 04</span><br><span class=\"line\">全局方式位标记位置：起始标志后的第3-4字节（偏移+2处）</span><br><span class=\"line\">功能：存储实际文件数据，若未加密则标记为00 00。</span><br><span class=\"line\"></span><br><span class=\"line\">压缩源文件目录区（Central Directory）</span><br><span class=\"line\"></span><br><span class=\"line\">起始标志：50 4B 01 02</span><br><span class=\"line\">全局方式位标记位置：起始标志后的第5-6字节（偏移+4处）</span><br><span class=\"line\">功能：记录文件路径信息，伪加密的关键修改位置在此处。</span><br><span class=\"line\"></span><br><span class=\"line\">目录结束标志（End of Central Directory）</span><br><span class=\"line\">起始标志：50 4B 05 06，用于定位整个压缩包结构。</span><br><span class=\"line\"></span><br><span class=\"line\">步骤2：使用010 Editor定位数据区与目录区</span><br><span class=\"line\">打开文件：</span><br><span class=\"line\">    用010 Editor打开ZIP文件，通过搜索功能（Ctrl+F）输入以下特征码快速定位：</span><br><span class=\"line\">    数据区：搜索50 4B 03 04，每个匹配项对应一个文件的头部 。</span><br><span class=\"line\">    目录区：搜索50 4B 01 02，每个匹配项对应一个目录条目。</span><br><span class=\"line\">检查全局方式位标记：</span><br><span class=\"line\">    数据区：查看50 4B 03 04后的第3-4字节（偏移+2），未加密应为00 00，加密为09 00 。</span><br><span class=\"line\">    目录区：查看50 4B 01 02后的第5-6字节（偏移+4），伪加密时此处为09 00，需改为00 00 。</span><br><span class=\"line\">步骤3：修改伪加密</span><br><span class=\"line\">判断加密类型：</span><br><span class=\"line\">    无加密：数据区和目录区的全局方式位均为00 00。</span><br><span class=\"line\">    伪加密：数据区为00 00，目录区为09 00 。</span><br><span class=\"line\">    真加密：两者均为09 00。</span><br><span class=\"line\">修改目录区标记：</span><br><span class=\"line\">\t定位到目录区的50 4B 01 02，将其后第5-6字节的09 00改为00 00 。</span><br><span class=\"line\">注意：若存在多个目录条目（如多层子文件夹），需逐个检查并修改 </span><br><span class=\"line\">保存并验证：</span><br><span class=\"line\">\t保存修改后的文件，尝试解压。若成功则伪加密已解除；若失败需检查其他可能的加密位或多级目录结构.</span><br></pre></td></tr></table></figure></p>\n<p><mark><strong>一找 PK 头，二看标志位，奇改偶，伪加密解除</strong></mark></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/e0d9c37ffa4443cb8126d505954f1545.png\" alt=\"img\" /></p>\n<p>将 09 改为 00 即可</p>\n<h5 id=\"被嗅探的流量\"><a class=\"anchor\" href=\"#被嗅探的流量\">#</a> 被嗅探的流量</h5>\n<h5 id=\"lsb\"><a class=\"anchor\" href=\"#lsb\">#</a> LSB</h5>\n<p><mark><em>先单蓝后双红绿，三通道组合最后试</em></mark></p>\n<p><mark><em>Alpha 通道碰不得，藏密必选 RGB</em></mark></p>\n<h5 id=\"位平面选择原则三句黄金口诀\"><a class=\"anchor\" href=\"#位平面选择原则三句黄金口诀\">#</a> 位平面选择原则（三句黄金口诀）</h5>\n<p><strong>口诀①</strong>：&quot;LSB 隐写 0 位藏，9 成题目在此方&quot; <strong>口诀②</strong>：&quot;红绿蓝三原色，同步勾选效率强&quot; <strong>口诀③</strong>：&quot;高位平面先别慌，特殊变形才要防&quot;</p>\n<ul>\n<li>\n<p><strong>为何只勾选 0 位？</strong> LSB 隐写本质是将数据藏在像素值二进制的最低位（第 0 位），如同把字写在纸的最边缘。 <em>示例</em>：像素值 <code>255</code>  的二进制是 <code>11111111</code> ，修改第 0 位后变为 <code>11111110</code> （差值仅 1，肉眼不可见）</p>\n</li>\n<li>\n<p><strong>什么情况要勾选 1/2 位？</strong> 当题目明确提示 &quot;高位隐写&quot; 或常规 0 位无结果时（约占 CTF 题 10%），按以下优先级排查：</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 位平面优先级顺序（覆盖99%题目）</span></span><br><span class=\"line\">priority = [</span><br><span class=\"line\">    (<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>),  <span class=\"comment\"># 红绿蓝0位（基础题）</span></span><br><span class=\"line\">    (<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>),  <span class=\"comment\"># 红0+绿1+蓝0（进阶组合）</span></span><br><span class=\"line\">    (<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>)   <span class=\"comment\"># 三通道1位（反套路题）</span></span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n</li>\n</ul>\n<h5 id=\"rar\"><a class=\"anchor\" href=\"#rar\">#</a> rar</h5>\n<h5 id=\"qr\"><a class=\"anchor\" href=\"#qr\">#</a> qr</h5>\n<h5 id=\"镜子里面的世界\"><a class=\"anchor\" href=\"#镜子里面的世界\">#</a> 镜子里面的世界</h5>\n<h5 id=\"爱因斯坦\"><a class=\"anchor\" href=\"#爱因斯坦\">#</a> 爱因斯坦</h5>\n<p><mark>binwalk -e '/mnt/c/Users/HelloCTF_OS/Desktop/ 爱因斯坦 /misc2.jpg'</mark></p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 真加密：数据区（50 4B 03 04后）和目录区（50 4B 01 02后）均含09 00 </span></span><br><span class=\"line\"><span class=\"comment\"># 伪加密：仅目录区含09 00</span></span><br><span class=\"line\">hexdump -C <span class=\"string\">&#x27;/mnt/c/Users/HelloCTF_OS/Desktop/爱因斯坦/_misc2.jpg.extracted/109B3.zip&#x27;</span> | grep -A1 <span class=\"string\">&quot;PK..&quot;</span></span><br></pre></td></tr></table></figure></p>\n<h5 id=\"ningen\"><a class=\"anchor\" href=\"#ningen\">#</a> ningen</h5>\n<h5 id=\"小明的保险箱\"><a class=\"anchor\" href=\"#小明的保险箱\">#</a> 小明的保险箱</h5>\n<p><mark>通过 ff d9 发现 rar</mark></p>\n<h5 id=\"easycap\"><a class=\"anchor\" href=\"#easycap\">#</a> easycap</h5>\n<p><mark>通过追踪流查看</mark></p>\n<h5 id=\"隐藏的钥匙\"><a class=\"anchor\" href=\"#隐藏的钥匙\">#</a> 隐藏的钥匙</h5>\n<h5 id=\"另外一个世界\"><a class=\"anchor\" href=\"#另外一个世界\">#</a> 另外一个世界</h5>\n<h5 id=\"数据包中的线索\"><a class=\"anchor\" href=\"#数据包中的线索\">#</a> 数据包中的线索</h5>\n<p>通过追踪流发现有 = 号，判断可能是 base64, 但是过长考虑可能是图片转 base64 那么，需要通过网站并且添加头 ==“data:image/jpeg;base64,” 点击追加 img 标签 ==，</p>\n<p>图片在线转换 base64 编码 - 在线 base64 编码转换成图片工具 (<span class=\"exturl\" data-url=\"aHR0cDovL2pzb25zLmNu\">jsons.cn</span>)](<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qc29ucy5jbi9pbWcyYmFzZTY0LyVFRiVCQyU4OQ==\">http://www.jsons.cn/img2base64/）</span></p>\n<h5 id=\"神秘龙卷风\"><a class=\"anchor\" href=\"#神秘龙卷风\">#</a> 神秘龙卷风</h5>\n<p><mark>BrainFuck 解密</mark></p>\n<h5 id=\"flag\"><a class=\"anchor\" href=\"#flag\">#</a> FLAG</h5>\n<p>使用 stegsolve 进行 rgb 查看，然后保存 1.zip, 因为是<mark> pk 开头</mark></p>\n<h5 id=\"假如给我三天光明\"><a class=\"anchor\" href=\"#假如给我三天光明\">#</a> 假如给我三天光明</h5>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWFnZXMyMDE3LmNuYmxvZ3MuY29tL2Jsb2cvMTI5NDU4OC8yMDE3MTIvMTI5NDU4OC0yMDE3MTIwOTAyMDQxMDcxOC0yMDk3MTczOTI4LnBuZw==\">https://images2017.cnblogs.com/blog/1294588/201712/1294588-20171209020410718-2097173928.png</span>&quot; alt=&quot;img&quot;  /&gt;</p>\n<p>得到解压密码是<mark> kmdonowg</mark></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3JzZWNvZGUud29ybGQvaW50ZXJuYXRpb25hbC9kZWNvZGVyL2F1ZGlvLWRlY29kZXItYWRhcHRpdmUuaHRtbA==\">Morse Code Audio Decoder</span></p>\n<p wpei08732?23dz=\"\">解码得：CTFWPEI08732?23D 换成 flag 还要换小写 flag</p>\n<h5 id=\"后门查杀\"><a class=\"anchor\" href=\"#后门查杀\">#</a> 后门查杀</h5>\n<p>使用<mark> D 盾或者火绒安全</mark>进行查找然后再找到对应的文件查看即可</p>\n<h5 id=\"webshell后门少zp文件\"><a class=\"anchor\" href=\"#webshell后门少zp文件\">#</a> webshell 后门 (少 zp 文件)</h5>\n<h5 id=\"来首歌吧\"><a class=\"anchor\" href=\"#来首歌吧\">#</a> 来首歌吧</h5>\n<p>使用在线工具进行解密</p>\n<ol>\n<li>\n<p><strong>MorseFM</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3JzZWZtLmNvbS8=\">https://morsefm.com/</span> （支持 WAV/MP3 等格式，支持多语言，适合快速解码）</p>\n</li>\n<li>\n<p><strong>Morse Code Magic</strong> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb3JzZWNvZGVtYWdpYy5jb20vbW9yc2UtY29kZS1hdWRpby1kZWNvZGVyLw==\">https://morsecodemagic.com/morse-code-audio-decoder/</span> （专注 WAV/MP3 解码，4 分钟音频 5 秒完成）</p>\n</li>\n</ol>\n<h5 id=\"面具下的flag\"><a class=\"anchor\" href=\"#面具下的flag\">#</a> 面具下的 flag</h5>\n<p>可以先用 strings 提取，但是需要对比两个找不同，发现少两个 + 号再解析不然出错</p>\n<h5 id=\"荷兰宽带数据泄露\"><a class=\"anchor\" href=\"#荷兰宽带数据泄露\">#</a> 荷兰宽带数据泄露</h5>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmlyc29mdC5uZXQv\">NirSoft - freeware utilities: password recovery, system utilities, desktop utilities</span></p>\n<p>搜索 username 或者 password，这可能是一个<mark>路由器配置文件 (bin)</mark>，所以用到 RouterPassView 软件</p>\n<h5 id=\"九连环\"><a class=\"anchor\" href=\"#九连环\">#</a> 九连环</h5>\n<p>通过随波逐流发现有伪加密，所以搜索 50 4B 01 02 修改</p>\n<p><mark>安装命令</mark>：sudo apt update &amp;&amp; sudo apt install steghide</p>\n<p><mark>执行命令</mark>:steghide extract -sf '/mnt/c/Users/HelloCTF_OS/Desktop/389a0c11-d0df-4180-829a-b529e6b0a1bc/_123456cry.jpg.extracted/asd/good - 已合并.jpg'</p>\n<h5 id=\"认真你就输了\"><a class=\"anchor\" href=\"#认真你就输了\">#</a> 认真你就输了</h5>\n<p>随波逐流发现文件头是 zip 文件，要么修改文件要么 binwalk 就行</p>\n<h5 id=\"被偷走的文件\"><a class=\"anchor\" href=\"#被偷走的文件\">#</a> 被偷走的文件</h5>\n<p>pcap 文件用 wireshark 并且发现 ftp-data 有 rar 文件进行到处对象导出即可。</p>\n<p><mark>导出文件三种方法：</mark></p>\n<ol>\n<li>到处对象</li>\n<li>追踪流然后原始数据导出即可</li>\n<li>导出字节流</li>\n</ol>\n<h5 id=\"被劫持的神秘礼物\"><a class=\"anchor\" href=\"#被劫持的神秘礼物\">#</a> 被劫持的神秘礼物</h5>\n<h5 id=\"藏藏藏\"><a class=\"anchor\" href=\"#藏藏藏\">#</a> 藏藏藏</h5>\n<p>打开 010 发现 pk 删除前面所有内容保存 zip 解压后扫码即可</p>\n<h5 id=\"佛系青年\"><a class=\"anchor\" href=\"#佛系青年\">#</a> 佛系青年</h5>\n<h5 id=\"你猜我是个啥\"><a class=\"anchor\" href=\"#你猜我是个啥\">#</a> 你猜我是个啥</h5>\n<h5 id=\"秘密文件\"><a class=\"anchor\" href=\"#秘密文件\">#</a> 秘密文件</h5>\n<p>筛选后发现有<mark> ftp 优先查看</mark>，发现里面有 rar 文件，还有一点其实随波逐流里面也可以直接查看并且通过分离破解即可获取 flag.</p>\n<h5 id=\"刷新过的图片\"><a class=\"anchor\" href=\"#刷新过的图片\">#</a> 刷新过的图片</h5>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java Extract ``/``图片的绝对路径 [``-``p 密码] [``-``e 输出文件]</span><br></pre></td></tr></table></figure></p>\n<p>题目说 “刷新过的图片”，结合键盘上刷新键为 F5 可判断此题为 F5 隐写，运用工具<mark> F5-steganography</mark> 可以对其中的内容进行提取</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRjb2RlLmNvbS9naF9taXJyb3JzL2Y1L0Y1LXN0ZWdhbm9ncmFwaHk/dXRtX3NvdXJjZT1jc2RuX2dpdGh1Yl9hY2NlbGVyYXRvciZhbXA7aXNMb2dpbj0x\">项目首页 - F5-steganography:F5 steganography - GitCode</span></p>\n<p>java Extract '/mnt/c/Use<br />\nrs/HelloCTF_OS/Desktop/a05ed035-b476-49d6-9b32-462ff13c5944/Misc.jpg'</p>\n<h5 id=\"鸡你太美\"><a class=\"anchor\" href=\"#鸡你太美\">#</a> 鸡你太美</h5>\n<p>发现缺少 gif 头，<mark>47 49 46 38</mark>.</p>\n<h5 id=\"just_a_rar\"><a class=\"anchor\" href=\"#just_a_rar\">#</a> just_a_rar</h5>\n<p>破解密码然后查看 exif 信息即可</p>\n<h5 id=\"snake原先的网站没有了所以解析不了\"><a class=\"anchor\" href=\"#snake原先的网站没有了所以解析不了\">#</a> snake (原先的网站没有了，所以解析不了)</h5>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;who<span class=\"emphasis\">_knew_</span>serpent<span class=\"emphasis\">_cipher_</span>existed&#125;</span><br></pre></td></tr></table></figure></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3NlcnBlbnQub25saW5lLWRvbWFpbi10b29scy5jb20v\">Serpent Encryption – Easily encrypt or decrypt strings or files</span></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLWJsb2cuY3NkbmltZy5jbi9ibG9nX21pZ3JhdGUvNTkzYmU3NmQwMzhkZmVjZTBmY2VlMGVkMDUyMDU2MWEucG5n\">https://i-blog.csdnimg.cn/blog_migrate/593be76d038dfece0fcee0ed0520561a.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h5 id=\"菜刀666\"><a class=\"anchor\" href=\"#菜刀666\">#</a> 菜刀 666</h5>\n<p>菜刀使用 http.request.method<mark>POST，并且查看 z1 和 z2，发现 z2 有 FF D8 是 jpg 导入 010 发现密码</mark>，然后解压即可</p>\n<h5 id=\"一叶障目\"><a class=\"anchor\" href=\"#一叶障目\">#</a> 一叶障目</h5>\n<p>可以使用之前的 Python 脚本或者随波逐流即可</p>\n<h5 id=\"纳尼\"><a class=\"anchor\" href=\"#纳尼\">#</a> 纳尼</h5>\n<p>如果 git 分帧查看不了，那么就用<mark> stegsolve 的 framebrower</mark> 来查看即可。</p>\n<h5 id=\"神奇的二维码\"><a class=\"anchor\" href=\"#神奇的二维码\">#</a> 神奇的二维码</h5>\n<p>Python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decode</span>(<span class=\"params\">f</span>):</span><br><span class=\"line\">\tn = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t\t\tf = base64.b64decode(f)</span><br><span class=\"line\">\t\t\tn += <span class=\"number\">1</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">except</span>:</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"string\">&#x27;[+]Base64共decode了&#123;0&#125;次，最终解码结果如下:&#x27;</span>.<span class=\"built_in\">format</span>(n))</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>(f,<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">\tf = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\base64.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>).read()</span><br><span class=\"line\">\tdecode(f)</span><br></pre></td></tr></table></figure></p>\n<p><mark>粗线条是 <code>-</code> , 细线条是 <code>.</code> </mark></p>\n<h5 id=\"excel破解\"><a class=\"anchor\" href=\"#excel破解\">#</a> excel 破解</h5>\n<p>使用 strings 或者随波逐流查看即可</p>\n<h5 id=\"来题中等的吧\"><a class=\"anchor\" href=\"#来题中等的吧\">#</a> 来题中等的吧</h5>\n<p>粗细记录摩斯密码即可</p>\n<p>&lt;img src=&quot;C:\\Users\\HelloCTF_OS\\AppData\\Roaming\\Typora\\typora-user-images\\image-20250405030603419.png&quot; alt=&quot;image-20250405030603419&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h5 id=\"谁赢了比赛\"><a class=\"anchor\" href=\"#谁赢了比赛\">#</a> 谁赢了比赛？</h5>\n<p>使用 Binwalk 进行分离并且破解密码，之后使用 qcr 进行二维码解析</p>\n<h5 id=\"actf新生赛2020outguess\"><a class=\"anchor\" href=\"#actf新生赛2020outguess\">#</a> ACTF 新生赛 2020] outguess</h5>\n<p>发现 exif 再通过社会主义解密，然后通过题目猜测发现是 outguess，通过一下密码解密</p>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outguess -k &#x27;abc&#x27; -r mmm.jpg flag.txt </span><br></pre></td></tr></table></figure></p>\n<p><mark>outguess -k 'abc' -r '/mnt/c/Users/HelloCTF_OS/Desktop/attachment/tmp/huhuhu/mmm.jpg' '/mnt/c/Users/HelloCTF_OS/Desktop/attachment/tmp/huhuhu/flag.txt'</mark></p>\n<h5 id=\"梅花香之苦寒来\"><a class=\"anchor\" href=\"#梅花香之苦寒来\">#</a> 梅花香之苦寒来</h5>\n<p>使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1nbnVwbG90JmFtcDtzcG09MTAwMS4yMTAxLjMwMDEuNzAyMA==\"> gnuplot</span> 画图即可</p>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># with open(&#x27;C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\hex.txt&#x27;, &#x27;r&#x27;) as h:     # hex.txt为要转换的文本文件</span></span><br><span class=\"line\"><span class=\"comment\">#     val = h.read()</span></span><br><span class=\"line\"><span class=\"comment\">#     h.close()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># with open(&#x27;C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\result.txt&#x27;, &#x27;w&#x27;) as re: # 转换完成后写入result.txt</span></span><br><span class=\"line\"><span class=\"comment\">#     tem = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(0, len(val), 2):</span></span><br><span class=\"line\"><span class=\"comment\">#         tem = &#x27;0x&#x27; + val[i] + val[i+1]</span></span><br><span class=\"line\"><span class=\"comment\">#         tem = int(tem, base=16)</span></span><br><span class=\"line\"><span class=\"comment\">#         print(chr(tem), end=&quot;&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">#         re.write(chr(tem))</span></span><br><span class=\"line\"><span class=\"comment\">#     re.close()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\result.txt&#x27;</span>, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> res:  <span class=\"comment\"># 坐标格式文件比如(7,7)</span></span><br><span class=\"line\">    re = res.read()</span><br><span class=\"line\">    res.close()</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;C:\\\\Users\\\\HelloCTF_OS\\\\Desktop\\\\gnuplotTxt.txt&#x27;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> gnup:   <span class=\"comment\"># 将转换后的坐标写入gnuplotTxt.txt</span></span><br><span class=\"line\">    re = re.split()</span><br><span class=\"line\">    tem = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(re)):</span><br><span class=\"line\">        tem = re[i]</span><br><span class=\"line\">        tem = tem.lstrip(<span class=\"string\">&#x27;(&#x27;</span>)</span><br><span class=\"line\">        tem = tem.rstrip(<span class=\"string\">&#x27;)&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(tem)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> tem[j] == <span class=\"string\">&#x27;,&#x27;</span>:</span><br><span class=\"line\">                tem = tem[:j] + <span class=\"string\">&#x27; &#x27;</span> + tem[j+<span class=\"number\">1</span>:]</span><br><span class=\"line\">        gnup.write(tem + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    gnup.close()</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"wustctf2020find_me在线网站打不开\"><a class=\"anchor\" href=\"#wustctf2020find_me在线网站打不开\">#</a> [WUSTCTF2020] find_me（在线网站打不开）</h5>\n<p>使用 exiftool xxx，然后<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvd2VuYmVuamlhbWkucGhwP3M9bWFuZ3dlbg==\">盲文在线加解密：https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen</span></p>\n<p><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;y$0$u<span class=\"emphasis\">_f$1$n$d$_</span>M$e$e$e$e$e&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/4ff6c936f2b993b6adf9ed29d0f06748.png#pic_center\" alt=\"img\" /></p>\n<h5 id=\"穿越时空的思念\"><a class=\"anchor\" href=\"#穿越时空的思念\">#</a> 穿越时空的思念</h5>\n<p>之前使用静音删除左声道，单声道导出右声道 wav 使用在线网站但是解析有些许错误，所以使用手动解析</p>\n<h5 id=\"guet-ctf2019ko\"><a class=\"anchor\" href=\"#guet-ctf2019ko\">#</a> [GUET-CTF2019]KO</h5>\n<p>&lt;img src=&quot;C:\\Users\\HelloCTF_OS\\AppData\\Roaming\\Typora\\typora-user-images\\image-20250405161154522.png&quot; alt=&quot;image-20250405161154522&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h5 id=\"actf新生赛2020base64隐写\"><a class=\"anchor\" href=\"#actf新生赛2020base64隐写\">#</a> [ACTF 新生赛 2020] base64 隐写</h5>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">base64 = <span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class=\"line\">binstr=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">strings = <span class=\"built_in\">open</span>(<span class=\"string\">r&#x27;C:\\Users\\HelloCTF_OS\\Desktop\\attachment\\tmp\\近在眼前\\ComeOn!.txt&#x27;</span>).read()</span><br><span class=\"line\">e = strings.splitlines()</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> e:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i.find(<span class=\"string\">&quot;==&quot;</span>) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        temp = <span class=\"built_in\">bin</span>((base64.find(i[-<span class=\"number\">3</span>]) &amp; <span class=\"number\">15</span>))[<span class=\"number\">2</span>:]</span><br><span class=\"line\">        <span class=\"comment\"># 取倒数第3个字符，在base64找到对应的索引数（就是编码数），取低4位，再转换为二进制字符</span></span><br><span class=\"line\">        binstr = binstr + <span class=\"string\">&quot;0&quot;</span> * (<span class=\"number\">4</span> - <span class=\"built_in\">len</span>(temp)) + temp  <span class=\"comment\"># 二进制字符补高位0后，连接字符到binstr</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> i.find(<span class=\"string\">&quot;=&quot;</span>) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        temp = <span class=\"built_in\">bin</span>((base64.find(i[-<span class=\"number\">2</span>]) &amp; <span class=\"number\">3</span>))[<span class=\"number\">2</span>:]  <span class=\"comment\"># 取倒数第2个字符，在base64找到对应的索引数（就是编码数），取低2位，再转换为二进制字符</span></span><br><span class=\"line\">        binstr = binstr + <span class=\"string\">&quot;0&quot;</span> * (<span class=\"number\">2</span> - <span class=\"built_in\">len</span>(temp)) + temp  <span class=\"comment\"># 二进制字符补高位0后，连接字符到binstr</span></span><br><span class=\"line\"><span class=\"built_in\">str</span> = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, <span class=\"built_in\">len</span>(binstr), <span class=\"number\">8</span>):</span><br><span class=\"line\">    <span class=\"built_in\">str</span> = <span class=\"built_in\">str</span> + <span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(binstr[i:i + <span class=\"number\">8</span>], <span class=\"number\">2</span>))  <span class=\"comment\"># 从左到右，每取8位转换为ascii字符，连接字符到字符串</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">str</span>)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"swpu2019我有一只马里奥\"><a class=\"anchor\" href=\"#swpu2019我有一只马里奥\">#</a> [SWPU2019] 我有一只马里奥</h5>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/470b5a3cf4221c8ae78e537ab080d524.jpeg\" alt=\"img\" /></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/blog_migrate/227814f4d8ae4900b77417b09ad5b617.png\" alt=\"img\" /></p>\n<p><mark>notepad 1.txt:flag.txt</mark></p>\n<p>使用工具 NtfsStreamsEditor 或 AlternateStreamView 打开存放 1.txt 文件的文件夹，扫描出现隐藏文件文件，导出后打开，得到 flag。</p>\n<p>​\t\t<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmlyc29mdC5uZXQvdXRpbHMvYWx0ZXJuYXRlX2RhdGFfc3RyZWFtcy5odG1sP3NwbT1hMmM2aC4xMjg3MzYzOS5hcnRpY2xlLWRldGFpbC42LjY5YWU0MjQ1UkIyQ2pL\">AlternateStreamView (跳转页面后，向下滑动，下载对应的 32 或 64 位软件)</span></p>\n<h5 id=\"mrctf2020ezmisc\"><a class=\"anchor\" href=\"#mrctf2020ezmisc\">#</a> [MRCTF2020]ezmisc</h5>\n<p>修改宽高</p>\n<h5 id=\"gxyctf2019gakki\"><a class=\"anchor\" href=\"#gxyctf2019gakki\">#</a> [GXYCTF2019]gakki</h5>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\">#Author: mochu7</span></span><br><span class=\"line\">alphabet = <span class=\"string\">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;*()_+- =\\\\&#123;\\\\&#125;[]&quot;</span></span><br><span class=\"line\">strings = <span class=\"built_in\">open</span>(<span class=\"string\">r&#x27;C:\\Users\\HelloCTF_OS\\Desktop\\attachment\\_wolaopo.jpg.extracted\\218E8\\flag.txt&#x27;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\">result = &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> alphabet:</span><br><span class=\"line\">\tcounts = strings.count(i)</span><br><span class=\"line\">\ti = <span class=\"string\">&#x27;&#123;0&#125;&#x27;</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">\tresult[i] = counts</span><br><span class=\"line\"></span><br><span class=\"line\">res = <span class=\"built_in\">sorted</span>(result.items(),key=<span class=\"keyword\">lambda</span> item:item[<span class=\"number\">1</span>],reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">\tflag = <span class=\"built_in\">str</span>(i[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(flag[<span class=\"number\">0</span>],end=<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure></p>\n<h5 id=\"hbnis218caesar\"><a class=\"anchor\" href=\"#hbnis218caesar\">#</a> [HBNIS218]caesar</h5>\n<p>python 代码</p>\n<p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">ciphertext, shift</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;移位解密函数&quot;&quot;&quot;</span></span><br><span class=\"line\">    plaintext = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> ciphertext:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> char.isalpha(): <span class=\"comment\"># 如果是字母，进行移位解密</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> char.isupper():</span><br><span class=\"line\">                plaintext += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(char) - shift - <span class=\"number\">65</span>) % <span class=\"number\">26</span> + <span class=\"number\">65</span>) <span class=\"comment\"># 大写字母移位解密</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                plaintext += <span class=\"built_in\">chr</span>((<span class=\"built_in\">ord</span>(char) - shift - <span class=\"number\">97</span>) % <span class=\"number\">26</span> + <span class=\"number\">97</span>) <span class=\"comment\"># 小写字母移位解密</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>: <span class=\"comment\"># 如果不是字母，直接输出</span></span><br><span class=\"line\">            plaintext += char</span><br><span class=\"line\">    <span class=\"keyword\">return</span> plaintext</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密密文和移位数</span></span><br><span class=\"line\">ciphertext = <span class=\"string\">&#x27;gmbhjtdbftbs&#x27;</span></span><br><span class=\"line\">shift = <span class=\"number\">3</span></span><br><span class=\"line\">ciphertext = ciphertext.lower()</span><br><span class=\"line\"><span class=\"comment\"># 小写易于观察</span></span><br><span class=\"line\"><span class=\"comment\"># 枚举所有可能的移位数，输出所有解密结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">26</span>):</span><br><span class=\"line\">    plaintext = decrypt(ciphertext, i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;%d %s&quot;</span>% (i, plaintext))</span><br></pre></td></tr></table></figure></p>\n<p>随波逐流</p>\n<h5 id=\"suctf2018single-dog\"><a class=\"anchor\" href=\"#suctf2018single-dog\">#</a> [SUCTF2018]single dog</h5>\n<p><mark>aaencode 编码</mark></p>\n<h5 id=\"黑客帝国\"><a class=\"anchor\" href=\"#黑客帝国\">#</a> 黑客帝国</h5>\n<p>导入十六进制，然后发现打开不了，换成 jpg 头，也就是<mark> FF D8 4A46</mark> 之前的删除掉</p>\n<h5 id=\"hbnis2018低个头\"><a class=\"anchor\" href=\"#hbnis2018低个头\">#</a> [HBNIS2018] 低个头</h5>\n<p>键盘按键</p>\n<h5 id=\"swpu2019伟大的侦探\"><a class=\"anchor\" href=\"#swpu2019伟大的侦探\">#</a> [SWPU2019] 伟大的侦探</h5>\n<p><mark>使用 010 Editor 打开密码.txt 文件，选择编辑方式为 EBCDIC (B)，找到明文密码</mark></p>\n<p>之后对照跳舞的小人即可</p>\n<p>[BUUCTF <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzE0MDQxMjQ=\">SWPU2019] 伟大的侦探 1 - 阿里云开发者社区</span></p>\n",
            "tags": []
        },
        {
            "id": "http://whw-colab.github.io/2025/04/17/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "url": "http://whw-colab.github.io/2025/04/17/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "title": "",
            "date_published": "2025-04-16T19:52:11.997Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://whw-colab.github.io/2025/04/15/hello-world/",
            "url": "http://whw-colab.github.io/2025/04/15/hello-world/",
            "title": "Hello World",
            "date_published": "2025-04-15T07:04:41.338Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}