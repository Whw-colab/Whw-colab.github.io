<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://Whw-colab.github.io</id>
    <title>潇潇先生个人博客</title>
    <subtitle></subtitle>
    <icon>http://whw-colab.github.io/images/favicon.ico</icon>
    <link href="http://Whw-colab.github.io" />
    <author>
      <name>潇潇先生</name>
    </author>
    <updated>2025-04-17T04:12:57.000Z</updated>
    <entry>
        <id>http://whw-colab.github.io/2025/04/17/CTF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
        <title>CTF学习笔记</title>
        <link rel="alternate" href="http://whw-colab.github.io/2025/04/17/CTF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
        <content type="html">&lt;h1 id=&#34;ctf学习笔记&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf学习笔记&#34;&gt;❡&lt;/a&gt; CTF 学习笔记&lt;/h1&gt;
&lt;h2 id=&#34;ctf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf&#34;&gt;❡&lt;/a&gt; CTF&lt;/h2&gt;
&lt;h3 id=&#34;定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义&#34;&gt;❡&lt;/a&gt; 定义&lt;/h3&gt;
&lt;p&gt;CTF 就像一场 “黑客版的寻宝游戏”，参赛者通过破解密码、挖漏洞、逆向程序等技术手段，在虚拟世界里找到隐藏的 “flag”（一串特定字符），谁找得快、技术强谁就赢。&lt;/p&gt;
&lt;h3 id=&#34;竞赛模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#竞赛模式&#34;&gt;❡&lt;/a&gt; 竞赛模式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;解题模式（Jeopardy）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 核心机制 *&lt;/strong&gt;&lt;/em&gt;：通过解决安全技术题目获取 flag，按题目分值和解题时间排名，常见于线上选拔赛。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 动态积分规则 *&lt;/strong&gt;&lt;/em&gt;：题目初始分值随解题人数增加而递减，前三名（一血、二血、三血）获得额外奖励分。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 题型分类 *&lt;/strong&gt;&lt;/em&gt;：Web 渗透、逆向工程、密码学、安全杂项（MISC）、二进制漏洞（PWN）等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;玩法&lt;/strong&gt;：像&lt;mark&gt;做试卷&lt;/mark&gt;，题目分类型（如密码破译、逆向工程、Web 漏洞等），解出题目后提交隐藏的 flag 就能得分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;题目难度越高分越多，但解题人数越多分越少（动态积分）。&lt;/li&gt;
&lt;li&gt;适合线上赛，比如预选赛，团队可自由组队，拼脑力和技术积累。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;举例&lt;/strong&gt;：给你一个网站，找 SQL 注入漏洞拿 flag，类似 “黑客版奥数题”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;攻防模式（Attack-Defense） （&lt;mark&gt;黑客版真人 CS**&lt;/mark&gt;）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 核心机制 *&lt;/strong&gt;&lt;/em&gt;：各队伍拥有相同漏洞的服务器（GameBox），攻击对手服务得分，修补自身漏洞防御扣分，实时对抗性强。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 计分规则 *&lt;/strong&gt;&lt;/em&gt;：每轮得分取决于攻击成功次数和防御状态，服务宕机将扣分。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 特点 *&lt;/strong&gt;&lt;/em&gt;：高强度持续 24-48 小时，考验团队协作和体力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ADP 攻防增强模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一句话总结就是 ==&lt;strong&gt;“黑客版的一题两吃”&lt;/strong&gt;==：每个题目只需完成一次攻击（拿 flag）和一次防御（修漏洞），做完就扔，不用反复折腾。&lt;/p&gt;
&lt;h3 id=&#34;举个栗子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#举个栗子&#34;&gt;❡&lt;/a&gt; &lt;strong&gt;举个栗子🌰：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​	假设题目是一个&lt;strong&gt;带漏洞的网站&lt;/strong&gt;，ADP 模式下你要做两件事：&lt;/p&gt;
&lt;p&gt;​		1️⃣ &lt;strong&gt;攻击&lt;/strong&gt;：找到漏洞（比如 SQL 注入），拿到 flag 提交得分（类似解题模式）。&lt;/p&gt;
&lt;p&gt;​		2️⃣ &lt;strong&gt;防御&lt;/strong&gt;：给漏洞打补丁（比如过滤 SQL 语句），上传补丁到平台验证，确认修好后得分。&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;这题就算完事了！&lt;/strong&gt; 之后不用再管它，专心搞其他题目就行。&lt;/p&gt;
&lt;h3 id=&#34;和传统攻防awd的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#和传统攻防awd的区别&#34;&gt;❡&lt;/a&gt; &lt;strong&gt;和传统攻防（AwD）的区别&lt;/strong&gt;：&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;对比项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;传统攻防（AwD）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ADP 攻防增强&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;攻击方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;全程用脚本批量攻击对手，抢 flag 刷分&lt;/td&gt;
&lt;td&gt;每个题只需攻击一次，提交 flag 就停手&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;防御方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;边修漏洞边防对手攻击，服务崩了会疯狂扣分&lt;/td&gt;
&lt;td&gt;修好漏洞并验证通过后，这题永远不扣分了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;选手压力&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;熬夜修漏洞 + 写攻击脚本，像打仗一样累&lt;/td&gt;
&lt;td&gt;像做作业，一题两步骤，做完就躺平&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主办方压力&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;要维护几十台服务器，防止被选手打崩&lt;/td&gt;
&lt;td&gt;题目环境用完就删，省电省服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;adp的核心优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#adp的核心优势&#34;&gt;❡&lt;/a&gt; &lt;strong&gt;ADP 的核心优势&lt;/strong&gt;：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;选手省力&lt;/strong&gt;：不用写自动化脚本，不用盯着服务是否崩溃，专注解题和修漏洞本身。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主办方省钱&lt;/strong&gt;：题目环境用完就销毁，不用扛住几百个队伍的持续攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;题目灵活&lt;/strong&gt;：比赛过程中可以随时换题（比如旧题下线，新题上线），增加新鲜感。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;适合谁玩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适合谁玩&#34;&gt;❡&lt;/a&gt; &lt;strong&gt;适合谁玩？&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;新手友好&lt;/strong&gt;：适合刚接触攻防模式的小白，&lt;mark&gt;不用学写攻击脚本&lt;/mark&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中小型比赛&lt;/strong&gt;：比如企业内训、高校校赛，运维成本低。&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;&lt;strong&gt;专精 Web/PWN 的选手&lt;/strong&gt;&lt;/mark&gt;：ADP 通常只出这两种题型，其他方向（如逆向、密码学）不参与。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：&lt;mark&gt;ADP 就是 **“简化版攻防”**，把持续对抗拆成单次任务，让选手和主办方都轻松点～&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;混合模式（Mix） （&lt;mark&gt;&lt;strong&gt;解题 + 攻防二合一&lt;/strong&gt;&lt;/mark&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 机制 *&lt;/strong&gt;&lt;/em&gt;：结合解题与攻防，解题获取基础分后进入攻防对抗，分数动态增减。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 典型赛事 *&lt;/strong&gt;&lt;/em&gt;：iCTF 国际赛、RealWorld CTF（RWCTF）。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;其他衍生模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;*KoH（抢占山头）*&lt;/strong&gt;&lt;/em&gt;：攻击并控制中央服务器，写入队伍标识后防御加固，定期判定得分。&lt;/p&gt;
&lt;p&gt;​	&lt;mark&gt;&lt;strong&gt;RW（真实世界）&lt;/strong&gt;&lt;/mark&gt;：模拟真实漏洞利用，比如攻击物联网设备。&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;* 战争分享模式 *&lt;/strong&gt;&lt;/em&gt;：队伍互相出题 + 解题 + 分享思路，综合评分。&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;*AI 自动化（RHG）*&lt;/strong&gt;&lt;/em&gt;：编写自动化程序（bot）全自动挖掘漏洞并提交 flag。&lt;/p&gt;
&lt;h3 id=&#34;ctf主要题型及考察重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf主要题型及考察重点&#34;&gt;❡&lt;/a&gt; CTF 主要题型及考察重点&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼0–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;ctf学习路线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf学习路线&#34;&gt;❡&lt;/a&gt; CTF 学习路线&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初期基础&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*Web 开发 *&lt;/strong&gt;&lt;/em&gt;：HTML/CSS/JS、PHP+MySQL 开发动态网站，掌握基础漏洞原理（如 SQL 注入）。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 工具入门 *&lt;/strong&gt;&lt;/em&gt;：Burp Suite 抓包改包、Python 脚本编写（requests 库）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中期漏洞专项&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 核心漏洞 *&lt;/strong&gt;&lt;/em&gt;：SQL 注入、文件上传、命令执行（RCE）、XSS/CSRF。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 靶场练习 *&lt;/strong&gt;&lt;/em&gt;：sqli-labs、upload-labs、DVWA。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后期综合实战&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 赛事参与 *&lt;/strong&gt;&lt;/em&gt;：BUUCTF、CTFHub 等平台刷题，参与校赛 / XCTF 联赛。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 知识扩展 *&lt;/strong&gt;&lt;/em&gt;：逆向工程（《加密与解密》）、二进制漏洞（《IDA Pro 权威指南》）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;比赛形式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比赛形式&#34;&gt;❡&lt;/a&gt; 比赛形式&lt;/h3&gt;
&lt;p&gt;CTF 比赛一般分为线上赛和线下赛。通常来说，线上赛多为 &lt;code&gt;初赛&lt;/code&gt; ，线下赛多为 &lt;code&gt;决赛&lt;/code&gt; ，但是也不排除直接进行&lt;/p&gt;
&lt;h4 id=&#34;线上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线上&#34;&gt;❡&lt;/a&gt; 线上&lt;/h4&gt;
&lt;p&gt;选手通过主办方搭建的比赛平台在线注册，在线做题并提交 flag，线上比赛多为解题模式，攻防模式较为少见。通常来说对于长时间未解出的题目，主办方会酌情给出 == 提示 ( &lt;code&gt;Hint&lt;/code&gt; )== 来帮助选手做题。&lt;/p&gt;
&lt;h4 id=&#34;线下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线下&#34;&gt;❡&lt;/a&gt; 线下&lt;/h4&gt;
&lt;p&gt;选手前往比赛所在地，现场接入比赛网络进行比赛，&lt;mark&gt;线下多为 AWD 模式&lt;/mark&gt;，近年来随着比赛赛制的不断革新，线下赛也会出现多种模式混合进行，例如&lt;mark&gt;结合&lt;strong&gt;解题 + AWD&lt;/strong&gt; ，&lt;strong&gt;解题 + RW&lt;/strong&gt;&lt;/mark&gt; 等等&lt;/p&gt;
&lt;h3 id=&#34;题目类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目类型&#34;&gt;❡&lt;/a&gt; 题目类型&lt;/h3&gt;
&lt;p&gt;​	在 CTF 中主要包含以下 5 个大类的题目，有些比赛会根据自己的侧重点单独添加某个分类，例如 == &lt;code&gt;移动设备(Mobile)&lt;/code&gt; ,  &lt;code&gt;电子取证(Forensics)&lt;/code&gt; == 等，近年来也会出来混合类型的题目，例如在 Web 中存在一个二进制程序，需要选手先利用 Web 的漏洞获取到二进制程序，之后通过逆向或是 Pwn 等方式获得最终 flag&lt;/p&gt;
&lt;h4 id=&#34;web&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web&#34;&gt;❡&lt;/a&gt; Web&lt;/h4&gt;
&lt;p&gt;​	Web 类题目大部分情况下和网、Web、HTTP 等相关技能有关。主要考察选手对于 Web 攻防的一些知识技巧。诸如 == &lt;code&gt;SQL注入&lt;/code&gt; 、 &lt;code&gt;XSS&lt;/code&gt; 、 &lt;code&gt;代码执行&lt;/code&gt; 、 &lt;code&gt;代码审计&lt;/code&gt;  == 等等都是很常见的考点。一般情况下 Web 题目只会给出一个能够访问的 URL。部分题目会给出附件&lt;/p&gt;
&lt;h4 id=&#34;pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn&#34;&gt;❡&lt;/a&gt; Pwn&lt;/h4&gt;
&lt;p&gt;​	Pwn 类题目重点考察选手对于 == &lt;code&gt;二进制漏洞的挖掘和利用&lt;/code&gt; &lt;mark&gt;能力，其考点也通常在&lt;/mark&gt; &lt;code&gt;堆栈溢出&lt;/code&gt; 、 &lt;code&gt;格式化漏洞&lt;/code&gt; 、 &lt;code&gt;UAF&lt;/code&gt; 、 &lt;code&gt;Double Free&lt;/code&gt; == 等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本 ( &lt;code&gt;Exploit&lt;/code&gt; )，进而对主办方给出的远程服务器进行攻击并获取 flag 通常来说 Pwn 类题目给出的远程服务器信息为 &lt;code&gt;nc IP_ADDRESS PORT&lt;/code&gt; ，例如 &lt;code&gt;nc 1.2.3.4 4567&lt;/code&gt;  这种形式，表示在 &lt;code&gt;1.2.3.4&lt;/code&gt;  这个 IP 的 &lt;code&gt;4567&lt;/code&gt;  端口上运行了该题目&lt;/p&gt;
&lt;h4 id=&#34;reverse&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse&#34;&gt;❡&lt;/a&gt; Reverse&lt;/h4&gt;
&lt;p&gt;Re 类题目考察选手 &lt;code&gt;逆向工程&lt;/code&gt; 能力。题目会给出一个&lt;mark&gt;可执行二进制文件&lt;/mark&gt;，有些时候也可能是 Android 的 APK 安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得 flag&lt;/p&gt;
&lt;h4 id=&#34;crypto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto&#34;&gt;❡&lt;/a&gt; Crypto&lt;/h4&gt;
&lt;p&gt;​	Crypto 类题目考察选手对 &lt;code&gt;密码学&lt;/code&gt; 相关知识的了解程度，诸如 &lt;code&gt;RSA&lt;/code&gt; 、 &lt;code&gt;AES&lt;/code&gt; 、 &lt;code&gt;DES&lt;/code&gt;  等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。&lt;/p&gt;
&lt;h4 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;❡&lt;/a&gt; Misc&lt;/h4&gt;
&lt;p&gt;​	Misc 意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出 flag。&lt;/p&gt;
&lt;p&gt;​	常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT 相关等等。五花八门，种类繁多。&lt;/p&gt;
&lt;h2 id=&#34;刷题网站&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#刷题网站&#34;&gt;❡&lt;/a&gt; 刷题网站&lt;/h2&gt;
&lt;h3 id=&#34;ctfhub&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctfhub&#34;&gt;❡&lt;/a&gt; CTFHub&lt;/h3&gt;
&lt;h4 id=&#34;misc-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-2&#34;&gt;❡&lt;/a&gt; Misc&lt;/h4&gt;
&lt;h5 id=&#34;流量分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流量分析&#34;&gt;❡&lt;/a&gt; 流量分析&lt;/h5&gt;
&lt;h6 id=&#34;数据库流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库流量&#34;&gt;❡&lt;/a&gt; 数据库流量&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;mysql流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql流量&#34;&gt;❡&lt;/a&gt; Mysql 流量&lt;/h5&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;服务端回一个 Response OK , 至此，登录验证就算是完成啦～&lt;/p&gt;
&lt;p&gt;后面客户端向服务端发起查询请求：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;==select @@version_comment limit 1==
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意得选择&lt;mark&gt;分组字节流&lt;/mark&gt;才行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;redis流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis流量&#34;&gt;❡&lt;/a&gt; Redis 流量&lt;/h5&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;mongodb流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mongodb流量&#34;&gt;❡&lt;/a&gt; MongoDB 流量&lt;/h5&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：搜索时要这样才行 ==ctfhub {== 不然找不到。&lt;/p&gt;
&lt;h6 id=&#34;协议流量分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协议流量分析&#34;&gt;❡&lt;/a&gt; 协议流量分析&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;ICMP-data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：tshark - r 「xxx」 -Y 「相关筛选命令」 -T fields -e data &amp;gt; xxx&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;关键参数&lt;/mark&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-Y 「icmp &amp;amp;&amp;amp; icmp.type==8」：过滤 ICMP 类型为 8（Echo Request）的包 。
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;这边等于 0 和 8 都可以，8 代表请求包，0 代表应答包&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-T fields -e data：仅输出 data 字段的十六进制内容 。&lt;/li&gt;
&lt;li&gt;flag.txt：将结果重定向到文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见 CTF 题型分析&lt;br /&gt;
单向传输（Type 8）：&lt;br /&gt;
Flag 数据通过客户端发送的多个请求包传输（如每个包携带一个字符）。&lt;/p&gt;
&lt;p&gt;​		解法：过滤 Type 8 并提取 data。&lt;br /&gt;
​	双向传输（Type 8 + Type 0）：&lt;br /&gt;
​		Flag 可能分散在请求和响应包中（需同时分析两者）。&lt;/p&gt;
&lt;p&gt;​		解法：过滤 icmp（不限制 Type），再根据包方向（ip.src/ip.dst）分类处理。&lt;/p&gt;
&lt;p&gt;​	隐蔽回传（Type 0）：&lt;br /&gt;
​		恶意程序通过响应包将敏感数据回传给攻击者（如数据外泄）。&lt;/p&gt;
&lt;p&gt;​		解法：过滤 Type 0 并提取 data。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Type 8 vs Type 0&lt;/strong&gt;：取决于 Flag 数据的&lt;strong&gt;传输方向&lt;/strong&gt;（谁发送的包）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CTF 经验法则&lt;/strong&gt;： 如果题目提示 “客户端发送了异常 Ping 包”，优先用 &lt;code&gt;Type 8&lt;/code&gt; ；若提示 “服务器返回了异常应答”，则用 &lt;code&gt;Type 0&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼1–&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ICMP-Length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;!–code￼2–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;彩蛋&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#彩蛋&#34;&gt;❡&lt;/a&gt; 彩蛋&lt;/h4&gt;
&lt;h5 id=&#34;首页&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#首页&#34;&gt;❡&lt;/a&gt; 首页&lt;/h5&gt;
&lt;p&gt;在 FuzzDomain 工具中，{fuzz}.ctfhub.com 的设计核心是自动化生成测试目标。具体来说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态占位符作用
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;{fuzz} 是一个动态替换标记，相当于批量操作的 &amp;quot;通配符&amp;quot;&lt;/mark&gt;。工具会从您指定的字典文件（图中路径 Dicwww.txt）中逐行读取内容，将每一行文字替换到 {fuzz} 的位置，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS13d3ctZW84ZXExOWFueTJhLmN0Zmh1Yi5jb20=&#34;&gt;生成如 www.ctfhub.com&lt;/span&gt;、api.ctfhub.com 等完整域名进行探测。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安全测试实战场景
&lt;ul&gt;
&lt;li&gt;这种设计特别适用于 CTF 竞赛 / 渗透测试中：假设攻击者想找出目标网站（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1jdGZodWItaGg0ay5jb20=&#34;&gt;如 ctfhub.com&lt;/span&gt;）隐藏的子域名，但无法穷举所有可能性。通过加载包含常见子域名字段的字典（如 admin、test、dev 等），工具可自动化生成并验证数千种组合，快速定位有效域名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;扩展性设计
&lt;ul&gt;
&lt;li&gt;界面下方的字符规则 pqrstuvwxyz0123456789 Min 1 Max 3 表明：除了使用预设字典，工具还支持按字符规则自动生成测试内容。例如当勾选该规则时，会自动生成 1-3 位包含指定字符的随机组合（如 p1、2qr 等），与 {fuzz} 配合实现双重探测策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种 {占位符}+ 字典 / 规则的组合方式，在保证测试覆盖率的同时大幅提升效率，是网络安全工具中常见的设计范式&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼3–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;彩蛋-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#彩蛋-2&#34;&gt;❡&lt;/a&gt; 彩蛋&lt;/h5&gt;
&lt;h5 id=&#34;题目入口该题需要之前的题目提交flag后不关闭环境但是我这边提交后自动关闭环境没有办法实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目入口该题需要之前的题目提交flag后不关闭环境但是我这边提交后自动关闭环境没有办法实现&#34;&gt;❡&lt;/a&gt; 题目入口（该题需要之前的题目提交 flag 后不关闭环境，但是我这边提交后自动关闭环境没有办法实现）&lt;/h5&gt;
&lt;h5 id=&#34;writeup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#writeup&#34;&gt;❡&lt;/a&gt; WriteUp&lt;/h5&gt;
&lt;h5 id=&#34;工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具&#34;&gt;❡&lt;/a&gt; 工具&lt;/h5&gt;
&lt;p&gt;在 CTFHub 工具 页面翻到最后发现 egg&lt;/p&gt;
&lt;h5 id=&#34;赛事&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#赛事&#34;&gt;❡&lt;/a&gt; 赛事&lt;/h5&gt;
&lt;h5 id=&#34;真题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#真题&#34;&gt;❡&lt;/a&gt; 真题&lt;/h5&gt;
&lt;h5 id=&#34;投稿提交&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#投稿提交&#34;&gt;❡&lt;/a&gt; 投稿提交&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2d1eW91bmcvQ2FwdGZFbmNvZGVyJUU2JTg4JTk2JUU4JTgwJTg1JUU0JUJEJUJGJUU3JTk0JUE4JUU5JTlBJThGJUU2JUIzJUEyJUU5JTgwJTkwJUU2JUI1JTgxJUU1JThEJUIzJUU1JThGJUFG&#34;&gt;https://github.com/guyoung/CaptfEncoder 或者使用随波逐流即可&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;flag[36:42]：a5f3a8&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93cml0ZXVwLmN0Zmh1Yi5jb20vT3RoZXIvJUU2JThBJTk1JUU3JUE4JUJGJUU4JUFGJUI0JUU2JTk4JThFL2VhZWQzYWJkLmh0bWw=&#34;&gt;https://writeup.ctfhub.com/Other/ 投稿说明 /eaed3abd.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;AES 解密&lt;/mark&gt;：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rvb2wuY2hhY3VvLm5ldC9jcnlwdGFlcw==&#34;&gt;http://tool.chacuo.net/cryptaes&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;web-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-2&#34;&gt;❡&lt;/a&gt; Web&lt;/h4&gt;
&lt;h5 id=&#34;目录遍历&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录遍历&#34;&gt;❡&lt;/a&gt; 目录遍历&lt;/h5&gt;
&lt;p&gt;​	&lt;strong&gt;知识点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		目录遍历是 web 中常见的基础操作，我们通常会通过目录的遍历来发现是否存在对我们有用的信息。&lt;/p&gt;
&lt;h5 id=&#34;phpinfo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#phpinfo&#34;&gt;❡&lt;/a&gt; PHPINFO&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;​	PHPinfo：输出 PHP 当前状态的大量信息，包含了 PHP 编译选项、启用的扩展、PHP 版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP 环境变量、操作系统版本信息、path 变量、配置选项的本地值和主值、HTTP 头和 PHP 授权信息 (License)。&lt;/li&gt;
&lt;li&gt;​	phpinfo () 同时是个很有价值的、包含所有 EGPCS (Environment, GET, POST, Cookie, Server) 数据的调试工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;备份文件下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#备份文件下载&#34;&gt;❡&lt;/a&gt; 备份文件下载&lt;/h5&gt;
&lt;h6 id=&#34;网站源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网站源码&#34;&gt;❡&lt;/a&gt; 网站源码&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;知识点&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;常见的网站源码的文件名有：『web』, 『website』, 『backup』, 『back』, 『www』, 『wwwroot』, &#39;temp’等等。&lt;/li&gt;
&lt;li&gt;常见的网站源码备份文件后缀有：『tar』, 『tar.gz』, 『zip』, &#39;rar’等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;先使用 /www.zip 等给的不同来试，发现只有 /www.zip 有东西，而且直接打开还没有信息，只能网站打开才行&lt;/mark&gt;。&lt;/p&gt;
&lt;h6 id=&#34;bak文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bak文件&#34;&gt;❡&lt;/a&gt; bak 文件&lt;/h6&gt;
&lt;p&gt;bak 文件泄露&lt;/p&gt;
&lt;p&gt;​	有些时候网站管理员可能为了方便，会在修改某个文件的时候先复制一份，将其命名为 xxx.bak。而&lt;mark&gt;大部分 Web Server 对 bak 文件并不做任何处理，导致可以直接下载，从而获取到网站某个文件的源代码&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;得加入 /index.php.bak 尤其是最后面的.bak 才行&lt;/mark&gt;&lt;/p&gt;
&lt;h6 id=&#34;vim缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vim缓存&#34;&gt;❡&lt;/a&gt; vim 缓存&lt;/h6&gt;
&lt;p&gt;​	vim 交换文件名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在使用 vim 时会创建临时缓存文件，关闭 vim 时缓存文件则会被删除，当 vim 异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容&lt;/li&gt;
&lt;li&gt;以 index.php 为例：
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;第一次产生的交换文件名为 .index.php.swp&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;再次意外退出后，将会产生名为 &lt;mark&gt;.index.php.swo&lt;/mark&gt; 的交换文件&lt;/li&gt;
&lt;li&gt;第三次产生的交换文件则为 &lt;mark&gt;.index.php.swn&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;vim 一旦异常退出就会生成 swp 文件，且是隐藏文件&lt;/mark&gt;。隐藏文件要加点，首页也说了 flag 在 index.php 源码中 所以 &lt;mark&gt;/.index.php.swp&lt;/mark&gt; 直接下载。&lt;/p&gt;
&lt;h6 id=&#34;ds_store&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ds_store&#34;&gt;❡&lt;/a&gt; .DS_Store&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;.DS_Store 是 Mac 下 Finder 用来保存如何展示文件 / 文件夹的数据文件，每个文件夹下对应一个&lt;/mark&gt;。&lt;/li&gt;
&lt;li&gt;如果开发 / 设计人员将.DS_Store 上传部署到线上环境，可能造成文件目录结构泄漏，特别是备份文件、源代码文件。&lt;/li&gt;
&lt;li&gt;在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;下载后打开之后得用 linux 中的 cat 查看并且再用 URL 接着执行查看即可&lt;/mark&gt;。&lt;/p&gt;
&lt;h5 id=&#34;git泄露&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git泄露&#34;&gt;❡&lt;/a&gt; Git 泄露&lt;/h5&gt;
&lt;h3 id=&#34;buuctf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#buuctf&#34;&gt;❡&lt;/a&gt; BUUCTF&lt;/h3&gt;
&lt;h4 id=&#34;web-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-3&#34;&gt;❡&lt;/a&gt; Web&lt;/h4&gt;
&lt;h5 id=&#34;极客大挑战-2019easysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#极客大挑战-2019easysql&#34;&gt;❡&lt;/a&gt; [极客大挑战 2019] EasySQL&lt;/h5&gt;
&lt;h6 id=&#34;思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路&#34;&gt;❡&lt;/a&gt; 思路&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;找输入点、试闭合符、构造万能密码&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;万能密码构造公式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼4–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;进阶操作&lt;/strong&gt; 若过滤了空格用 &lt;code&gt;/**/&lt;/code&gt;  代替，过滤 &lt;code&gt;or&lt;/code&gt;  用 &lt;code&gt;||&lt;/code&gt;  连接符等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工具使用&lt;/strong&gt; HackBar 直接修改 URL 参数发送请求（GET 传参用 &lt;code&gt;%23&lt;/code&gt;  代替 &lt;code&gt;#&lt;/code&gt; ）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;crypto-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto-2&#34;&gt;❡&lt;/a&gt; Crypto&lt;/h4&gt;
&lt;h5 id=&#34;一眼就解密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一眼就解密&#34;&gt;❡&lt;/a&gt; 一眼就解密&lt;/h5&gt;
&lt;h5 id=&#34;md5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#md5&#34;&gt;❡&lt;/a&gt; MD5&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY21kNS5jb20v&#34;&gt;md5 在线解密破解，md5 解密加密&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;url编码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#url编码&#34;&gt;❡&lt;/a&gt; Url 编码&lt;/h5&gt;
&lt;h5 id=&#34;看我回旋踢&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#看我回旋踢&#34;&gt;❡&lt;/a&gt; 看我回旋踢&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;synt=flag&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;摩丝&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#摩丝&#34;&gt;❡&lt;/a&gt; 摩丝&lt;/h5&gt;
&lt;h5 id=&#34;password一开始有点懵算是一种iq题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#password一开始有点懵算是一种iq题&#34;&gt;❡&lt;/a&gt; password（一开始有点懵，算是一种 iq 题）&lt;/h5&gt;
&lt;p&gt;判断出是 10 个数，数字占 8 个，那么就从姓名缩写来看了&lt;/p&gt;
&lt;h5 id=&#34;变异凯撒&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#变异凯撒&#34;&gt;❡&lt;/a&gt; 变异凯撒&lt;/h5&gt;
&lt;p&gt;​	上面的 acsii 码值对比表可以看到 == 第一个字符向后移了 5,== 第二个向后移了 6, 第三个向后移了 7, 以此类推，很容易想到变异凯撒即每个向后移的位数是前一个加 1&lt;/p&gt;
&lt;h5 id=&#34;quoted-printable&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quoted-printable&#34;&gt;❡&lt;/a&gt; Quoted-printable&lt;/h5&gt;
&lt;p&gt;​	&lt;mark&gt;Quoted-printable 将任何 8-bit 字节值可编码为 3 个字符：一个等号 &amp;quot;=&amp;quot; 后跟随两个十六进制数字 (0–9 或 A–F) 表示该字节的数值。&lt;/mark&gt;&lt;br /&gt;
​	例如，ASCII 码换页符（十进制值为 12）可以表示为 &amp;quot;=0C&amp;quot;， 等号 &amp;quot;=&amp;quot;（十进制值为 61）必须表示为 &amp;quot;=3D&amp;quot;，gb2312 下 “中” 表示为 = D6=D0。除了可打印 ASCII 字符与换行符以外，所有字符必须表示为这种格式。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pa2VDb2tlL2FydGljbGUvZGV0YWlscy8xMDU4NzczNzM=&#34;&gt;https://blog.csdn.net/MikeCoke/article/details/105877373&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;篱笆墙的影子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#篱笆墙的影子&#34;&gt;❡&lt;/a&gt; 篱笆墙的影子&lt;/h5&gt;
&lt;h5 id=&#34;rabbit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rabbit&#34;&gt;❡&lt;/a&gt; Rabbit&lt;/h5&gt;
&lt;h5 id=&#34;rsa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rsa&#34;&gt;❡&lt;/a&gt; RSA&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼5–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;丢失的md5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#丢失的md5&#34;&gt;❡&lt;/a&gt; 丢失的 MD5&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼6–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;alice与bob&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#alice与bob&#34;&gt;❡&lt;/a&gt; Alice 与 Bob&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5qYjUxLm5ldC9qaXN1YW5xaS9mYWN0b3JfY2FsYw==&#34;&gt;在线分解质因数计算器工具 - 在线计算器 - 脚本之家在线工具&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5oaWVuY29kZS5jb20vaGFzaC5odG1s&#34;&gt;CTF 在线工具 - 哈希计算 | MD5、SHA1、SHA256、SHA384、SHA512、RIPEMD、RIPEMD160&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;大帝的密码武器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#大帝的密码武器&#34;&gt;❡&lt;/a&gt; 大帝的密码武器&lt;/h5&gt;
&lt;p&gt;密文发现 C 为大写字母，而 C 移 13 位应该是大写 P，替换后，得到最终 flag。&lt;/p&gt;
&lt;h5 id=&#34;rsarsa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rsarsa&#34;&gt;❡&lt;/a&gt; rsarsa&lt;/h5&gt;
&lt;p&gt;使用 RSA Tool2 工具解题&lt;/p&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼7–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;windows系统密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#windows系统密码&#34;&gt;❡&lt;/a&gt; Windows 系统密码&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;两个都用 Md5 试一下。&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;信息化时代的步伐&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息化时代的步伐&#34;&gt;❡&lt;/a&gt; 信息化时代的步伐&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;题目说结果为中文，结合 36（4x9）位的纯数字密文，猜测为中文电码解密。&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvZGlhbmJhby5waHA=&#34;&gt;电报码在线翻译（国际摩尔斯电码及中文电码） - 千千秀字&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;凯撒替换呵呵&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#凯撒替换呵呵&#34;&gt;❡&lt;/a&gt; 凯撒？替换？呵呵！&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWlwcWl1cC5jb20v&#34;&gt;Quipqiup - Cryptoquip 和 Cryptogram 求解器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/fa5b30ef9a70de0a72aaf87bb44dc655.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/9a56f91a23107e16a1db6ddac5e7ea98.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;萌萌哒的八戒&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#萌萌哒的八戒&#34;&gt;❡&lt;/a&gt; 萌萌哒的八戒&lt;/h5&gt;
&lt;p&gt;binwalk 然后猪圈密码即可&lt;/p&gt;
&lt;h5 id=&#34;权限获得第一步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#权限获得第一步&#34;&gt;❡&lt;/a&gt; 权限获得第一步&lt;/h5&gt;
&lt;h4 id=&#34;misc-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-3&#34;&gt;❡&lt;/a&gt; Misc&lt;/h4&gt;
&lt;h5 id=&#34;金三胖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#金三胖&#34;&gt;❡&lt;/a&gt; 金三胖&lt;/h5&gt;
&lt;p&gt;使用&lt;mark&gt;随波逐流、StegSolve-FrameBrower&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;你竟然赶我走&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你竟然赶我走&#34;&gt;❡&lt;/a&gt; 你竟然赶我走&lt;/h5&gt;
&lt;p&gt;使用&lt;mark&gt; strings、随波逐流、010Editor&lt;/mark&gt; 方法&lt;/p&gt;
&lt;h5 id=&#34;二维码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二维码&#34;&gt;❡&lt;/a&gt; 二维码&lt;/h5&gt;
&lt;p&gt;可以使用&lt;mark&gt; 010Editor 或者是 strings&lt;/mark&gt; 进行查看，发现里面还有文件，所以采用了修改后缀名为 zip 发现有密码，或者使用 Binwalk 进行也可以，然后使用 archar 或者 ziperllo 进行爆破，出来密码即可。&lt;/p&gt;
&lt;h5 id=&#34;大白&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#大白&#34;&gt;❡&lt;/a&gt; 大白&lt;/h5&gt;
&lt;h6 id=&#34;python代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python代码&#34;&gt;❡&lt;/a&gt; python 代码&lt;/h6&gt;
&lt;p&gt;&amp;lt;!–code￼8–&amp;gt;&lt;/p&gt;
&lt;p&gt;使用随波逐流或者&lt;mark&gt; 010Editor&lt;/mark&gt; 进行修改宽高比&lt;/p&gt;
&lt;h5 id=&#34;wireshark&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wireshark&#34;&gt;❡&lt;/a&gt; wireshark&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;http &amp;amp;&amp;amp; http.request.method == 「POST」&lt;/mark&gt;&lt;/p&gt;
&lt;h6 id=&#34;分析图片信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析图片信息&#34;&gt;❡&lt;/a&gt; 分析图片信息&lt;/h6&gt;
&lt;h5 id=&#34;乌镇峰会种图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#乌镇峰会种图&#34;&gt;❡&lt;/a&gt; 乌镇峰会种图&lt;/h5&gt;
&lt;p&gt;strings 就行&lt;/p&gt;
&lt;h5 id=&#34;n种方法解决&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#n种方法解决&#34;&gt;❡&lt;/a&gt; N 种方法解决&lt;/h5&gt;
&lt;p&gt;使用随波逐流工具&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGUteC5jbi9lbmNvZGluZ3MvQmFzZTY0LmFzcHg=&#34;&gt;https://the-x.cn/encodings/Base64.aspx&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;基础破解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础破解&#34;&gt;❡&lt;/a&gt; 基础破解&lt;/h5&gt;
&lt;p&gt;使用 archpr 工具即可，选数字&lt;/p&gt;
&lt;h5 id=&#34;文件中的秘密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件中的秘密&#34;&gt;❡&lt;/a&gt; 文件中的秘密&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1FWElGLWU3NmZ5MDlmLm9yZw==&#34;&gt;EXIF 信息.org&lt;/span&gt;&lt;/strong&gt;:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leGlmaW5mby5vcmc=&#34;&gt;https://exifinfo.org&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leGlmaW5mby5vcmcv&#34;&gt;https://exifinfo.org/&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;zip伪加密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zip伪加密&#34;&gt;❡&lt;/a&gt; zip 伪加密&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼9–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;一找 PK 头，二看标志位，奇改偶，伪加密解除&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/direct/e0d9c37ffa4443cb8126d505954f1545.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 09 改为 00 即可&lt;/p&gt;
&lt;h5 id=&#34;被嗅探的流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#被嗅探的流量&#34;&gt;❡&lt;/a&gt; 被嗅探的流量&lt;/h5&gt;
&lt;h5 id=&#34;lsb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lsb&#34;&gt;❡&lt;/a&gt; LSB&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;&lt;em&gt;先单蓝后双红绿，三通道组合最后试&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;em&gt;Alpha 通道碰不得，藏密必选 RGB&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;位平面选择原则三句黄金口诀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#位平面选择原则三句黄金口诀&#34;&gt;❡&lt;/a&gt; 位平面选择原则（三句黄金口诀）&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;口诀①&lt;/strong&gt;：「LSB 隐写 0 位藏，9 成题目在此方」 &lt;strong&gt;口诀②&lt;/strong&gt;：「红绿蓝三原色，同步勾选效率强」 &lt;strong&gt;口诀③&lt;/strong&gt;：「高位平面先别慌，特殊变形才要防」&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;为何只勾选 0 位？&lt;/strong&gt; LSB 隐写本质是将数据藏在像素值二进制的最低位（第 0 位），如同把字写在纸的最边缘。 &lt;em&gt;示例&lt;/em&gt;：像素值 &lt;code&gt;255&lt;/code&gt;  的二进制是 &lt;code&gt;11111111&lt;/code&gt; ，修改第 0 位后变为 &lt;code&gt;11111110&lt;/code&gt; （差值仅 1，肉眼不可见）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;什么情况要勾选 1/2 位？&lt;/strong&gt; 当题目明确提示 &amp;quot;高位隐写&amp;quot; 或常规 0 位无结果时（约占 CTF 题 10%），按以下优先级排查：&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼10–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;rar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rar&#34;&gt;❡&lt;/a&gt; rar&lt;/h5&gt;
&lt;p&gt;使用 archpr 工具即可，选数字&lt;/p&gt;
&lt;h5 id=&#34;qr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#qr&#34;&gt;❡&lt;/a&gt; qr&lt;/h5&gt;
&lt;p&gt;使用 qr serach 工具扫一下即可&lt;/p&gt;
&lt;h5 id=&#34;镜子里面的世界&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#镜子里面的世界&#34;&gt;❡&lt;/a&gt; 镜子里面的世界&lt;/h5&gt;
&lt;p&gt;使用 steg 里面的 dataexract 选择三个 0 即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CHelloCTF_OS%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250414112403740.png&#34; alt=&#34;image-20250414112403740&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;爱因斯坦&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#爱因斯坦&#34;&gt;❡&lt;/a&gt; 爱因斯坦&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;binwalk -e 『/mnt/c/Users/HelloCTF_OS/Desktop/ 爱因斯坦 /misc2.jpg』&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼11–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;ningen&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ningen&#34;&gt;❡&lt;/a&gt; ningen&lt;/h5&gt;
&lt;h6 id=&#34;安装binwalk&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装binwalk&#34;&gt;❡&lt;/a&gt; 安装 Binwalk&lt;/h6&gt;
&lt;p&gt;&amp;lt;!–code￼12–&amp;gt;&lt;/p&gt;
&lt;p&gt;使用 BInwalk 提取，或者使用 010 删除前面保存 rar 然后密码破解即可&lt;/p&gt;
&lt;h5 id=&#34;小明的保险箱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小明的保险箱&#34;&gt;❡&lt;/a&gt; 小明的保险箱&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;通过 ff d9 发现 rar&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;easycap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#easycap&#34;&gt;❡&lt;/a&gt; easycap&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;通过追踪流查看&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;隐藏的钥匙&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#隐藏的钥匙&#34;&gt;❡&lt;/a&gt; 隐藏的钥匙&lt;/h5&gt;
&lt;p&gt;使用 strings 发现 flag 然后 Base64 解密即可&lt;/p&gt;
&lt;h5 id=&#34;另外一个世界&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#另外一个世界&#34;&gt;❡&lt;/a&gt; 另外一个世界&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucmFwaWR0YWJsZXMub3JnL3poLUNOL2NvbnZlcnQvbnVtYmVyL2FzY2lpLWhleC1iaW4tZGVjLWNvbnZlcnRlci5odG1s&#34;&gt;ASCII 文本，十六进制，二进制，十进制，Base64 转换器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;使用二进制解密即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CHelloCTF_OS%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250414114853391.png&#34; alt=&#34;image-20250414114853391&#34; /&gt;s&lt;/p&gt;
&lt;h5 id=&#34;数据包中的线索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据包中的线索&#34;&gt;❡&lt;/a&gt; 数据包中的线索&lt;/h5&gt;
&lt;p&gt;通过追踪流发现有 = 号，判断可能是 base64, 但是过长考虑可能是图片转 base64 那么，需要通过网站并且添加头 ==“data:image/jpeg;base64,” 点击追加 img 标签 ==，&lt;/p&gt;
&lt;p&gt;图片在线转换 base64 编码 - 在线 base64 编码转换成图片工具 (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2pzb25zLmNu&#34;&gt;jsons.cn&lt;/span&gt;)](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5qc29ucy5jbi9pbWcyYmFzZTY0LyVFRiVCQyU4OQ==&#34;&gt;http://www.jsons.cn/img2base64/）&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;神秘龙卷风&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#神秘龙卷风&#34;&gt;❡&lt;/a&gt; 神秘龙卷风&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;BrainFuck 解密&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;flag&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flag&#34;&gt;❡&lt;/a&gt; FLAG&lt;/h5&gt;
&lt;p&gt;使用 stegsolve 进行 rgb 查看，然后保存 1.zip, 因为是&lt;mark&gt; pk 开头&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;假如给我三天光明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#假如给我三天光明&#34;&gt;❡&lt;/a&gt; 假如给我三天光明&lt;/h5&gt;
&lt;p&gt;&amp;lt;img src=「&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbWFnZXMyMDE3LmNuYmxvZ3MuY29tL2Jsb2cvMTI5NDU4OC8yMDE3MTIvMTI5NDU4OC0yMDE3MTIwOTAyMDQxMDcxOC0yMDk3MTczOTI4LnBuZw==&#34;&gt;https://images2017.cnblogs.com/blog/1294588/201712/1294588-20171209020410718-2097173928.png&lt;/span&gt;」 alt=「img」  /&amp;gt;&lt;/p&gt;
&lt;p&gt;得到解压密码是&lt;mark&gt; kmdonowg&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb3JzZWNvZGUud29ybGQvaW50ZXJuYXRpb25hbC9kZWNvZGVyL2F1ZGlvLWRlY29kZXItYWRhcHRpdmUuaHRtbA==&#34;&gt;Morse Code Audio Decoder&lt;/span&gt;&lt;/p&gt;
&lt;p wpei08732?23dz=&#34;&#34;&gt;解码得：CTFWPEI08732?23D 换成 flag 还要换小写 flag&lt;/p&gt;
&lt;h5 id=&#34;后门查杀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后门查杀&#34;&gt;❡&lt;/a&gt; 后门查杀&lt;/h5&gt;
&lt;p&gt;使用&lt;mark&gt; D 盾或者火绒安全&lt;/mark&gt;进行查找然后再找到对应的文件查看即可&lt;/p&gt;
&lt;h5 id=&#34;webshell后门少zp文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webshell后门少zp文件&#34;&gt;❡&lt;/a&gt; webshell 后门 (少 zp 文件)&lt;/h5&gt;
&lt;h5 id=&#34;来首歌吧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#来首歌吧&#34;&gt;❡&lt;/a&gt; 来首歌吧&lt;/h5&gt;
&lt;p&gt;使用在线工具进行解密&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MorseFM&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb3JzZWZtLmNvbS8=&#34;&gt;https://morsefm.com/&lt;/span&gt; （支持 WAV/MP3 等格式，支持多语言，适合快速解码）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Morse Code Magic&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb3JzZWNvZGVtYWdpYy5jb20vbW9yc2UtY29kZS1hdWRpby1kZWNvZGVyLw==&#34;&gt;https://morsecodemagic.com/morse-code-audio-decoder/&lt;/span&gt; （专注 WAV/MP3 解码，4 分钟音频 5 秒完成）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;面具下的flag&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#面具下的flag&#34;&gt;❡&lt;/a&gt; 面具下的 flag&lt;/h5&gt;
&lt;p&gt;可以先用 strings 提取，但是需要对比两个找不同，发现少两个 + 号再解析不然出错&lt;/p&gt;
&lt;h5 id=&#34;荷兰宽带数据泄露&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#荷兰宽带数据泄露&#34;&gt;❡&lt;/a&gt; 荷兰宽带数据泄露&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmlyc29mdC5uZXQv&#34;&gt;NirSoft - freeware utilities: password recovery, system utilities, desktop utilities&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;搜索 username 或者 password，这可能是一个&lt;mark&gt;路由器配置文件 (bin)&lt;/mark&gt;，所以用到 RouterPassView 软件&lt;/p&gt;
&lt;h5 id=&#34;九连环&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#九连环&#34;&gt;❡&lt;/a&gt; 九连环&lt;/h5&gt;
&lt;p&gt;通过随波逐流发现有伪加密，所以搜索 50 4B 01 02 修改&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;安装命令&lt;/mark&gt;：sudo apt update &amp;amp;&amp;amp; sudo apt install steghide&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;执行命令&lt;/mark&gt;:steghide extract -sf 『/mnt/c/Users/HelloCTF_OS/Desktop/389a0c11-d0df-4180-829a-b529e6b0a1bc/_123456cry.jpg.extracted/asd/good - 已合并.jpg』&lt;/p&gt;
&lt;h5 id=&#34;认真你就输了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#认真你就输了&#34;&gt;❡&lt;/a&gt; 认真你就输了&lt;/h5&gt;
&lt;p&gt;随波逐流发现文件头是 zip 文件，要么修改文件要么 binwalk 就行&lt;/p&gt;
&lt;h5 id=&#34;被偷走的文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#被偷走的文件&#34;&gt;❡&lt;/a&gt; 被偷走的文件&lt;/h5&gt;
&lt;p&gt;pcap 文件用 wireshark 并且发现 ftp-data 有 rar 文件进行到处对象导出即可。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;导出文件三种方法：&lt;/mark&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到处对象&lt;/li&gt;
&lt;li&gt;追踪流然后原始数据导出即可&lt;/li&gt;
&lt;li&gt;导出字节流&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;被劫持的神秘礼物&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#被劫持的神秘礼物&#34;&gt;❡&lt;/a&gt; 被劫持的神秘礼物&lt;/h5&gt;
&lt;p&gt;使用 wireshark 发现 ==(application/x-www-form-urlencoded)==，之后根据题意找到账号密码拼接，使用如下命令即可。&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼13–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;藏藏藏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#藏藏藏&#34;&gt;❡&lt;/a&gt; 藏藏藏&lt;/h5&gt;
&lt;p&gt;打开 010 发现 pk 删除前面所有内容保存 zip 解压后扫码即可&lt;/p&gt;
&lt;h5 id=&#34;佛系青年&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#佛系青年&#34;&gt;❡&lt;/a&gt; 佛系青年&lt;/h5&gt;
&lt;p&gt;伪加密修改后查看 fo.txt 底下那句话使用随波逐流解密即可&lt;/p&gt;
&lt;h5 id=&#34;你猜我是个啥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你猜我是个啥&#34;&gt;❡&lt;/a&gt; 你猜我是个啥&lt;/h5&gt;
&lt;p&gt;使用 strings 查看即可&lt;/p&gt;
&lt;h5 id=&#34;秘密文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#秘密文件&#34;&gt;❡&lt;/a&gt; 秘密文件&lt;/h5&gt;
&lt;p&gt;筛选后发现有&lt;mark&gt; ftp 优先查看&lt;/mark&gt;，发现里面有 rar 文件，还有一点其实随波逐流里面也可以直接查看并且通过分离破解即可获取 flag.&lt;/p&gt;
&lt;h5 id=&#34;刷新过的图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#刷新过的图片&#34;&gt;❡&lt;/a&gt; 刷新过的图片&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼14–&amp;gt;&lt;/p&gt;
&lt;p&gt;题目说 “刷新过的图片”，结合键盘上刷新键为 F5 可判断此题为 F5 隐写，运用工具&lt;mark&gt; F5-steganography&lt;/mark&gt; 可以对其中的内容进行提取&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRjb2RlLmNvbS9naF9taXJyb3JzL2Y1L0Y1LXN0ZWdhbm9ncmFwaHk/dXRtX3NvdXJjZT1jc2RuX2dpdGh1Yl9hY2NlbGVyYXRvciZhbXA7aXNMb2dpbj0x&#34;&gt;项目首页 - F5-steganography:F5 steganography - GitCode&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;cd F5-steganography-master&lt;/p&gt;
&lt;p&gt;java Extract 『/mnt/c/Use&lt;br /&gt;
rs/HelloCTF_OS/Desktop/a05ed035-b476-49d6-9b32-462ff13c5944/Misc.jpg』&lt;/p&gt;
&lt;h5 id=&#34;鸡你太美&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#鸡你太美&#34;&gt;❡&lt;/a&gt; 鸡你太美&lt;/h5&gt;
&lt;p&gt;发现缺少 gif 头，&lt;mark&gt;47 49 46 38&lt;/mark&gt;.&lt;/p&gt;
&lt;h5 id=&#34;just_a_rar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#just_a_rar&#34;&gt;❡&lt;/a&gt; just_a_rar&lt;/h5&gt;
&lt;p&gt;破解密码然后查看 exif 信息即可&lt;/p&gt;
&lt;h5 id=&#34;snake原先的网站没有了所以解析不了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#snake原先的网站没有了所以解析不了&#34;&gt;❡&lt;/a&gt; snake (原先的网站没有了，所以解析不了)&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼15–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlcnBlbnQub25saW5lLWRvbWFpbi10b29scy5jb20v&#34;&gt;Serpent Encryption – Easily encrypt or decrypt strings or files&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pLWJsb2cuY3NkbmltZy5jbi9ibG9nX21pZ3JhdGUvNTkzYmU3NmQwMzhkZmVjZTBmY2VlMGVkMDUyMDU2MWEucG5n&#34;&gt;https://i-blog.csdnimg.cn/blog_migrate/593be76d038dfece0fcee0ed0520561a.png&lt;/span&gt;」 alt=「img」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;菜刀666&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#菜刀666&#34;&gt;❡&lt;/a&gt; 菜刀 666&lt;/h5&gt;
&lt;p&gt;菜刀使用 http.request.method&lt;mark&gt;POST，并且查看 z1 和 z2，发现 z2 有 FF D8 是 jpg 导入 010 发现密码&lt;/mark&gt;，然后解压即可&lt;/p&gt;
&lt;h5 id=&#34;一叶障目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一叶障目&#34;&gt;❡&lt;/a&gt; 一叶障目&lt;/h5&gt;
&lt;p&gt;可以使用之前的 Python 脚本或者随波逐流即可&lt;/p&gt;
&lt;h5 id=&#34;纳尼&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#纳尼&#34;&gt;❡&lt;/a&gt; 纳尼&lt;/h5&gt;
&lt;p&gt;如果 git 分帧查看不了，那么就用&lt;mark&gt; stegsolve 的 framebrower&lt;/mark&gt; 来查看即可。&lt;/p&gt;
&lt;h5 id=&#34;神奇的二维码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#神奇的二维码&#34;&gt;❡&lt;/a&gt; 神奇的二维码&lt;/h5&gt;
&lt;p&gt;Python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼16–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;粗线条是 &lt;code&gt;-&lt;/code&gt; , 细线条是 &lt;code&gt;.&lt;/code&gt; &lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;excel破解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#excel破解&#34;&gt;❡&lt;/a&gt; excel 破解&lt;/h5&gt;
&lt;p&gt;使用 strings 或者随波逐流查看即可&lt;/p&gt;
&lt;h5 id=&#34;来题中等的吧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#来题中等的吧&#34;&gt;❡&lt;/a&gt; 来题中等的吧&lt;/h5&gt;
&lt;p&gt;粗细记录摩斯密码即可&lt;/p&gt;
&lt;h5 id=&#34;谁赢了比赛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#谁赢了比赛&#34;&gt;❡&lt;/a&gt; 谁赢了比赛？&lt;/h5&gt;
&lt;p&gt;使用 Binwalk 进行分离并且破解密码，之后使用 qcr 进行二维码解析&lt;/p&gt;
&lt;h5 id=&#34;actf新生赛2020outguess&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020outguess&#34;&gt;❡&lt;/a&gt; [ACTF 新生赛 2020] outguess&lt;/h5&gt;
&lt;p&gt;发现 exif 再通过社会主义解密，然后通过题目猜测发现是 outguess，通过一下密码解密&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼17–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;outguess -k 『abc』 -r 『/mnt/c/Users/HelloCTF_OS/Desktop/attachment/tmp/huhuhu/mmm.jpg』 『/mnt/c/Users/HelloCTF_OS/Desktop/attachment/tmp/huhuhu/flag.txt』&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;梅花香之苦寒来&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#梅花香之苦寒来&#34;&gt;❡&lt;/a&gt; 梅花香之苦寒来&lt;/h5&gt;
&lt;p&gt;使用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1nbnVwbG90JmFtcDtzcG09MTAwMS4yMTAxLjMwMDEuNzAyMA==&#34;&gt; gnuplot&lt;/span&gt; 画图即可&lt;/p&gt;
&lt;p&gt;生成文本后使用 plot xxx.&lt;/p&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼18–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;wustctf2020find_me在线网站打不开&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wustctf2020find_me在线网站打不开&#34;&gt;❡&lt;/a&gt; [WUSTCTF2020] find_me（在线网站打不开）&lt;/h5&gt;
&lt;p&gt;使用 exiftool xxx，然后&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvd2VuYmVuamlhbWkucGhwP3M9bWFuZ3dlbg==&#34;&gt;盲文在线加解密：https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼19–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/4ff6c936f2b993b6adf9ed29d0f06748.png#pic_center&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;穿越时空的思念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#穿越时空的思念&#34;&gt;❡&lt;/a&gt; 穿越时空的思念&lt;/h5&gt;
&lt;p&gt;之前使用静音删除左声道，单声道导出右声道 wav 使用在线网站但是解析有些许错误，所以使用手动解析&lt;/p&gt;
&lt;h5 id=&#34;guet-ctf2019ko&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#guet-ctf2019ko&#34;&gt;❡&lt;/a&gt; [GUET-CTF2019]KO&lt;/h5&gt;
&lt;p&gt;使用 brainfuck 解密即可&lt;/p&gt;
&lt;h5 id=&#34;actf新生赛2020base64隐写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020base64隐写&#34;&gt;❡&lt;/a&gt; [ACTF 新生赛 2020] base64 隐写&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼20–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;swpu2019我有一只马里奥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpu2019我有一只马里奥&#34;&gt;❡&lt;/a&gt; [SWPU2019] 我有一只马里奥&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/470b5a3cf4221c8ae78e537ab080d524.jpeg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/227814f4d8ae4900b77417b09ad5b617.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;notepad 1.txt:flag.txt&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;使用工具 NtfsStreamsEditor 或 AlternateStreamView 打开存放 1.txt 文件的文件夹，扫描出现隐藏文件文件，导出后打开，得到 flag。&lt;/p&gt;
&lt;p&gt;​		&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmlyc29mdC5uZXQvdXRpbHMvYWx0ZXJuYXRlX2RhdGFfc3RyZWFtcy5odG1sP3NwbT1hMmM2aC4xMjg3MzYzOS5hcnRpY2xlLWRldGFpbC42LjY5YWU0MjQ1UkIyQ2pL&#34;&gt;AlternateStreamView (跳转页面后，向下滑动，下载对应的 32 或 64 位软件)&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;mrctf2020ezmisc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mrctf2020ezmisc&#34;&gt;❡&lt;/a&gt; [MRCTF2020]ezmisc&lt;/h5&gt;
&lt;p&gt;修改宽高&lt;/p&gt;
&lt;h5 id=&#34;gxyctf2019gakki&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gxyctf2019gakki&#34;&gt;❡&lt;/a&gt; [GXYCTF2019]gakki&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼21–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;hbnis218caesar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hbnis218caesar&#34;&gt;❡&lt;/a&gt; [HBNIS218]caesar&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼22–&amp;gt;&lt;/p&gt;
&lt;p&gt;随波逐流&lt;/p&gt;
&lt;h5 id=&#34;suctf2018single-dog&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#suctf2018single-dog&#34;&gt;❡&lt;/a&gt; [SUCTF2018]single dog&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;aaencode 编码&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;黑客帝国&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#黑客帝国&#34;&gt;❡&lt;/a&gt; 黑客帝国&lt;/h5&gt;
&lt;p&gt;导入十六进制，然后发现打开不了，换成 jpg 头，也就是&lt;mark&gt; FF D8 4A46&lt;/mark&gt; 之前的删除掉&lt;/p&gt;
&lt;h5 id=&#34;hbnis2018低个头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hbnis2018低个头&#34;&gt;❡&lt;/a&gt; [HBNIS2018] 低个头&lt;/h5&gt;
&lt;p&gt;键盘按键&lt;/p&gt;
&lt;h5 id=&#34;swpu2019伟大的侦探&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpu2019伟大的侦探&#34;&gt;❡&lt;/a&gt; [SWPU2019] 伟大的侦探&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;使用 010 Editor 打开密码.txt 文件，选择编辑方式为 EBCDIC (B)，找到明文密码&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;之后对照跳舞的小人即可&lt;/p&gt;
&lt;p&gt;[BUUCTF &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzE0MDQxMjQ=&#34;&gt;SWPU2019] 伟大的侦探 1 - 阿里云开发者社区&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;mrctf2020你能看懂音符吗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mrctf2020你能看懂音符吗&#34;&gt;❡&lt;/a&gt; [MRCTF2020] 你能看懂音符吗&lt;/h5&gt;
&lt;p&gt;修改 62 51 为 51 62 然后保存解压，之后发现 Binwalk 有文件，之后 document.xml 里查到音符，使用芊芊秀字（但是失效了）就可以了。&lt;/p&gt;
&lt;h5 id=&#34;我吃三明治&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#我吃三明治&#34;&gt;❡&lt;/a&gt; 我吃三明治&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;foremost -i /mnt/c/Users/HelloCTF_OS/Desktop/attachment/flag.jpg&lt;/mark&gt;, 发现有两张图片，但是打开还是之前的那张，通过题解发现 FF D8 是开头，FF D9 是结尾，在 FF D8 和 FF D9 之间有信息。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CHelloCTF_OS%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250414132629896.png&#34; alt=&#34;image-20250414132629896&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;actf新生赛2020ntfs数据流&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020ntfs数据流&#34;&gt;❡&lt;/a&gt; [ACTF 新生赛 2020] NTFS 数据流&lt;/h5&gt;
&lt;p&gt;跟之前的一道题类似使用 alternatestreamview-x64 打开文件在导出即可。&lt;/p&gt;
&lt;h5 id=&#34;swpu2019你有没有好好看网课&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpu2019你有没有好好看网课&#34;&gt;❡&lt;/a&gt; [SWPU2019] 你有没有好好看网课？&lt;/h5&gt;
&lt;p&gt;使用数字发现四位不够，一位位加到 6 位即可，&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250414133454939.png」 alt=「image-20250414133454939」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;使用 kinovea 软件，根据图片说的 5.20 和 7.11 其实是 5.67 左右在灯上出现内容&lt;/mark&gt;，然后第一处为敲击码&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5oaWVuY29kZS5jb20vdGFwY29kZS5odG1s&#34;&gt;CTF 在线工具 - 在线敲击码 | 敲击码编码 | 敲击码算法 | tap code&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;基于 5×5 方格波利比奥斯方阵来实现的，不同点是是用 K 字母被整合到 C 中，因此密文的特征为 1-5 的两位一组的数字，编码的范围是 A-Z 字母字符集，字母不区分大小写。&lt;br /&gt;
 &lt;code&gt;..... ../... ./... ./... ../&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解码方法&lt;/strong&gt;： 每组  &lt;code&gt;/&lt;/code&gt;  分隔的符号对应一个字母，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt; &lt;code&gt;..... ..&lt;/code&gt;  → 第 5 行第 2 列 → &lt;strong&gt;W&lt;/strong&gt;&lt;/mark&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;... .&lt;/code&gt;  → 第 3 行第 1 列 → &lt;strong&gt;L&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;完整密文  &lt;code&gt;WLLM&lt;/code&gt;  → 转为小写  &lt;code&gt;wllm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.nlark.com/yuque/0/2023/png/8395640/1675319712830-f36e439d-6d04-46cb-8e6f-2b00729fdbd2.png#averageHue=%23e8e8e8&amp;amp;clientId=uf8fd4f20-b975-4&amp;amp;from=drop&amp;amp;id=uec020910&amp;amp;name=vta8io4tvs.png&amp;amp;originHeight=281&amp;amp;originWidth=331&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=13988&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u3aae15bd-604d-484b-ae31-ce85fd125dd&amp;amp;title=&#34; alt=&#34;vta8io4tvs.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250414230545542.png」 alt=「image-20250414230545542」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250414135800024.png」 alt=「image-20250414135800024」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;p&gt;也可以通过 52313132 来解码，就是数点即可。&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250414230944212.png」 alt=「image-20250414230944212」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;然后根据 7.37 时候发现编码&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CHelloCTF_OS%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250414230821026.png&#34; alt=&#34;image-20250414230821026&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250414231107859.png」 alt=「image-20250414231107859」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;p&gt;之后拼接起来两个解码信息进行解压，然后使用 strings 或者随波逐流即可查看信息.&lt;/p&gt;
&lt;p&gt;扩展知识：&lt;/p&gt;
&lt;p&gt;​	查询多个信息&lt;/p&gt;
&lt;p&gt;​		逻辑或&lt;/p&gt;
&lt;p&gt;​	 		strings xxx | grep -iE 「flag|ctf」&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; ：忽略大小写&lt;/li&gt;
&lt;li&gt;&lt;mark&gt; &lt;code&gt;-E&lt;/code&gt; ：启用扩展正则表达式，允许使用  &lt;code&gt;|&lt;/code&gt;  符号分隔多个模式&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​		逻辑与&lt;/p&gt;
&lt;p&gt;​			strings xxx | grep -i 「flag」 | grep -i 「ctf」&lt;/p&gt;
&lt;p&gt;​		&lt;strong&gt;查找并显示头尾匹配结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼23–&amp;gt;&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;结合十六进制查看工具&lt;/strong&gt; 如果需要分析二进制文件的特定偏移：&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼24–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;xxd：生成十六进制和 ASCII 表示&lt;/mark&gt;&lt;br /&gt;
&lt;mark&gt; hexdump -C：经典格式的十六进制转储&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;sqltest&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sqltest&#34;&gt;❡&lt;/a&gt; sqltest&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼25–&amp;gt;&lt;/p&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼26–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;utctf2020docx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#utctf2020docx&#34;&gt;❡&lt;/a&gt; [UTCTF2020]docx&lt;/h5&gt;
&lt;p&gt;进行 Binwalk 然后再 media 一张张图 png 查看信息&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250415005201083.png」 alt=「image-20250415005201083」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;john-in-the-middle&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#john-in-the-middle&#34;&gt;❡&lt;/a&gt; john-in-the-middle&lt;/h5&gt;
&lt;p&gt;先用导出对象发现很多图片，逐个使用 stegsolve 发现有信息&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250415010713381.png」 alt=「image-20250415010713381」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;p&gt;扩展知识：&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;zsteg 功能&lt;/strong&gt;：&lt;mark&gt;支持 LSB 隐写&lt;/mark&gt;、zlib 压缩数据、OpenStego 等检测，常用于 CTF 比赛的图片隐写分析&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼27–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;actf新生赛2020swp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020swp&#34;&gt;❡&lt;/a&gt; [ACTF 新生赛 2020] swp&lt;/h5&gt;
&lt;p&gt;发现 zip 文件导出然后使用 strings 查看即可&lt;/p&gt;
&lt;h5 id=&#34;gxyctf2019sxmgdghpcybiyxnlpw&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gxyctf2019sxmgdghpcybiyxnlpw&#34;&gt;❡&lt;/a&gt; [GXYCTF2019]SXMgdGhpcyBiYXNlPw==&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼28–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;间谍启示录&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#间谍启示录&#34;&gt;❡&lt;/a&gt; 间谍启示录&lt;/h5&gt;
&lt;p&gt;使用 foremost 然后用 tree 发现文件，&lt;mark&gt;重要的是开启隐藏的文件&lt;/mark&gt;，机密文件查看即可。&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250415014559922.png」 alt=「image-20250415014559922」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;小易的u盘&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小易的u盘&#34;&gt;❡&lt;/a&gt; 小易的 U 盘&lt;/h5&gt;
&lt;p&gt;使用修改后缀名或者是 foremost 查看，然后根据 strings 或者使用 IDA 查看也行。&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼29–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CHelloCTF_OS%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250415015843942.png&#34; alt=&#34;image-20250415015843942&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=「C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250415015624829.png」 alt=「image-20250415015624829」 style=「zoom:50%;」 /&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;喵喵喵&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#喵喵喵&#34;&gt;❡&lt;/a&gt; 喵喵喵&lt;/h5&gt;
&lt;p&gt;使用 zsteg 查看然后使用 stegsolve 进行 lsb 隐写保存图片之后修改宽高，使用 QR 进行查看链接下载，&lt;mark&gt;注意的是得用 winrar 解压才行&lt;/mark&gt;，不然 NTFS 查看不到，然后使用 pyc 反编译，使用脚本。&lt;/p&gt;
&lt;p&gt;pyc 反编译：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29sLmx1L3B5Yy8=&#34;&gt;https://tool.lu/pyc/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼30–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;wustctf2020爬&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wustctf2020爬&#34;&gt;❡&lt;/a&gt; [WUSTCTF2020] 爬&lt;/h5&gt;
&lt;p&gt;使用 file 文件查看后缀名，然后转换 word 删除图片，&lt;mark&gt;使用十六进制转字符查看即可&lt;/mark&gt;。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmVqc29uLmNvbS9jb252ZXJ0L294MnN0ci8=&#34;&gt;https://www.bejson.com/convert/ox2str/&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="网络安全" scheme="http://whw-colab.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/" />
        <category term="CTF学习" scheme="http://whw-colab.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/CTF%E5%AD%A6%E4%B9%A0/" />
        <updated>2025-04-17T04:12:57.000Z</updated>
    </entry>
    <entry>
        <id>http://whw-colab.github.io/2025/04/17/C#%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
        <title>C#学习笔记</title>
        <link rel="alternate" href="http://whw-colab.github.io/2025/04/17/C#%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
        <content type="html">&lt;h1 id=&#34;语法篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法篇&#34;&gt;❡&lt;/a&gt; 语法篇&lt;/h1&gt;
&lt;h2 id=&#34;基础背景知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础背景知识&#34;&gt;❡&lt;/a&gt; 基础背景知识&lt;/h2&gt;
&lt;p&gt;c# 编写的应用程序必须放置于.NET 环境中才能正常允许。C# 代码最终会被编译为 **” 中间语言 “（MSIL）**。&lt;/p&gt;
&lt;p&gt;类库是以.dll 结尾，不能直接运行，而启动项目是以.exe 结尾可以直接运行。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250112164931774.png&#34; alt=&#34;image-20250112164931774&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼0–&amp;gt;&lt;/p&gt;
&lt;p&gt;主项目也叫&lt;strong&gt;启动项目&lt;/strong&gt;，可以通过该设置方式设置启动项目。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250112163340278.png&#34; alt=&#34;image-20250112163340278&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;基本语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本语法&#34;&gt;❡&lt;/a&gt; &lt;strong&gt;基本语法&lt;/strong&gt;&lt;/h2&gt;
&lt;h2 id=&#34;面向过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#面向过程&#34;&gt;❡&lt;/a&gt; &lt;strong&gt;面向过程&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;debug类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#debug类&#34;&gt;❡&lt;/a&gt; Debug 类&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250111135001389.png&#34; alt=&#34;image-20250111135001389&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼1–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;变量与常量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#变量与常量&#34;&gt;❡&lt;/a&gt; 变量与常量&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼2–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释&#34;&gt;❡&lt;/a&gt; 注释&lt;/h3&gt;
&lt;p&gt;summary 注释:ctrl+m&lt;/p&gt;
&lt;p&gt;多行注释：ctrl+/&lt;/p&gt;
&lt;p&gt;单行注释：ctrl+k&lt;/p&gt;
&lt;h3 id=&#34;小驼峰和大驼峰&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小驼峰和大驼峰&#34;&gt;❡&lt;/a&gt; 小驼峰和大驼峰&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼3–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;as-和-is&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#as-和-is&#34;&gt;❡&lt;/a&gt; As 和 is&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼4–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;类型转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#类型转换&#34;&gt;❡&lt;/a&gt; 类型转换&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼5–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;自定义转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义转换&#34;&gt;❡&lt;/a&gt; 自定义转换&lt;/h4&gt;
&lt;p&gt;implicit 和 explicit 不能重复&lt;/p&gt;
&lt;h5 id=&#34;implicit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#implicit&#34;&gt;❡&lt;/a&gt; implicit&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼6–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;explicit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#explicit&#34;&gt;❡&lt;/a&gt; explicit&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼7–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;创建对象的三种方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建对象的三种方式&#34;&gt;❡&lt;/a&gt; 创建对象的三种方式&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼8–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法&#34;&gt;❡&lt;/a&gt; 方法&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼9–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;out-ref-使用元组组合多个返回值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#out-ref-使用元组组合多个返回值&#34;&gt;❡&lt;/a&gt; Out 、ref、使用元组组合多个返回值&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼10–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;params&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#params&#34;&gt;❡&lt;/a&gt; Params&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼11–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;switch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#switch&#34;&gt;❡&lt;/a&gt; Switch&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼12–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;字符串输出转义符-字符和字符串转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串输出转义符-字符和字符串转换&#34;&gt;❡&lt;/a&gt; 字符串 @输出转义符、字符和字符串转换&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼13–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;字符串null&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串null&#34;&gt;❡&lt;/a&gt; 字符串 Null&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼14–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;typeof和sizeof&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typeof和sizeof&#34;&gt;❡&lt;/a&gt; typeof 和 sizeof&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼15–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;和合并运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#和合并运算符&#34;&gt;❡&lt;/a&gt; ？和？？（合并运算符）&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼16–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;字符串&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串&#34;&gt;❡&lt;/a&gt; 字符串&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼17–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;区域性相关的信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#区域性相关的信息&#34;&gt;❡&lt;/a&gt; 区域性相关的信息&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼18–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;字符串格式化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串格式化&#34;&gt;❡&lt;/a&gt; 字符串格式化&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼19–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;字符串复合格式化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字符串复合格式化&#34;&gt;❡&lt;/a&gt; 字符串复合格式化&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼20–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;生成随机数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生成随机数&#34;&gt;❡&lt;/a&gt; 生成随机数&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼21–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;常见的时间计算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常见的时间计算&#34;&gt;❡&lt;/a&gt; 常见的时间计算&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼22–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;日期格式化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#日期格式化&#34;&gt;❡&lt;/a&gt; 日期格式化&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼23–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;集合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合&#34;&gt;❡&lt;/a&gt; 集合&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼24–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;hashset&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hashset&#34;&gt;❡&lt;/a&gt; HashSet&lt;/h4&gt;
&lt;h5 id=&#34;issubsetof子集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#issubsetof子集&#34;&gt;❡&lt;/a&gt; IsSubsetOf–子集&lt;/h5&gt;
&lt;h5 id=&#34;issupersetof父集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#issupersetof父集&#34;&gt;❡&lt;/a&gt; IsSupersetOf–父集&lt;/h5&gt;
&lt;h5 id=&#34;overlaps交集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#overlaps交集&#34;&gt;❡&lt;/a&gt; Overlaps–交集&lt;/h5&gt;
&lt;h5 id=&#34;unionwith并集&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#unionwith并集&#34;&gt;❡&lt;/a&gt; UnionWith–并集&lt;/h5&gt;
&lt;h5 id=&#34;removewherenew-predicatetxxx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#removewherenew-predicatetxxx&#34;&gt;❡&lt;/a&gt; RemoveWhere(new Predicate&amp;lt;T&amp;gt;(xxx))&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼25–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;字典&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字典&#34;&gt;❡&lt;/a&gt; 字典&lt;/h4&gt;
&lt;h5 id=&#34;hashtable与dictionary&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hashtable与dictionary&#34;&gt;❡&lt;/a&gt; HashTable 与 Dictionary&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼26–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;自定义排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义排序&#34;&gt;❡&lt;/a&gt; 自定义排序&lt;/h3&gt;
&lt;h4 id=&#34;两种方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#两种方式&#34;&gt;❡&lt;/a&gt; 两种方式&lt;/h4&gt;
&lt;p&gt;Comparer&amp;lt;T&amp;gt; 类派生，有静态 Default 属性，默认排序方式&lt;/p&gt;
&lt;p&gt;IComparer&amp;lt;T&amp;gt; 接口，必须实现 Compare 方法。&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼27–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;控制台应用程序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制台应用程序&#34;&gt;❡&lt;/a&gt; 控制台应用程序&lt;/h3&gt;
&lt;h4 id=&#34;获取文本信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取文本信息&#34;&gt;❡&lt;/a&gt; 获取文本信息&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼28–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;获取键盘输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#获取键盘输入&#34;&gt;❡&lt;/a&gt; 获取键盘输入&lt;/h4&gt;
&lt;h5 id=&#34;read&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#read&#34;&gt;❡&lt;/a&gt; Read&lt;/h5&gt;
&lt;p&gt;Read (), 每次只读入一个字符，Ctrl+Z 返回 - 1&lt;/p&gt;
&lt;h5 id=&#34;readkey&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#readkey&#34;&gt;❡&lt;/a&gt; ReadKey&lt;/h5&gt;
&lt;p&gt;ReadKey ()，读取用户输入的字符&lt;br /&gt;
 ReadKey 返回 ConsoleKeyInfo 实例， 包含三个属性:&lt;strong&gt;Key&lt;/strong&gt;（返回 ConsoleKey 枚举）、keyChar（直接返回 Unicode 字符）、&lt;strong&gt;Modifiers&lt;/strong&gt; (返回 ConsoleModifiers 枚举值，表示用户是否按下了&lt;strong&gt; Ctrl、Alt、Shift)&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;readline&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#readline&#34;&gt;❡&lt;/a&gt; ReadLine&lt;/h5&gt;
&lt;p&gt;ReadLine () 如果按下&lt;strong&gt; Ctrl+Z+Enter 键会返回 Null&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;命令行参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命令行参数&#34;&gt;❡&lt;/a&gt; 命令行参数&lt;/h4&gt;
&lt;h5 id=&#34;两种方式-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#两种方式-2&#34;&gt;❡&lt;/a&gt; 两种方式&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20250112231234605.png&#34; alt=&#34;image-20250112231234605&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼29–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;控制台窗口的外观&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制台窗口的外观&#34;&gt;❡&lt;/a&gt; 控制台窗口的外观&lt;/h4&gt;
&lt;h5 id=&#34;三个属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三个属性&#34;&gt;❡&lt;/a&gt; 三个属性&lt;/h5&gt;
&lt;h6 id=&#34;title&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#title&#34;&gt;❡&lt;/a&gt; Title&lt;/h6&gt;
&lt;h6 id=&#34;backgroundcolor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#backgroundcolor&#34;&gt;❡&lt;/a&gt; BackgroundColor&lt;/h6&gt;
&lt;h6 id=&#34;foregroundcolor文本颜色也就是前置颜色&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#foregroundcolor文本颜色也就是前置颜色&#34;&gt;❡&lt;/a&gt; ForegroundColor–文本颜色也就是前置颜色&lt;/h6&gt;
&lt;p&gt;&amp;lt;!–code￼30–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;控制台窗口的大小和位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制台窗口的大小和位置&#34;&gt;❡&lt;/a&gt; 控制台窗口的大小和位置&lt;/h4&gt;
&lt;h5 id=&#34;注意点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意点&#34;&gt;❡&lt;/a&gt; 注意点：&lt;/h5&gt;
&lt;p&gt;缓冲区大小比窗口大小要大，要先设置窗口大小为 1，1 之后再重新设置。&lt;/p&gt;
&lt;p&gt;WindowTop 以行为单位，WindowLeft 以列为单位。&lt;/p&gt;
&lt;p&gt;ConsoleKey.RightArrow// 右边&lt;/p&gt;
&lt;p&gt;Console.WindowLeft &amp;lt; (Console.BufferWidth - Console.WindowWidth)&lt;/p&gt;
&lt;p&gt;Console.SetWindowPosition(Console.WindowLeft + 1, Console.WindowTop);&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼31–&amp;gt;&lt;/p&gt;
&lt;p&gt;响应 CancelKeyPress 事件&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼32–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组&#34;&gt;❡&lt;/a&gt; 数组&lt;/h3&gt;
&lt;h4 id=&#34;定义方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义方式&#34;&gt;❡&lt;/a&gt; 定义方式&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼33–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;复制数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#复制数组&#34;&gt;❡&lt;/a&gt; 复制数组&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼34–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;查找元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找元素&#34;&gt;❡&lt;/a&gt; 查找元素&lt;/h4&gt;
&lt;h5 id=&#34;查找元素索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找元素索引&#34;&gt;❡&lt;/a&gt; 查找元素索引&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼35–&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;查找元素本身&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查找元素本身&#34;&gt;❡&lt;/a&gt; 查找元素本身&lt;/h5&gt;
&lt;p&gt;&amp;lt;!–code￼36–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;反转数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反转数组&#34;&gt;❡&lt;/a&gt; 反转数组&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼37–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;更改数组大小&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更改数组大小&#34;&gt;❡&lt;/a&gt; 更改数组大小&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼38–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;多维数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多维数组&#34;&gt;❡&lt;/a&gt; 多维数组&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼39–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;交错数组数组的数组嵌套数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#交错数组数组的数组嵌套数组&#34;&gt;❡&lt;/a&gt; 交错数组 / 数组的数组 / 嵌套数组&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼40–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;array类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#array类&#34;&gt;❡&lt;/a&gt; Array 类&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼41–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;动态数组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动态数组&#34;&gt;❡&lt;/a&gt; 动态数组&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼42–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;结构体&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结构体&#34;&gt;❡&lt;/a&gt; 结构体&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼43–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;枚举&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#枚举&#34;&gt;❡&lt;/a&gt; 枚举&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼44–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;常用api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用api&#34;&gt;❡&lt;/a&gt; 常用 API&lt;/h3&gt;
&lt;h4 id=&#34;stringbuilder&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stringbuilder&#34;&gt;❡&lt;/a&gt; StringBuilder&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20241230231525811.png&#34; alt=&#34;image-20241230231525811&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼45–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;正则表达式需要再次学习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#正则表达式需要再次学习&#34;&gt;❡&lt;/a&gt; 正则表达式（需要再次学习）&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼46–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;格式化字符串&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#格式化字符串&#34;&gt;❡&lt;/a&gt; 格式化字符串&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼47–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;补充知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#补充知识&#34;&gt;❡&lt;/a&gt; 补充知识&lt;/h3&gt;
&lt;h4 id=&#34;泛型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#泛型&#34;&gt;❡&lt;/a&gt; 泛型&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼48–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;顶级语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#顶级语句&#34;&gt;❡&lt;/a&gt; 顶级语句&lt;/h4&gt;
&lt;h5 id=&#34;注意点-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意点-2&#34;&gt;❡&lt;/a&gt; 注意点：&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;一个项目中，&lt;strong&gt;只允许一个代码文件&lt;/strong&gt;使用顶层语句。&lt;/li&gt;
&lt;li&gt;由于顶层语句在编译时自动生成入口点方法 Main，所以在同一个项目中&lt;strong&gt;不能再选择其他入口点方法&lt;/strong&gt;（即编译器选项中不能使用 /main 或 - main 开头）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;!–code￼49–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;record&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#record&#34;&gt;❡&lt;/a&gt; record&lt;/h4&gt;
&lt;p&gt;record 与 class 的区别在于相等比较的计算不同，如果&lt;strong&gt;相同的属性 class 在相等比较运算符上会给出 false&lt;/strong&gt;, 而 record 会给出 true.&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼50–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;global&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#global&#34;&gt;❡&lt;/a&gt; Global&lt;/h4&gt;
&lt;p&gt;​	global using System;&lt;/p&gt;
&lt;h3 id=&#34;异常处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异常处理&#34;&gt;❡&lt;/a&gt; 异常处理&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼51–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;命名空间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命名空间&#34;&gt;❡&lt;/a&gt; 命名空间&lt;/h3&gt;
&lt;p&gt;作用：避免名称冲突&lt;/p&gt;
&lt;p&gt;不是本项目的需要先引用目标命名空间所在程序集&lt;/p&gt;
&lt;h4 id=&#34;namespace&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#namespace&#34;&gt;❡&lt;/a&gt; NameSpace&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼52–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;using&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#using&#34;&gt;❡&lt;/a&gt; using&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;起别名&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼53–&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引入命名空间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;释放空间&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;静态成员访问&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼54–&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20241230231440453.png&#34; alt=&#34;image-20241230231440453&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;预处理器指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预处理器指令&#34;&gt;❡&lt;/a&gt; 预处理器指令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;#region #endregion&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;#warning 和 #error&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;#lines&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;#pragma&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文件的输入和输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件的输入和输出&#34;&gt;❡&lt;/a&gt; 文件的输入和输出&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼55–&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;不安全代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不安全代码&#34;&gt;❡&lt;/a&gt; 不安全代码&lt;/h3&gt;
&lt;h4 id=&#34;设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置&#34;&gt;❡&lt;/a&gt; 设置&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20241215210857725.png&#34; alt=&#34;image-20241215210857725&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;使用指针检索数据值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用指针检索数据值&#34;&gt;❡&lt;/a&gt; 使用指针检索数据值&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼56–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;传递指针作为方法的参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#传递指针作为方法的参数&#34;&gt;❡&lt;/a&gt; 传递指针作为方法的参数&lt;/h4&gt;
&lt;p&gt;&amp;lt;!–code￼57–&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;使用指针访问数组元素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用指针访问数组元素&#34;&gt;❡&lt;/a&gt; 使用指针访问数组元素&lt;/h4&gt;
&lt;p&gt;fixed (int *ptr = list), 指针变量在数组中内存固定，其余地方不固定，需要使用 fixed () 来固定&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C# 中声明的变量在内存中的存储受垃圾回收器管理&lt;/strong&gt;；因此一个变量（例如一个大数组）有可能在运行过程中被移动到内存中的其他位置。&lt;strong&gt;如果一个变量的内存地址会变化，那么指针也就没有意义了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&amp;lt;!–code￼58–&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;❡&lt;/a&gt; &lt;/h2&gt;
</content>
        <category term="后端" scheme="http://whw-colab.github.io/categories/%E5%90%8E%E7%AB%AF/" />
        <category term="C#" scheme="http://whw-colab.github.io/categories/%E5%90%8E%E7%AB%AF/C/" />
        <category term="C#语法" scheme="http://whw-colab.github.io/categories/%E5%90%8E%E7%AB%AF/C/C-%E8%AF%AD%E6%B3%95/" />
        <updated>2025-04-17T04:12:57.000Z</updated>
    </entry>
    <entry>
        <id>http://whw-colab.github.io/2025/04/15/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://whw-colab.github.io/2025/04/15/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;❡&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;❡&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼0–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;❡&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼1–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;❡&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼2–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;❡&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&amp;lt;!–code￼3–&amp;gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2025-04-15T07:04:41.338Z</updated>
    </entry>
</feed>
