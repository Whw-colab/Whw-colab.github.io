<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://Whw-colab.github.io</id>
    <title>潇潇先生个人博客</title>
    <subtitle></subtitle>
    <icon>http://whw-colab.github.io/images/favicon.ico</icon>
    <link href="http://Whw-colab.github.io" />
    <author>
      <name>潇潇先生</name>
    </author>
    <updated>2025-04-15T07:04:41.338Z</updated>
    <entry>
        <id>http://whw-colab.github.io/2025/04/15/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://whw-colab.github.io/2025/04/15/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2025-04-15T07:04:41.338Z</updated>
    </entry>
    <entry>
        <id>http://whw-colab.github.io/2017/05/26/CTF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
        <title>CTF学习笔记</title>
        <link rel="alternate" href="http://whw-colab.github.io/2017/05/26/CTF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
        <content type="html">&lt;h1 id=&#34;ctf学习笔记&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf学习笔记&#34;&gt;#&lt;/a&gt; CTF 学习笔记&lt;/h1&gt;
&lt;h2 id=&#34;ctf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf&#34;&gt;#&lt;/a&gt; CTF&lt;/h2&gt;
&lt;h3 id=&#34;定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义&#34;&gt;#&lt;/a&gt; 定义&lt;/h3&gt;
&lt;p&gt;CTF 就像一场 “黑客版的寻宝游戏”，参赛者通过破解密码、挖漏洞、逆向程序等技术手段，在虚拟世界里找到隐藏的 “flag”（一串特定字符），谁找得快、技术强谁就赢。&lt;/p&gt;
&lt;h3 id=&#34;竞赛模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#竞赛模式&#34;&gt;#&lt;/a&gt; 竞赛模式&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;解题模式（Jeopardy）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 核心机制 *&lt;/strong&gt;&lt;/em&gt;：通过解决安全技术题目获取 flag，按题目分值和解题时间排名，常见于线上选拔赛。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 动态积分规则 *&lt;/strong&gt;&lt;/em&gt;：题目初始分值随解题人数增加而递减，前三名（一血、二血、三血）获得额外奖励分。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 题型分类 *&lt;/strong&gt;&lt;/em&gt;：Web 渗透、逆向工程、密码学、安全杂项（MISC）、二进制漏洞（PWN）等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;玩法&lt;/strong&gt;：像&lt;mark&gt;做试卷&lt;/mark&gt;，题目分类型（如密码破译、逆向工程、Web 漏洞等），解出题目后提交隐藏的 flag 就能得分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;题目难度越高分越多，但解题人数越多分越少（动态积分）。&lt;/li&gt;
&lt;li&gt;适合线上赛，比如预选赛，团队可自由组队，拼脑力和技术积累。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;举例&lt;/strong&gt;：给你一个网站，找 SQL 注入漏洞拿 flag，类似 “黑客版奥数题”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;攻防模式（Attack-Defense） （&lt;mark&gt;黑客版真人 CS**&lt;/mark&gt;）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 核心机制 *&lt;/strong&gt;&lt;/em&gt;：各队伍拥有相同漏洞的服务器（GameBox），攻击对手服务得分，修补自身漏洞防御扣分，实时对抗性强。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 计分规则 *&lt;/strong&gt;&lt;/em&gt;：每轮得分取决于攻击成功次数和防御状态，服务宕机将扣分。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 特点 *&lt;/strong&gt;&lt;/em&gt;：高强度持续 24-48 小时，考验团队协作和体力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ADP 攻防增强模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一句话总结就是 ==&lt;strong&gt;“黑客版的一题两吃”&lt;/strong&gt;==：每个题目只需完成一次攻击（拿 flag）和一次防御（修漏洞），做完就扔，不用反复折腾。&lt;/p&gt;
&lt;h3 id=&#34;举个栗子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#举个栗子&#34;&gt;#&lt;/a&gt; &lt;strong&gt;举个栗子🌰：&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;​	假设题目是一个&lt;strong&gt;带漏洞的网站&lt;/strong&gt;，ADP 模式下你要做两件事：&lt;/p&gt;
&lt;p&gt;​		1️⃣ &lt;strong&gt;攻击&lt;/strong&gt;：找到漏洞（比如 SQL 注入），拿到 flag 提交得分（类似解题模式）。&lt;/p&gt;
&lt;p&gt;​		2️⃣ &lt;strong&gt;防御&lt;/strong&gt;：给漏洞打补丁（比如过滤 SQL 语句），上传补丁到平台验证，确认修好后得分。&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;这题就算完事了！&lt;/strong&gt; 之后不用再管它，专心搞其他题目就行。&lt;/p&gt;
&lt;h3 id=&#34;和传统攻防awd的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#和传统攻防awd的区别&#34;&gt;#&lt;/a&gt; &lt;strong&gt;和传统攻防（AwD）的区别&lt;/strong&gt;：&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;对比项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;传统攻防（AwD）&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;ADP 攻防增强&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;攻击方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;全程用脚本批量攻击对手，抢 flag 刷分&lt;/td&gt;
&lt;td&gt;每个题只需攻击一次，提交 flag 就停手&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;防御方式&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;边修漏洞边防对手攻击，服务崩了会疯狂扣分&lt;/td&gt;
&lt;td&gt;修好漏洞并验证通过后，这题永远不扣分了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;选手压力&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;熬夜修漏洞 + 写攻击脚本，像打仗一样累&lt;/td&gt;
&lt;td&gt;像做作业，一题两步骤，做完就躺平&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;主办方压力&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;要维护几十台服务器，防止被选手打崩&lt;/td&gt;
&lt;td&gt;题目环境用完就删，省电省服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;adp的核心优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#adp的核心优势&#34;&gt;#&lt;/a&gt; &lt;strong&gt;ADP 的核心优势&lt;/strong&gt;：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;选手省力&lt;/strong&gt;：不用写自动化脚本，不用盯着服务是否崩溃，专注解题和修漏洞本身。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;主办方省钱&lt;/strong&gt;：题目环境用完就销毁，不用扛住几百个队伍的持续攻击。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;题目灵活&lt;/strong&gt;：比赛过程中可以随时换题（比如旧题下线，新题上线），增加新鲜感。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;适合谁玩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适合谁玩&#34;&gt;#&lt;/a&gt; &lt;strong&gt;适合谁玩？&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;新手友好&lt;/strong&gt;：适合刚接触攻防模式的小白，&lt;mark&gt;不用学写攻击脚本&lt;/mark&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;中小型比赛&lt;/strong&gt;：比如企业内训、高校校赛，运维成本低。&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;&lt;strong&gt;专精 Web/PWN 的选手&lt;/strong&gt;&lt;/mark&gt;：ADP 通常只出这两种题型，其他方向（如逆向、密码学）不参与。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;：&lt;mark&gt;ADP 就是 **“简化版攻防”**，把持续对抗拆成单次任务，让选手和主办方都轻松点～&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;混合模式（Mix） （&lt;mark&gt;&lt;strong&gt;解题 + 攻防二合一&lt;/strong&gt;&lt;/mark&gt;）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 机制 *&lt;/strong&gt;&lt;/em&gt;：结合解题与攻防，解题获取基础分后进入攻防对抗，分数动态增减。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 典型赛事 *&lt;/strong&gt;&lt;/em&gt;：iCTF 国际赛、RealWorld CTF（RWCTF）。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;其他衍生模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;*KoH（抢占山头）*&lt;/strong&gt;&lt;/em&gt;：攻击并控制中央服务器，写入队伍标识后防御加固，定期判定得分。&lt;/p&gt;
&lt;p&gt;​	&lt;mark&gt;&lt;strong&gt;RW（真实世界）&lt;/strong&gt;&lt;/mark&gt;：模拟真实漏洞利用，比如攻击物联网设备。&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;* 战争分享模式 *&lt;/strong&gt;&lt;/em&gt;：队伍互相出题 + 解题 + 分享思路，综合评分。&lt;/p&gt;
&lt;p&gt;​	&lt;em&gt;&lt;strong&gt;*AI 自动化（RHG）*&lt;/strong&gt;&lt;/em&gt;：编写自动化程序（bot）全自动挖掘漏洞并提交 flag。&lt;/p&gt;
&lt;h3 id=&#34;ctf主要题型及考察重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf主要题型及考察重点&#34;&gt;#&lt;/a&gt; CTF 主要题型及考察重点&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;| 题型          | 考察内容                  | 常用工具/技能                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|---------------|--------------------------------------------------------------------------|--------------------------------------------|&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| &lt;span class=&#34;strong&#34;&gt;**Web**&lt;/span&gt;       | SQL注入、XSS、文件上传、代码审计等漏洞利用      | Burp Suite、sqlmap、浏览器开发者工具 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| &lt;span class=&#34;strong&#34;&gt;**Reverse**&lt;/span&gt;   | 软件逆向分析、反编译、反调试                    | IDA Pro、OllyDbg、GDB         |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| &lt;span class=&#34;strong&#34;&gt;**PWN**&lt;/span&gt;       | 二进制漏洞利用（栈溢出、堆溢出等）              | pwntools、ROPgadget           |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| &lt;span class=&#34;strong&#34;&gt;**Crypto**&lt;/span&gt;    | 古典密码（如凯撒密码）、现代加密算法（AES、RSA）及自创加密技术破解   | CryptoSearcher、RSATool2       |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| &lt;span class=&#34;strong&#34;&gt;**MISC**&lt;/span&gt;      | 隐写术、流量分析、电子取证、数据编码/解码              | Stegsolve、Wireshark、Binwalk |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| &lt;span class=&#34;strong&#34;&gt;**Mobile**&lt;/span&gt;    | 安卓逆向分析、APK反编译                               | AndroidKiller、jd-gui         |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| &lt;span class=&#34;strong&#34;&gt;**PPC**&lt;/span&gt;       | 编程算法实现（如批量数据处理）                      | Python、C语言              &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;ctf学习路线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctf学习路线&#34;&gt;#&lt;/a&gt; CTF 学习路线&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初期基础&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;*Web 开发 *&lt;/strong&gt;&lt;/em&gt;：HTML/CSS/JS、PHP+MySQL 开发动态网站，掌握基础漏洞原理（如 SQL 注入）。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 工具入门 *&lt;/strong&gt;&lt;/em&gt;：Burp Suite 抓包改包、Python 脚本编写（requests 库）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中期漏洞专项&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 核心漏洞 *&lt;/strong&gt;&lt;/em&gt;：SQL 注入、文件上传、命令执行（RCE）、XSS/CSRF。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 靶场练习 *&lt;/strong&gt;&lt;/em&gt;：sqli-labs、upload-labs、DVWA。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后期综合实战&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 赛事参与 *&lt;/strong&gt;&lt;/em&gt;：BUUCTF、CTFHub 等平台刷题，参与校赛 / XCTF 联赛。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;* 知识扩展 *&lt;/strong&gt;&lt;/em&gt;：逆向工程（《加密与解密》）、二进制漏洞（《IDA Pro 权威指南》）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;比赛形式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比赛形式&#34;&gt;#&lt;/a&gt; 比赛形式&lt;/h3&gt;
&lt;p&gt;CTF 比赛一般分为线上赛和线下赛。通常来说，线上赛多为 &lt;code&gt;初赛&lt;/code&gt; ，线下赛多为 &lt;code&gt;决赛&lt;/code&gt; ，但是也不排除直接进行&lt;/p&gt;
&lt;h4 id=&#34;线上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线上&#34;&gt;#&lt;/a&gt; 线上&lt;/h4&gt;
&lt;p&gt;选手通过主办方搭建的比赛平台在线注册，在线做题并提交 flag，线上比赛多为解题模式，攻防模式较为少见。通常来说对于长时间未解出的题目，主办方会酌情给出 == 提示 ( &lt;code&gt;Hint&lt;/code&gt; )== 来帮助选手做题。&lt;/p&gt;
&lt;h4 id=&#34;线下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线下&#34;&gt;#&lt;/a&gt; 线下&lt;/h4&gt;
&lt;p&gt;选手前往比赛所在地，现场接入比赛网络进行比赛，&lt;mark&gt;线下多为 AWD 模式&lt;/mark&gt;，近年来随着比赛赛制的不断革新，线下赛也会出现多种模式混合进行，例如&lt;mark&gt;结合&lt;strong&gt;解题 + AWD&lt;/strong&gt; ，&lt;strong&gt;解题 + RW&lt;/strong&gt;&lt;/mark&gt; 等等&lt;/p&gt;
&lt;h3 id=&#34;题目类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目类型&#34;&gt;#&lt;/a&gt; 题目类型&lt;/h3&gt;
&lt;p&gt;​	在 CTF 中主要包含以下 5 个大类的题目，有些比赛会根据自己的侧重点单独添加某个分类，例如 == &lt;code&gt;移动设备(Mobile)&lt;/code&gt; ,  &lt;code&gt;电子取证(Forensics)&lt;/code&gt; == 等，近年来也会出来混合类型的题目，例如在 Web 中存在一个二进制程序，需要选手先利用 Web 的漏洞获取到二进制程序，之后通过逆向或是 Pwn 等方式获得最终 flag&lt;/p&gt;
&lt;h4 id=&#34;web&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web&#34;&gt;#&lt;/a&gt; Web&lt;/h4&gt;
&lt;p&gt;​	Web 类题目大部分情况下和网、Web、HTTP 等相关技能有关。主要考察选手对于 Web 攻防的一些知识技巧。诸如 == &lt;code&gt;SQL注入&lt;/code&gt; 、 &lt;code&gt;XSS&lt;/code&gt; 、 &lt;code&gt;代码执行&lt;/code&gt; 、 &lt;code&gt;代码审计&lt;/code&gt;  == 等等都是很常见的考点。一般情况下 Web 题目只会给出一个能够访问的 URL。部分题目会给出附件&lt;/p&gt;
&lt;h4 id=&#34;pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn&#34;&gt;#&lt;/a&gt; Pwn&lt;/h4&gt;
&lt;p&gt;​	Pwn 类题目重点考察选手对于 == &lt;code&gt;二进制漏洞的挖掘和利用&lt;/code&gt; &lt;mark&gt;能力，其考点也通常在&lt;/mark&gt; &lt;code&gt;堆栈溢出&lt;/code&gt; 、 &lt;code&gt;格式化漏洞&lt;/code&gt; 、 &lt;code&gt;UAF&lt;/code&gt; 、 &lt;code&gt;Double Free&lt;/code&gt; == 等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本 ( &lt;code&gt;Exploit&lt;/code&gt; )，进而对主办方给出的远程服务器进行攻击并获取 flag 通常来说 Pwn 类题目给出的远程服务器信息为 &lt;code&gt;nc IP_ADDRESS PORT&lt;/code&gt; ，例如 &lt;code&gt;nc 1.2.3.4 4567&lt;/code&gt;  这种形式，表示在 &lt;code&gt;1.2.3.4&lt;/code&gt;  这个 IP 的 &lt;code&gt;4567&lt;/code&gt;  端口上运行了该题目&lt;/p&gt;
&lt;h4 id=&#34;reverse&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#reverse&#34;&gt;#&lt;/a&gt; Reverse&lt;/h4&gt;
&lt;p&gt;Re 类题目考察选手 &lt;code&gt;逆向工程&lt;/code&gt; 能力。题目会给出一个&lt;mark&gt;可执行二进制文件&lt;/mark&gt;，有些时候也可能是 Android 的 APK 安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得 flag&lt;/p&gt;
&lt;h4 id=&#34;crypto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto&#34;&gt;#&lt;/a&gt; Crypto&lt;/h4&gt;
&lt;p&gt;​	Crypto 类题目考察选手对 &lt;code&gt;密码学&lt;/code&gt; 相关知识的了解程度，诸如 &lt;code&gt;RSA&lt;/code&gt; 、 &lt;code&gt;AES&lt;/code&gt; 、 &lt;code&gt;DES&lt;/code&gt;  等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。&lt;/p&gt;
&lt;h4 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; Misc&lt;/h4&gt;
&lt;p&gt;​	Misc 意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出 flag。&lt;/p&gt;
&lt;p&gt;​	常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT 相关等等。五花八门，种类繁多。&lt;/p&gt;
&lt;h2 id=&#34;刷题网站&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#刷题网站&#34;&gt;#&lt;/a&gt; 刷题网站&lt;/h2&gt;
&lt;h3 id=&#34;ctfhub&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ctfhub&#34;&gt;#&lt;/a&gt; CTFHub&lt;/h3&gt;
&lt;h4 id=&#34;misc-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-2&#34;&gt;#&lt;/a&gt; Misc&lt;/h4&gt;
&lt;h5 id=&#34;流量分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流量分析&#34;&gt;#&lt;/a&gt; 流量分析&lt;/h5&gt;
&lt;h6 id=&#34;数据库流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库流量&#34;&gt;#&lt;/a&gt; 数据库流量&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;mysql流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql流量&#34;&gt;#&lt;/a&gt; Mysql 流量&lt;/h5&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;服务端回一个 Response OK , 至此，登录验证就算是完成啦～&lt;/p&gt;
&lt;p&gt;后面客户端向服务端发起查询请求：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;==select @@version_comment limit 1==
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意得选择&lt;mark&gt;分组字节流&lt;/mark&gt;才行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;redis流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis流量&#34;&gt;#&lt;/a&gt; Redis 流量&lt;/h5&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;mongodb流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mongodb流量&#34;&gt;#&lt;/a&gt; MongoDB 流量&lt;/h5&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：搜索时要这样才行 ==ctfhub {== 不然找不到。&lt;/p&gt;
&lt;h6 id=&#34;协议流量分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协议流量分析&#34;&gt;#&lt;/a&gt; 协议流量分析&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;ICMP-data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：tshark - r &amp;quot;xxx&amp;quot; -Y &amp;quot;相关筛选命令&amp;quot; -T fields -e data &amp;gt; xxx&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;关键参数&lt;/mark&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-Y &amp;quot;icmp &amp;amp;&amp;amp; icmp.type==8&amp;quot;：过滤 ICMP 类型为 8（Echo Request）的包 。
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;这边等于 0 和 8 都可以，8 代表请求包，0 代表应答包&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-T fields -e data：仅输出 data 字段的十六进制内容 。&lt;/li&gt;
&lt;li&gt;flag.txt：将结果重定向到文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见 CTF 题型分析&lt;br /&gt;
单向传输（Type 8）：&lt;br /&gt;
Flag 数据通过客户端发送的多个请求包传输（如每个包携带一个字符）。&lt;/p&gt;
&lt;p&gt;​		解法：过滤 Type 8 并提取 data。&lt;br /&gt;
​	双向传输（Type 8 + Type 0）：&lt;br /&gt;
​		Flag 可能分散在请求和响应包中（需同时分析两者）。&lt;/p&gt;
&lt;p&gt;​		解法：过滤 icmp（不限制 Type），再根据包方向（ip.src/ip.dst）分类处理。&lt;/p&gt;
&lt;p&gt;​	隐蔽回传（Type 0）：&lt;br /&gt;
​		恶意程序通过响应包将敏感数据回传给攻击者（如数据外泄）。&lt;/p&gt;
&lt;p&gt;​		解法：过滤 Type 0 并提取 data。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Type 8 vs Type 0&lt;/strong&gt;：取决于 Flag 数据的&lt;strong&gt;传输方向&lt;/strong&gt;（谁发送的包）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CTF 经验法则&lt;/strong&gt;： 如果题目提示 “客户端发送了异常 Ping 包”，优先用 &lt;code&gt;Type 8&lt;/code&gt; ；若提示 “服务器返回了异常应答”，则用 &lt;code&gt;Type 0&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# coding = utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# --author：valecalida--&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; os &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; system &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; get_hex&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 调用tshark时需要将tshark加入环境变量，且脚本需要与流量包在一个路径下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;get_hex(&lt;span class=&#34;string&#34;&gt;&amp;quot;C:\\HelloCTF\\Toolkit\\Forensic\\Wireshark\\tshark -r C:\\Users\\HelloCTF_OS\\Desktop\\868_11254f60d1efdd79d251ec10b3db0f455262726b\\icmp_data.pcap -Y \&amp;quot;icmp &amp;amp;&amp;amp; icmp.type==8\&amp;quot; -T fields -e data &amp;gt; flag.txt&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;flag.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#int(..., 16)将十六进制字符串转为十进制整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(line[&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#使用pyshark解析并获取flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pyshark&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;# 显式设置tshark路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# pyshark.tshark.tshark.TSHARK_PATH = r&amp;#x27;C:\\HelloCTF\\Toolkit\\Forensic\\Wireshark\\tshark.exe&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cap = pyshark.FileCapture(&lt;span class=&#34;string&#34;&gt;&amp;quot;C:\\Users\\HelloCTF_OS\\Desktop\\868_11254f60d1efdd79d251ec10b3db0f455262726b\\icmp_data.pcap&amp;quot;&lt;/span&gt;, display_filter=&lt;span class=&#34;string&#34;&gt;&amp;quot;icmp &amp;amp;&amp;amp; icmp.type==8&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(cap[i].icmp.data_data)[&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cap.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ICMP-Length&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# coding = utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# --author：valecalida--&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; os &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; system &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; get_code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# # 调用tshark时需要将tshark加入环境变量，且脚本需要与流量包在一个路径下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;get_code(&lt;span class=&#34;string&#34;&gt;&amp;quot;C:\\HelloCTF\\Toolkit\\Forensic\\Wireshark\\tshark -r C:\\Users\\HelloCTF_OS\\Desktop\\869_0a362d3ce368678532f6a8e9fdf8cb531ec48572\\icmp_len.pcap -Y \&amp;quot;icmp &amp;amp;&amp;amp; icmp.type==0\&amp;quot; -T fields -e data.len &amp;gt; flag.txt&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;flag.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; line &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; f.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(line.strip()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#使用pyshark来对流量进行解析&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# coding = utf-8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# --author: valecalida--&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pyshark&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cap = pyshark.FileCapture(&lt;span class=&#34;string&#34;&gt;&amp;#x27;C:\\Users\\HelloCTF_OS\\Desktop\\869_0a362d3ce368678532f6a8e9fdf8cb531ec48572\\icmp_len.pcap&amp;#x27;&lt;/span&gt;, display_filter=&lt;span class=&#34;string&#34;&gt;&amp;quot;icmp &amp;amp;&amp;amp; icmp.type==8&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flag += (&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(cap[i].icmp.data_len)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cap.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;彩蛋&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#彩蛋&#34;&gt;#&lt;/a&gt; 彩蛋&lt;/h4&gt;
&lt;h5 id=&#34;首页&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#首页&#34;&gt;#&lt;/a&gt; 首页&lt;/h5&gt;
&lt;p&gt;在 FuzzDomain 工具中，{fuzz}.ctfhub.com 的设计核心是自动化生成测试目标。具体来说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态占位符作用
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;{fuzz} 是一个动态替换标记，相当于批量操作的 &amp;quot;通配符&amp;quot;&lt;/mark&gt;。工具会从您指定的字典文件（图中路径 Dicwww.txt）中逐行读取内容，将每一行文字替换到 {fuzz} 的位置，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS13d3ctZW84ZXExOWFueTJhLmN0Zmh1Yi5jb20=&#34;&gt;生成如 www.ctfhub.com&lt;/span&gt;、api.ctfhub.com 等完整域名进行探测。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;安全测试实战场景
&lt;ul&gt;
&lt;li&gt;这种设计特别适用于 CTF 竞赛 / 渗透测试中：假设攻击者想找出目标网站（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1jdGZodWItaGg0ay5jb20=&#34;&gt;如 ctfhub.com&lt;/span&gt;）隐藏的子域名，但无法穷举所有可能性。通过加载包含常见子域名字段的字典（如 admin、test、dev 等），工具可自动化生成并验证数千种组合，快速定位有效域名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;扩展性设计
&lt;ul&gt;
&lt;li&gt;界面下方的字符规则 pqrstuvwxyz0123456789 Min 1 Max 3 表明：除了使用预设字典，工具还支持按字符规则自动生成测试内容。例如当勾选该规则时，会自动生成 1-3 位包含指定字符的随机组合（如 p1、2qr 等），与 {fuzz} 配合实现双重探测策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种 {占位符}+ 字典 / 规则的组合方式，在保证测试覆盖率的同时大幅提升效率，是网络安全工具中常见的设计范式&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;软件名称：FuzzDomain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;源码地址：https://github.com/Chora10/FuzzDomain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;下载地址：https://pan.baidu.com/s/1o8bMaca  密码：is5f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;官方博客：http://www.ms509.com/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;彩蛋-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#彩蛋-2&#34;&gt;#&lt;/a&gt; 彩蛋&lt;/h5&gt;
&lt;h5 id=&#34;题目入口该题需要之前的题目提交flag后不关闭环境但是我这边提交后自动关闭环境没有办法实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题目入口该题需要之前的题目提交flag后不关闭环境但是我这边提交后自动关闭环境没有办法实现&#34;&gt;#&lt;/a&gt; 题目入口（该题需要之前的题目提交 flag 后不关闭环境，但是我这边提交后自动关闭环境没有办法实现）&lt;/h5&gt;
&lt;h5 id=&#34;writeup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#writeup&#34;&gt;#&lt;/a&gt; WriteUp&lt;/h5&gt;
&lt;h5 id=&#34;工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具&#34;&gt;#&lt;/a&gt; 工具&lt;/h5&gt;
&lt;p&gt;在 CTFHub 工具 页面翻到最后发现 egg&lt;/p&gt;
&lt;h5 id=&#34;赛事&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#赛事&#34;&gt;#&lt;/a&gt; 赛事&lt;/h5&gt;
&lt;h5 id=&#34;真题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#真题&#34;&gt;#&lt;/a&gt; 真题&lt;/h5&gt;
&lt;h5 id=&#34;投稿提交&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#投稿提交&#34;&gt;#&lt;/a&gt; 投稿提交&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2d1eW91bmcvQ2FwdGZFbmNvZGVyJUU2JTg4JTk2JUU4JTgwJTg1JUU0JUJEJUJGJUU3JTk0JUE4JUU5JTlBJThGJUU2JUIzJUEyJUU5JTgwJTkwJUU2JUI1JTgxJUU1JThEJUIzJUU1JThGJUFG&#34;&gt;https://github.com/guyoung/CaptfEncoder 或者使用随波逐流即可&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;flag[36:42]：a5f3a8&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93cml0ZXVwLmN0Zmh1Yi5jb20vT3RoZXIvJUU2JThBJTk1JUU3JUE4JUJGJUU4JUFGJUI0JUU2JTk4JThFL2VhZWQzYWJkLmh0bWw=&#34;&gt;https://writeup.ctfhub.com/Other/ 投稿说明 /eaed3abd.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;AES 解密&lt;/mark&gt;：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Rvb2wuY2hhY3VvLm5ldC9jcnlwdGFlcw==&#34;&gt;http://tool.chacuo.net/cryptaes&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;web-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-2&#34;&gt;#&lt;/a&gt; Web&lt;/h4&gt;
&lt;h5 id=&#34;目录遍历&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目录遍历&#34;&gt;#&lt;/a&gt; 目录遍历&lt;/h5&gt;
&lt;p&gt;​	&lt;strong&gt;知识点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		目录遍历是 web 中常见的基础操作，我们通常会通过目录的遍历来发现是否存在对我们有用的信息。&lt;/p&gt;
&lt;h5 id=&#34;phpinfo&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#phpinfo&#34;&gt;#&lt;/a&gt; PHPINFO&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;​	PHPinfo：输出 PHP 当前状态的大量信息，包含了 PHP 编译选项、启用的扩展、PHP 版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP 环境变量、操作系统版本信息、path 变量、配置选项的本地值和主值、HTTP 头和 PHP 授权信息 (License)。&lt;/li&gt;
&lt;li&gt;​	phpinfo () 同时是个很有价值的、包含所有 EGPCS (Environment, GET, POST, Cookie, Server) 数据的调试工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;备份文件下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#备份文件下载&#34;&gt;#&lt;/a&gt; 备份文件下载&lt;/h5&gt;
&lt;h6 id=&#34;网站源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网站源码&#34;&gt;#&lt;/a&gt; 网站源码&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;知识点&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;常见的网站源码的文件名有：&#39;web&#39;, &#39;website&#39;, &#39;backup&#39;, &#39;back&#39;, &#39;www&#39;, &#39;wwwroot&#39;, &#39;temp&#39; 等等。&lt;/li&gt;
&lt;li&gt;常见的网站源码备份文件后缀有：&#39;tar&#39;, &#39;tar.gz&#39;, &#39;zip&#39;, &#39;rar&#39; 等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;先使用 /www.zip 等给的不同来试，发现只有 /www.zip 有东西，而且直接打开还没有信息，只能网站打开才行&lt;/mark&gt;。&lt;/p&gt;
&lt;h6 id=&#34;bak文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bak文件&#34;&gt;#&lt;/a&gt; bak 文件&lt;/h6&gt;
&lt;p&gt;bak 文件泄露&lt;/p&gt;
&lt;p&gt;​	有些时候网站管理员可能为了方便，会在修改某个文件的时候先复制一份，将其命名为 xxx.bak。而&lt;mark&gt;大部分 Web Server 对 bak 文件并不做任何处理，导致可以直接下载，从而获取到网站某个文件的源代码&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;得加入 /index.php.bak 尤其是最后面的.bak 才行&lt;/mark&gt;&lt;/p&gt;
&lt;h6 id=&#34;vim缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vim缓存&#34;&gt;#&lt;/a&gt; vim 缓存&lt;/h6&gt;
&lt;p&gt;​	vim 交换文件名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在使用 vim 时会创建临时缓存文件，关闭 vim 时缓存文件则会被删除，当 vim 异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容&lt;/li&gt;
&lt;li&gt;以 index.php 为例：
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;第一次产生的交换文件名为 .index.php.swp&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;再次意外退出后，将会产生名为 &lt;mark&gt;.index.php.swo&lt;/mark&gt; 的交换文件&lt;/li&gt;
&lt;li&gt;第三次产生的交换文件则为 &lt;mark&gt;.index.php.swn&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;vim 一旦异常退出就会生成 swp 文件，且是隐藏文件&lt;/mark&gt;。隐藏文件要加点，首页也说了 flag 在 index.php 源码中 所以 &lt;mark&gt;/.index.php.swp&lt;/mark&gt; 直接下载。&lt;/p&gt;
&lt;h6 id=&#34;ds_store&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ds_store&#34;&gt;#&lt;/a&gt; .DS_Store&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;mark&gt;.DS_Store 是 Mac 下 Finder 用来保存如何展示文件 / 文件夹的数据文件，每个文件夹下对应一个&lt;/mark&gt;。&lt;/li&gt;
&lt;li&gt;如果开发 / 设计人员将.DS_Store 上传部署到线上环境，可能造成文件目录结构泄漏，特别是备份文件、源代码文件。&lt;/li&gt;
&lt;li&gt;在发布代码时未删除文件夹中隐藏的.DS_store，被发现后，获取了敏感的文件名等信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;mark&gt;下载后打开之后得用 linux 中的 cat 查看并且再用 URL 接着执行查看即可&lt;/mark&gt;。&lt;/p&gt;
&lt;h5 id=&#34;git泄露&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git泄露&#34;&gt;#&lt;/a&gt; Git 泄露&lt;/h5&gt;
&lt;h3 id=&#34;buuctf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#buuctf&#34;&gt;#&lt;/a&gt; BUUCTF&lt;/h3&gt;
&lt;h4 id=&#34;web-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web-3&#34;&gt;#&lt;/a&gt; Web&lt;/h4&gt;
&lt;h5 id=&#34;极客大挑战-2019easysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#极客大挑战-2019easysql&#34;&gt;#&lt;/a&gt; [极客大挑战 2019] EasySQL&lt;/h5&gt;
&lt;h6 id=&#34;思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思路&#34;&gt;#&lt;/a&gt; 思路&lt;/h6&gt;
&lt;p&gt;&lt;strong&gt;找输入点、试闭合符、构造万能密码&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;万能密码构造公式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;SQL&amp;#x27; or 1=1 # &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-- 或带闭合的版本（如本题用&lt;span class=&#34;code&#34;&gt;`&amp;#x27; or true #`&lt;/span&gt;）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;万能密码构造公式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;code&#34;&gt;    SQL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;code&#34;&gt;    &amp;#x27; or 1=1 # &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;code&#34;&gt;    -- 或带闭合的版本（如本题用`&amp;#x27; or true #`）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;进阶操作&lt;/strong&gt; 若过滤了空格用 &lt;code&gt;/**/&lt;/code&gt;  代替，过滤 &lt;code&gt;or&lt;/code&gt;  用 &lt;code&gt;||&lt;/code&gt;  连接符等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;工具使用&lt;/strong&gt; HackBar 直接修改 URL 参数发送请求（GET 传参用 &lt;code&gt;%23&lt;/code&gt;  代替 &lt;code&gt;#&lt;/code&gt; ）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;crypto-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto-2&#34;&gt;#&lt;/a&gt; Crypto&lt;/h4&gt;
&lt;h5 id=&#34;一眼就解密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一眼就解密&#34;&gt;#&lt;/a&gt; 一眼就解密&lt;/h5&gt;
&lt;h5 id=&#34;md5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#md5&#34;&gt;#&lt;/a&gt; MD5&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY21kNS5jb20v&#34;&gt;md5 在线解密破解，md5 解密加密&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;url编码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#url编码&#34;&gt;#&lt;/a&gt; Url 编码&lt;/h5&gt;
&lt;h5 id=&#34;看我回旋踢&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#看我回旋踢&#34;&gt;#&lt;/a&gt; 看我回旋踢&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;synt=flag&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;摩丝&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#摩丝&#34;&gt;#&lt;/a&gt; 摩丝&lt;/h5&gt;
&lt;h5 id=&#34;password一开始有点懵算是一种iq题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#password一开始有点懵算是一种iq题&#34;&gt;#&lt;/a&gt; password（一开始有点懵，算是一种 iq 题）&lt;/h5&gt;
&lt;p&gt;判断出是 10 个数，数字占 8 个，那么就从姓名缩写来看了&lt;/p&gt;
&lt;h5 id=&#34;变异凯撒&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#变异凯撒&#34;&gt;#&lt;/a&gt; 变异凯撒&lt;/h5&gt;
&lt;p&gt;​	上面的 acsii 码值对比表可以看到 == 第一个字符向后移了 5,== 第二个向后移了 6, 第三个向后移了 7, 以此类推，很容易想到变异凯撒即每个向后移的位数是前一个加 1&lt;/p&gt;
&lt;h5 id=&#34;quoted-printable&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quoted-printable&#34;&gt;#&lt;/a&gt; Quoted-printable&lt;/h5&gt;
&lt;p&gt;​	&lt;mark&gt;Quoted-printable 将任何 8-bit 字节值可编码为 3 个字符：一个等号 &amp;quot;=&amp;quot; 后跟随两个十六进制数字 (0–9 或 A–F) 表示该字节的数值。&lt;/mark&gt;&lt;br /&gt;
​	例如，ASCII 码换页符（十进制值为 12）可以表示为 &amp;quot;=0C&amp;quot;， 等号 &amp;quot;=&amp;quot;（十进制值为 61）必须表示为 &amp;quot;=3D&amp;quot;，gb2312 下 “中” 表示为 = D6=D0。除了可打印 ASCII 字符与换行符以外，所有字符必须表示为这种格式。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pa2VDb2tlL2FydGljbGUvZGV0YWlscy8xMDU4NzczNzM=&#34;&gt;https://blog.csdn.net/MikeCoke/article/details/105877373&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;篱笆墙的影子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#篱笆墙的影子&#34;&gt;#&lt;/a&gt; 篱笆墙的影子&lt;/h5&gt;
&lt;h5 id=&#34;rabbit&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rabbit&#34;&gt;#&lt;/a&gt; Rabbit&lt;/h5&gt;
&lt;h5 id=&#34;rsa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rsa&#34;&gt;#&lt;/a&gt; RSA&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = &lt;span class=&#34;number&#34;&gt;473398607161&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = &lt;span class=&#34;number&#34;&gt;4511491&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(gmpy2.invert(e,(p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(d)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;丢失的md5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#丢失的md5&#34;&gt;#&lt;/a&gt; 丢失的 MD5&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; k &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m=hashlib.md5()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            m.update(&lt;span class=&#34;string&#34;&gt;&amp;#x27;TASC&amp;#x27;&lt;/span&gt;.encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(i).encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;O3RJMV&amp;#x27;&lt;/span&gt;.encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(j).encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;WDJKX&amp;#x27;&lt;/span&gt;.encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(k).encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;ZM&amp;#x27;&lt;/span&gt;.encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            des=m.hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;e9032&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; des &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;da&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; des &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;911513&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; des:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; (des)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;alice与bob&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#alice与bob&#34;&gt;#&lt;/a&gt; Alice 与 Bob&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5qYjUxLm5ldC9qaXN1YW5xaS9mYWN0b3JfY2FsYw==&#34;&gt;在线分解质因数计算器工具 - 在线计算器 - 脚本之家在线工具&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5oaWVuY29kZS5jb20vaGFzaC5odG1s&#34;&gt;CTF 在线工具 - 哈希计算 | MD5、SHA1、SHA256、SHA384、SHA512、RIPEMD、RIPEMD160&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;大帝的密码武器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#大帝的密码武器&#34;&gt;#&lt;/a&gt; 大帝的密码武器&lt;/h5&gt;
&lt;p&gt;密文发现 C 为大写字母，而 C 移 13 位应该是大写 P，替换后，得到最终 flag。&lt;/p&gt;
&lt;h5 id=&#34;rsarsa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rsarsa&#34;&gt;#&lt;/a&gt; rsarsa&lt;/h5&gt;
&lt;p&gt;使用 RSA Tool2 工具解题&lt;/p&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# import gmpy2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# e = 65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# n = p*q&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# #密文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# C = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# d =gmpy2.invert(e,(p-1)*(q-1))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(d)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# #求明文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# M = pow(C,d,n)    #快速求幂取模运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# print(M)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = &lt;span class=&#34;number&#34;&gt;65537&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = &lt;span class=&#34;number&#34;&gt;9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = &lt;span class=&#34;number&#34;&gt;11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n = p*q&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#密文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;C = &lt;span class=&#34;number&#34;&gt;83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;d = &lt;span class=&#34;number&#34;&gt;56632047571190660567520341028861194862411428416862507034762587229995138605649836960220619903456392752115943299335385163216233744624623848874235303309636393446736347238627793022725260986466957974753004129210680401432377444984195145009801967391196615524488853620232925992387563270746297909112117451398527453977&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#求明文&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(C,d,n)    &lt;span class=&#34;comment&#34;&gt;#快速求幂取模运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(M)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;windows系统密码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#windows系统密码&#34;&gt;#&lt;/a&gt; Windows 系统密码&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;两个都用 Md5 试一下。&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;信息化时代的步伐&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息化时代的步伐&#34;&gt;#&lt;/a&gt; 信息化时代的步伐&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;题目说结果为中文，结合 36（4x9）位的纯数字密文，猜测为中文电码解密。&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvZGlhbmJhby5waHA=&#34;&gt;电报码在线翻译（国际摩尔斯电码及中文电码） - 千千秀字&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;凯撒替换呵呵&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#凯撒替换呵呵&#34;&gt;#&lt;/a&gt; 凯撒？替换？呵呵！&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWlwcWl1cC5jb20v&#34;&gt;Quipqiup - Cryptoquip 和 Cryptogram 求解器&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/fa5b30ef9a70de0a72aaf87bb44dc655.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/9a56f91a23107e16a1db6ddac5e7ea98.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;萌萌哒的八戒&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#萌萌哒的八戒&#34;&gt;#&lt;/a&gt; 萌萌哒的八戒&lt;/h5&gt;
&lt;p&gt;binwalk 然后猪圈密码即可&lt;/p&gt;
&lt;h5 id=&#34;权限获得第一步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#权限获得第一步&#34;&gt;#&lt;/a&gt; 权限获得第一步&lt;/h5&gt;
&lt;h4 id=&#34;misc-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-3&#34;&gt;#&lt;/a&gt; Misc&lt;/h4&gt;
&lt;h5 id=&#34;金三胖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#金三胖&#34;&gt;#&lt;/a&gt; 金三胖&lt;/h5&gt;
&lt;p&gt;使用&lt;mark&gt;随波逐流、StegSolve-FrameBrower&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;你竟然赶我走&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你竟然赶我走&#34;&gt;#&lt;/a&gt; 你竟然赶我走&lt;/h5&gt;
&lt;p&gt;使用&lt;mark&gt; strings、随波逐流、010Editor&lt;/mark&gt; 方法&lt;/p&gt;
&lt;h5 id=&#34;二维码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二维码&#34;&gt;#&lt;/a&gt; 二维码&lt;/h5&gt;
&lt;p&gt;可以使用&lt;mark&gt; 010Editor 或者是 strings&lt;/mark&gt; 进行查看，发现里面还有文件，所以采用了修改后缀名为 zip 发现有密码，或者使用 Binwalk 进行也可以，然后使用 archar 或者 ziperllo 进行爆破，出来密码即可。&lt;/p&gt;
&lt;h5 id=&#34;大白&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#大白&#34;&gt;#&lt;/a&gt; 大白&lt;/h5&gt;
&lt;h6 id=&#34;python代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#python代码&#34;&gt;#&lt;/a&gt; python 代码&lt;/h6&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; zlib&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;C:\\Users\HelloCTF_OS\\Desktop\\dabai.png&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    crc32_original = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data[&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;].&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(), &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 原始 CRC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; w &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; h &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# 重构 IHDR 数据块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ihdr_data = data[&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;] + struct.pack(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;i&amp;#x27;&lt;/span&gt;, w) + struct.pack(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;gt;i&amp;#x27;&lt;/span&gt;, h) + data[&lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        crc32 = zlib.crc32(ihdr_data) &amp;amp; &lt;span class=&#34;number&#34;&gt;0xffffffff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; crc32 == crc32_original:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;正确宽高：&lt;span class=&#34;subst&#34;&gt;&amp;#123;w&amp;#125;&lt;/span&gt; x &lt;span class=&#34;subst&#34;&gt;&amp;#123;h&amp;#125;&lt;/span&gt; (Hex: &lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(w)&amp;#125;&lt;/span&gt;, &lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(h)&amp;#125;&lt;/span&gt;)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            exit()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用随波逐流或者&lt;mark&gt; 010Editor&lt;/mark&gt; 进行修改宽高比&lt;/p&gt;
&lt;h5 id=&#34;wireshark&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wireshark&#34;&gt;#&lt;/a&gt; wireshark&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;http &amp;amp;&amp;amp; http.request.method == &amp;quot;POST&amp;quot;&lt;/mark&gt;&lt;/p&gt;
&lt;h6 id=&#34;分析图片信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析图片信息&#34;&gt;#&lt;/a&gt; 分析图片信息&lt;/h6&gt;
&lt;h5 id=&#34;乌镇峰会种图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#乌镇峰会种图&#34;&gt;#&lt;/a&gt; 乌镇峰会种图&lt;/h5&gt;
&lt;h5 id=&#34;n种方法解决&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#n种方法解决&#34;&gt;#&lt;/a&gt; N 种方法解决&lt;/h5&gt;
&lt;p&gt;使用随波逐流工具&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGUteC5jbi9lbmNvZGluZ3MvQmFzZTY0LmFzcHg=&#34;&gt;https://the-x.cn/encodings/Base64.aspx&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;基础破解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础破解&#34;&gt;#&lt;/a&gt; 基础破解&lt;/h5&gt;
&lt;h5 id=&#34;文件中的秘密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文件中的秘密&#34;&gt;#&lt;/a&gt; 文件中的秘密&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1FWElGLWU3NmZ5MDlmLm9yZw==&#34;&gt;EXIF 信息.org&lt;/span&gt;&lt;/strong&gt;:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leGlmaW5mby5vcmc=&#34;&gt;https://exifinfo.org&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leGlmaW5mby5vcmcv&#34;&gt;https://exifinfo.org/&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;zip伪加密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zip伪加密&#34;&gt;#&lt;/a&gt; zip 伪加密&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight txt&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;步骤1：识别ZIP文件结构&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ZIP文件由三部分组成，其十六进制特征如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;压缩源文件数据区（Local File Header）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;起始标志：50 4B 03 04&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;全局方式位标记位置：起始标志后的第3-4字节（偏移+2处）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;功能：存储实际文件数据，若未加密则标记为00 00。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;压缩源文件目录区（Central Directory）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;起始标志：50 4B 01 02&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;全局方式位标记位置：起始标志后的第5-6字节（偏移+4处）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;功能：记录文件路径信息，伪加密的关键修改位置在此处。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;目录结束标志（End of Central Directory）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;起始标志：50 4B 05 06，用于定位整个压缩包结构。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;步骤2：使用010 Editor定位数据区与目录区&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;打开文件：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    用010 Editor打开ZIP文件，通过搜索功能（Ctrl+F）输入以下特征码快速定位：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    数据区：搜索50 4B 03 04，每个匹配项对应一个文件的头部 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    目录区：搜索50 4B 01 02，每个匹配项对应一个目录条目。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;检查全局方式位标记：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    数据区：查看50 4B 03 04后的第3-4字节（偏移+2），未加密应为00 00，加密为09 00 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    目录区：查看50 4B 01 02后的第5-6字节（偏移+4），伪加密时此处为09 00，需改为00 00 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;步骤3：修改伪加密&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;判断加密类型：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    无加密：数据区和目录区的全局方式位均为00 00。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    伪加密：数据区为00 00，目录区为09 00 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    真加密：两者均为09 00。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;修改目录区标记：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	定位到目录区的50 4B 01 02，将其后第5-6字节的09 00改为00 00 。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;注意：若存在多个目录条目（如多层子文件夹），需逐个检查并修改 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;保存并验证：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	保存修改后的文件，尝试解压。若成功则伪加密已解除；若失败需检查其他可能的加密位或多级目录结构.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;strong&gt;一找 PK 头，二看标志位，奇改偶，伪加密解除&lt;/strong&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/direct/e0d9c37ffa4443cb8126d505954f1545.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;将 09 改为 00 即可&lt;/p&gt;
&lt;h5 id=&#34;被嗅探的流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#被嗅探的流量&#34;&gt;#&lt;/a&gt; 被嗅探的流量&lt;/h5&gt;
&lt;h5 id=&#34;lsb&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lsb&#34;&gt;#&lt;/a&gt; LSB&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;&lt;em&gt;先单蓝后双红绿，三通道组合最后试&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;em&gt;Alpha 通道碰不得，藏密必选 RGB&lt;/em&gt;&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;位平面选择原则三句黄金口诀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#位平面选择原则三句黄金口诀&#34;&gt;#&lt;/a&gt; 位平面选择原则（三句黄金口诀）&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;口诀①&lt;/strong&gt;：&amp;quot;LSB 隐写 0 位藏，9 成题目在此方&amp;quot; &lt;strong&gt;口诀②&lt;/strong&gt;：&amp;quot;红绿蓝三原色，同步勾选效率强&amp;quot; &lt;strong&gt;口诀③&lt;/strong&gt;：&amp;quot;高位平面先别慌，特殊变形才要防&amp;quot;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;为何只勾选 0 位？&lt;/strong&gt; LSB 隐写本质是将数据藏在像素值二进制的最低位（第 0 位），如同把字写在纸的最边缘。 &lt;em&gt;示例&lt;/em&gt;：像素值 &lt;code&gt;255&lt;/code&gt;  的二进制是 &lt;code&gt;11111111&lt;/code&gt; ，修改第 0 位后变为 &lt;code&gt;11111110&lt;/code&gt; （差值仅 1，肉眼不可见）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;什么情况要勾选 1/2 位？&lt;/strong&gt; 当题目明确提示 &amp;quot;高位隐写&amp;quot; 或常规 0 位无结果时（约占 CTF 题 10%），按以下优先级排查：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 位平面优先级顺序（覆盖99%题目）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;priority = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),  &lt;span class=&#34;comment&#34;&gt;# 红绿蓝0位（基础题）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),  &lt;span class=&#34;comment&#34;&gt;# 红0+绿1+蓝0（进阶组合）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)   &lt;span class=&#34;comment&#34;&gt;# 三通道1位（反套路题）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;rar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rar&#34;&gt;#&lt;/a&gt; rar&lt;/h5&gt;
&lt;h5 id=&#34;qr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#qr&#34;&gt;#&lt;/a&gt; qr&lt;/h5&gt;
&lt;h5 id=&#34;镜子里面的世界&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#镜子里面的世界&#34;&gt;#&lt;/a&gt; 镜子里面的世界&lt;/h5&gt;
&lt;h5 id=&#34;爱因斯坦&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#爱因斯坦&#34;&gt;#&lt;/a&gt; 爱因斯坦&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;binwalk -e &#39;/mnt/c/Users/HelloCTF_OS/Desktop/ 爱因斯坦 /misc2.jpg&#39;&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 真加密：数据区（50 4B 03 04后）和目录区（50 4B 01 02后）均含09 00 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 伪加密：仅目录区含09 00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexdump -C &lt;span class=&#34;string&#34;&gt;&amp;#x27;/mnt/c/Users/HelloCTF_OS/Desktop/爱因斯坦/_misc2.jpg.extracted/109B3.zip&amp;#x27;&lt;/span&gt; | grep -A1 &lt;span class=&#34;string&#34;&gt;&amp;quot;PK..&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;ningen&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ningen&#34;&gt;#&lt;/a&gt; ningen&lt;/h5&gt;
&lt;h5 id=&#34;小明的保险箱&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小明的保险箱&#34;&gt;#&lt;/a&gt; 小明的保险箱&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;通过 ff d9 发现 rar&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;easycap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#easycap&#34;&gt;#&lt;/a&gt; easycap&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;通过追踪流查看&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;隐藏的钥匙&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#隐藏的钥匙&#34;&gt;#&lt;/a&gt; 隐藏的钥匙&lt;/h5&gt;
&lt;h5 id=&#34;另外一个世界&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#另外一个世界&#34;&gt;#&lt;/a&gt; 另外一个世界&lt;/h5&gt;
&lt;h5 id=&#34;数据包中的线索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据包中的线索&#34;&gt;#&lt;/a&gt; 数据包中的线索&lt;/h5&gt;
&lt;p&gt;通过追踪流发现有 = 号，判断可能是 base64, 但是过长考虑可能是图片转 base64 那么，需要通过网站并且添加头 ==“data:image/jpeg;base64,” 点击追加 img 标签 ==，&lt;/p&gt;
&lt;p&gt;图片在线转换 base64 编码 - 在线 base64 编码转换成图片工具 (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2pzb25zLmNu&#34;&gt;jsons.cn&lt;/span&gt;)](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5qc29ucy5jbi9pbWcyYmFzZTY0LyVFRiVCQyU4OQ==&#34;&gt;http://www.jsons.cn/img2base64/）&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;神秘龙卷风&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#神秘龙卷风&#34;&gt;#&lt;/a&gt; 神秘龙卷风&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;BrainFuck 解密&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;flag&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flag&#34;&gt;#&lt;/a&gt; FLAG&lt;/h5&gt;
&lt;p&gt;使用 stegsolve 进行 rgb 查看，然后保存 1.zip, 因为是&lt;mark&gt; pk 开头&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;假如给我三天光明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#假如给我三天光明&#34;&gt;#&lt;/a&gt; 假如给我三天光明&lt;/h5&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbWFnZXMyMDE3LmNuYmxvZ3MuY29tL2Jsb2cvMTI5NDU4OC8yMDE3MTIvMTI5NDU4OC0yMDE3MTIwOTAyMDQxMDcxOC0yMDk3MTczOTI4LnBuZw==&#34;&gt;https://images2017.cnblogs.com/blog/1294588/201712/1294588-20171209020410718-2097173928.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot;  /&amp;gt;&lt;/p&gt;
&lt;p&gt;得到解压密码是&lt;mark&gt; kmdonowg&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb3JzZWNvZGUud29ybGQvaW50ZXJuYXRpb25hbC9kZWNvZGVyL2F1ZGlvLWRlY29kZXItYWRhcHRpdmUuaHRtbA==&#34;&gt;Morse Code Audio Decoder&lt;/span&gt;&lt;/p&gt;
&lt;p wpei08732?23dz=&#34;&#34;&gt;解码得：CTFWPEI08732?23D 换成 flag 还要换小写 flag&lt;/p&gt;
&lt;h5 id=&#34;后门查杀&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后门查杀&#34;&gt;#&lt;/a&gt; 后门查杀&lt;/h5&gt;
&lt;p&gt;使用&lt;mark&gt; D 盾或者火绒安全&lt;/mark&gt;进行查找然后再找到对应的文件查看即可&lt;/p&gt;
&lt;h5 id=&#34;webshell后门少zp文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webshell后门少zp文件&#34;&gt;#&lt;/a&gt; webshell 后门 (少 zp 文件)&lt;/h5&gt;
&lt;h5 id=&#34;来首歌吧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#来首歌吧&#34;&gt;#&lt;/a&gt; 来首歌吧&lt;/h5&gt;
&lt;p&gt;使用在线工具进行解密&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MorseFM&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb3JzZWZtLmNvbS8=&#34;&gt;https://morsefm.com/&lt;/span&gt; （支持 WAV/MP3 等格式，支持多语言，适合快速解码）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Morse Code Magic&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb3JzZWNvZGVtYWdpYy5jb20vbW9yc2UtY29kZS1hdWRpby1kZWNvZGVyLw==&#34;&gt;https://morsecodemagic.com/morse-code-audio-decoder/&lt;/span&gt; （专注 WAV/MP3 解码，4 分钟音频 5 秒完成）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;面具下的flag&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#面具下的flag&#34;&gt;#&lt;/a&gt; 面具下的 flag&lt;/h5&gt;
&lt;p&gt;可以先用 strings 提取，但是需要对比两个找不同，发现少两个 + 号再解析不然出错&lt;/p&gt;
&lt;h5 id=&#34;荷兰宽带数据泄露&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#荷兰宽带数据泄露&#34;&gt;#&lt;/a&gt; 荷兰宽带数据泄露&lt;/h5&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmlyc29mdC5uZXQv&#34;&gt;NirSoft - freeware utilities: password recovery, system utilities, desktop utilities&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;搜索 username 或者 password，这可能是一个&lt;mark&gt;路由器配置文件 (bin)&lt;/mark&gt;，所以用到 RouterPassView 软件&lt;/p&gt;
&lt;h5 id=&#34;九连环&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#九连环&#34;&gt;#&lt;/a&gt; 九连环&lt;/h5&gt;
&lt;p&gt;通过随波逐流发现有伪加密，所以搜索 50 4B 01 02 修改&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;安装命令&lt;/mark&gt;：sudo apt update &amp;amp;&amp;amp; sudo apt install steghide&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;执行命令&lt;/mark&gt;:steghide extract -sf &#39;/mnt/c/Users/HelloCTF_OS/Desktop/389a0c11-d0df-4180-829a-b529e6b0a1bc/_123456cry.jpg.extracted/asd/good - 已合并.jpg&#39;&lt;/p&gt;
&lt;h5 id=&#34;认真你就输了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#认真你就输了&#34;&gt;#&lt;/a&gt; 认真你就输了&lt;/h5&gt;
&lt;p&gt;随波逐流发现文件头是 zip 文件，要么修改文件要么 binwalk 就行&lt;/p&gt;
&lt;h5 id=&#34;被偷走的文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#被偷走的文件&#34;&gt;#&lt;/a&gt; 被偷走的文件&lt;/h5&gt;
&lt;p&gt;pcap 文件用 wireshark 并且发现 ftp-data 有 rar 文件进行到处对象导出即可。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;导出文件三种方法：&lt;/mark&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到处对象&lt;/li&gt;
&lt;li&gt;追踪流然后原始数据导出即可&lt;/li&gt;
&lt;li&gt;导出字节流&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;被劫持的神秘礼物&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#被劫持的神秘礼物&#34;&gt;#&lt;/a&gt; 被劫持的神秘礼物&lt;/h5&gt;
&lt;h5 id=&#34;藏藏藏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#藏藏藏&#34;&gt;#&lt;/a&gt; 藏藏藏&lt;/h5&gt;
&lt;p&gt;打开 010 发现 pk 删除前面所有内容保存 zip 解压后扫码即可&lt;/p&gt;
&lt;h5 id=&#34;佛系青年&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#佛系青年&#34;&gt;#&lt;/a&gt; 佛系青年&lt;/h5&gt;
&lt;h5 id=&#34;你猜我是个啥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#你猜我是个啥&#34;&gt;#&lt;/a&gt; 你猜我是个啥&lt;/h5&gt;
&lt;h5 id=&#34;秘密文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#秘密文件&#34;&gt;#&lt;/a&gt; 秘密文件&lt;/h5&gt;
&lt;p&gt;筛选后发现有&lt;mark&gt; ftp 优先查看&lt;/mark&gt;，发现里面有 rar 文件，还有一点其实随波逐流里面也可以直接查看并且通过分离破解即可获取 flag.&lt;/p&gt;
&lt;h5 id=&#34;刷新过的图片&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#刷新过的图片&#34;&gt;#&lt;/a&gt; 刷新过的图片&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;java Extract ``/``图片的绝对路径 [``-``p 密码] [``-``e 输出文件]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;题目说 “刷新过的图片”，结合键盘上刷新键为 F5 可判断此题为 F5 隐写，运用工具&lt;mark&gt; F5-steganography&lt;/mark&gt; 可以对其中的内容进行提取&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRjb2RlLmNvbS9naF9taXJyb3JzL2Y1L0Y1LXN0ZWdhbm9ncmFwaHk/dXRtX3NvdXJjZT1jc2RuX2dpdGh1Yl9hY2NlbGVyYXRvciZhbXA7aXNMb2dpbj0x&#34;&gt;项目首页 - F5-steganography:F5 steganography - GitCode&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;java Extract &#39;/mnt/c/Use&lt;br /&gt;
rs/HelloCTF_OS/Desktop/a05ed035-b476-49d6-9b32-462ff13c5944/Misc.jpg&#39;&lt;/p&gt;
&lt;h5 id=&#34;鸡你太美&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#鸡你太美&#34;&gt;#&lt;/a&gt; 鸡你太美&lt;/h5&gt;
&lt;p&gt;发现缺少 gif 头，&lt;mark&gt;47 49 46 38&lt;/mark&gt;.&lt;/p&gt;
&lt;h5 id=&#34;just_a_rar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#just_a_rar&#34;&gt;#&lt;/a&gt; just_a_rar&lt;/h5&gt;
&lt;p&gt;破解密码然后查看 exif 信息即可&lt;/p&gt;
&lt;h5 id=&#34;snake原先的网站没有了所以解析不了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#snake原先的网站没有了所以解析不了&#34;&gt;#&lt;/a&gt; snake (原先的网站没有了，所以解析不了)&lt;/h5&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;who&lt;span class=&#34;emphasis&#34;&gt;_knew_&lt;/span&gt;serpent&lt;span class=&#34;emphasis&#34;&gt;_cipher_&lt;/span&gt;existed&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3NlcnBlbnQub25saW5lLWRvbWFpbi10b29scy5jb20v&#34;&gt;Serpent Encryption – Easily encrypt or decrypt strings or files&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pLWJsb2cuY3NkbmltZy5jbi9ibG9nX21pZ3JhdGUvNTkzYmU3NmQwMzhkZmVjZTBmY2VlMGVkMDUyMDU2MWEucG5n&#34;&gt;https://i-blog.csdnimg.cn/blog_migrate/593be76d038dfece0fcee0ed0520561a.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;菜刀666&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#菜刀666&#34;&gt;#&lt;/a&gt; 菜刀 666&lt;/h5&gt;
&lt;p&gt;菜刀使用 http.request.method&lt;mark&gt;POST，并且查看 z1 和 z2，发现 z2 有 FF D8 是 jpg 导入 010 发现密码&lt;/mark&gt;，然后解压即可&lt;/p&gt;
&lt;h5 id=&#34;一叶障目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一叶障目&#34;&gt;#&lt;/a&gt; 一叶障目&lt;/h5&gt;
&lt;p&gt;可以使用之前的 Python 脚本或者随波逐流即可&lt;/p&gt;
&lt;h5 id=&#34;纳尼&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#纳尼&#34;&gt;#&lt;/a&gt; 纳尼&lt;/h5&gt;
&lt;p&gt;如果 git 分帧查看不了，那么就用&lt;mark&gt; stegsolve 的 framebrower&lt;/mark&gt; 来查看即可。&lt;/p&gt;
&lt;h5 id=&#34;神奇的二维码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#神奇的二维码&#34;&gt;#&lt;/a&gt; 神奇的二维码&lt;/h5&gt;
&lt;p&gt;Python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;decode&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;f&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	n = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			f = base64.b64decode(f)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			n += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;[+]Base64共decode了&amp;#123;0&amp;#125;次，最终解码结果如下:&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(n))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(f,&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; __name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	f = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;C:\\Users\\HelloCTF_OS\\Desktop\\base64.txt&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	decode(f)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;粗线条是 &lt;code&gt;-&lt;/code&gt; , 细线条是 &lt;code&gt;.&lt;/code&gt; &lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;excel破解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#excel破解&#34;&gt;#&lt;/a&gt; excel 破解&lt;/h5&gt;
&lt;p&gt;使用 strings 或者随波逐流查看即可&lt;/p&gt;
&lt;h5 id=&#34;来题中等的吧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#来题中等的吧&#34;&gt;#&lt;/a&gt; 来题中等的吧&lt;/h5&gt;
&lt;p&gt;粗细记录摩斯密码即可&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250405030603419.png&amp;quot; alt=&amp;quot;image-20250405030603419&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;谁赢了比赛&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#谁赢了比赛&#34;&gt;#&lt;/a&gt; 谁赢了比赛？&lt;/h5&gt;
&lt;p&gt;使用 Binwalk 进行分离并且破解密码，之后使用 qcr 进行二维码解析&lt;/p&gt;
&lt;h5 id=&#34;actf新生赛2020outguess&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020outguess&#34;&gt;#&lt;/a&gt; ACTF 新生赛 2020] outguess&lt;/h5&gt;
&lt;p&gt;发现 exif 再通过社会主义解密，然后通过题目猜测发现是 outguess，通过一下密码解密&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;outguess -k &amp;#x27;abc&amp;#x27; -r mmm.jpg flag.txt &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;outguess -k &#39;abc&#39; -r &#39;/mnt/c/Users/HelloCTF_OS/Desktop/attachment/tmp/huhuhu/mmm.jpg&#39; &#39;/mnt/c/Users/HelloCTF_OS/Desktop/attachment/tmp/huhuhu/flag.txt&#39;&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;梅花香之苦寒来&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#梅花香之苦寒来&#34;&gt;#&lt;/a&gt; 梅花香之苦寒来&lt;/h5&gt;
&lt;p&gt;使用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1nbnVwbG90JmFtcDtzcG09MTAwMS4yMTAxLjMwMDEuNzAyMA==&#34;&gt; gnuplot&lt;/span&gt; 画图即可&lt;/p&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# with open(&amp;#x27;C:\\Users\\HelloCTF_OS\\Desktop\\hex.txt&amp;#x27;, &amp;#x27;r&amp;#x27;) as h:     # hex.txt为要转换的文本文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     val = h.read()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     h.close()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# with open(&amp;#x27;C:\\Users\\HelloCTF_OS\\Desktop\\result.txt&amp;#x27;, &amp;#x27;w&amp;#x27;) as re: # 转换完成后写入result.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     tem = &amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     for i in range(0, len(val), 2):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         tem = &amp;#x27;0x&amp;#x27; + val[i] + val[i+1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         tem = int(tem, base=16)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         print(chr(tem), end=&amp;quot;&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         re.write(chr(tem))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     re.close()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;C:\\Users\\HelloCTF_OS\\Desktop\\result.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; res:  &lt;span class=&#34;comment&#34;&gt;# 坐标格式文件比如(7,7)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    re = res.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    res.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;C:\\Users\\HelloCTF_OS\\Desktop\\gnuplotTxt.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;w&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; gnup:   &lt;span class=&#34;comment&#34;&gt;# 将转换后的坐标写入gnuplotTxt.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    re = re.split()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tem = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(re)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tem = re[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tem = tem.lstrip(&lt;span class=&#34;string&#34;&gt;&amp;#x27;(&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tem = tem.rstrip(&lt;span class=&#34;string&#34;&gt;&amp;#x27;)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(tem)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; tem[j] == &lt;span class=&#34;string&#34;&gt;&amp;#x27;,&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                tem = tem[:j] + &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt; + tem[j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gnup.write(tem + &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    gnup.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;wustctf2020find_me在线网站打不开&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#wustctf2020find_me在线网站打不开&#34;&gt;#&lt;/a&gt; [WUSTCTF2020] find_me（在线网站打不开）&lt;/h5&gt;
&lt;p&gt;使用 exiftool xxx，然后&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvd2VuYmVuamlhbWkucGhwP3M9bWFuZ3dlbg==&#34;&gt;盲文在线加解密：https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;flag&amp;#123;y$0$u&lt;span class=&#34;emphasis&#34;&gt;_f$1$n$d$_&lt;/span&gt;M$e$e$e$e$e&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/4ff6c936f2b993b6adf9ed29d0f06748.png#pic_center&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;h5 id=&#34;穿越时空的思念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#穿越时空的思念&#34;&gt;#&lt;/a&gt; 穿越时空的思念&lt;/h5&gt;
&lt;p&gt;之前使用静音删除左声道，单声道导出右声道 wav 使用在线网站但是解析有些许错误，所以使用手动解析&lt;/p&gt;
&lt;h5 id=&#34;guet-ctf2019ko&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#guet-ctf2019ko&#34;&gt;#&lt;/a&gt; [GUET-CTF2019]KO&lt;/h5&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;C:\Users\HelloCTF_OS\AppData\Roaming\Typora\typora-user-images\image-20250405161154522.png&amp;quot; alt=&amp;quot;image-20250405161154522&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h5 id=&#34;actf新生赛2020base64隐写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#actf新生赛2020base64隐写&#34;&gt;#&lt;/a&gt; [ACTF 新生赛 2020] base64 隐写&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;base64 = &lt;span class=&#34;string&#34;&gt;&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binstr=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strings = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;C:\Users\HelloCTF_OS\Desktop\attachment\tmp\近在眼前\ComeOn!.txt&amp;#x27;&lt;/span&gt;).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;e = strings.splitlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; e:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i.find(&lt;span class=&#34;string&#34;&gt;&amp;quot;==&amp;quot;&lt;/span&gt;) &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp = &lt;span class=&#34;built_in&#34;&gt;bin&lt;/span&gt;((base64.find(i[-&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]) &amp;amp; &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;))[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# 取倒数第3个字符，在base64找到对应的索引数（就是编码数），取低4位，再转换为二进制字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        binstr = binstr + &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; - &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(temp)) + temp  &lt;span class=&#34;comment&#34;&gt;# 二进制字符补高位0后，连接字符到binstr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; i.find(&lt;span class=&#34;string&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;) &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temp = &lt;span class=&#34;built_in&#34;&gt;bin&lt;/span&gt;((base64.find(i[-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]) &amp;amp; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]  &lt;span class=&#34;comment&#34;&gt;# 取倒数第2个字符，在base64找到对应的索引数（就是编码数），取低2位，再转换为二进制字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        binstr = binstr + &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; * (&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; - &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(temp)) + temp  &lt;span class=&#34;comment&#34;&gt;# 二进制字符补高位0后，连接字符到binstr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(binstr), &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt; = &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(binstr[i:i + &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;], &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))  &lt;span class=&#34;comment&#34;&gt;# 从左到右，每取8位转换为ascii字符，连接字符到字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;swpu2019我有一只马里奥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpu2019我有一只马里奥&#34;&gt;#&lt;/a&gt; [SWPU2019] 我有一只马里奥&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/470b5a3cf4221c8ae78e537ab080d524.jpeg&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://i-blog.csdnimg.cn/blog_migrate/227814f4d8ae4900b77417b09ad5b617.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;notepad 1.txt:flag.txt&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;使用工具 NtfsStreamsEditor 或 AlternateStreamView 打开存放 1.txt 文件的文件夹，扫描出现隐藏文件文件，导出后打开，得到 flag。&lt;/p&gt;
&lt;p&gt;​		&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmlyc29mdC5uZXQvdXRpbHMvYWx0ZXJuYXRlX2RhdGFfc3RyZWFtcy5odG1sP3NwbT1hMmM2aC4xMjg3MzYzOS5hcnRpY2xlLWRldGFpbC42LjY5YWU0MjQ1UkIyQ2pL&#34;&gt;AlternateStreamView (跳转页面后，向下滑动，下载对应的 32 或 64 位软件)&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;mrctf2020ezmisc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mrctf2020ezmisc&#34;&gt;#&lt;/a&gt; [MRCTF2020]ezmisc&lt;/h5&gt;
&lt;p&gt;修改宽高&lt;/p&gt;
&lt;h5 id=&#34;gxyctf2019gakki&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gxyctf2019gakki&#34;&gt;#&lt;/a&gt; [GXYCTF2019]gakki&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# -*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#Author: mochu7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;alphabet = &lt;span class=&#34;string&#34;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&amp;amp;*()_+- =\\&amp;#123;\\&amp;#125;[]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;strings = &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;C:\Users\HelloCTF_OS\Desktop\attachment\_wolaopo.jpg.extracted\218E8\flag.txt&amp;#x27;&lt;/span&gt;).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; alphabet:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	counts = strings.count(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	i = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#123;0&amp;#125;&amp;#x27;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	result[i] = counts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;res = &lt;span class=&#34;built_in&#34;&gt;sorted&lt;/span&gt;(result.items(),key=&lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; item:item[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;],reverse=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; data &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; res:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	flag = &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(flag[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],end=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&#34;hbnis218caesar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hbnis218caesar&#34;&gt;#&lt;/a&gt; [HBNIS218]caesar&lt;/h5&gt;
&lt;p&gt;python 代码&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;decrypt&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;ciphertext, shift&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;移位解密函数&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    plaintext = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; char &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ciphertext:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; char.isalpha(): &lt;span class=&#34;comment&#34;&gt;# 如果是字母，进行移位解密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; char.isupper():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                plaintext += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(char) - shift - &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) % &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;65&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 大写字母移位解密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                plaintext += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(char) - shift - &lt;span class=&#34;number&#34;&gt;97&lt;/span&gt;) % &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;97&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# 小写字母移位解密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;: &lt;span class=&#34;comment&#34;&gt;# 如果不是字母，直接输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            plaintext += char&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; plaintext&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 加密密文和移位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ciphertext = &lt;span class=&#34;string&#34;&gt;&amp;#x27;gmbhjtdbftbs&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;shift = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ciphertext = ciphertext.lower()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 小写易于观察&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 枚举所有可能的移位数，输出所有解密结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    plaintext = decrypt(ciphertext, i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d %s&amp;quot;&lt;/span&gt;% (i, plaintext))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;随波逐流&lt;/p&gt;
&lt;h5 id=&#34;suctf2018single-dog&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#suctf2018single-dog&#34;&gt;#&lt;/a&gt; [SUCTF2018]single dog&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;aaencode 编码&lt;/mark&gt;&lt;/p&gt;
&lt;h5 id=&#34;黑客帝国&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#黑客帝国&#34;&gt;#&lt;/a&gt; 黑客帝国&lt;/h5&gt;
&lt;p&gt;导入十六进制，然后发现打开不了，换成 jpg 头，也就是&lt;mark&gt; FF D8 4A46&lt;/mark&gt; 之前的删除掉&lt;/p&gt;
&lt;h5 id=&#34;hbnis2018低个头&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hbnis2018低个头&#34;&gt;#&lt;/a&gt; [HBNIS2018] 低个头&lt;/h5&gt;
&lt;p&gt;键盘按键&lt;/p&gt;
&lt;h5 id=&#34;swpu2019伟大的侦探&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swpu2019伟大的侦探&#34;&gt;#&lt;/a&gt; [SWPU2019] 伟大的侦探&lt;/h5&gt;
&lt;p&gt;&lt;mark&gt;使用 010 Editor 打开密码.txt 文件，选择编辑方式为 EBCDIC (B)，找到明文密码&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;之后对照跳舞的小人即可&lt;/p&gt;
&lt;p&gt;[BUUCTF &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzE0MDQxMjQ=&#34;&gt;SWPU2019] 伟大的侦探 1 - 阿里云开发者社区&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="CTF学习" scheme="http://whw-colab.github.io/categories/CTF%E5%AD%A6%E4%B9%A0/" />
        <updated>2017-05-26T04:12:57.000Z</updated>
    </entry>
</feed>
